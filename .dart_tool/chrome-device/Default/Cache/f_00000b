define(['dart_sdk', 'packages/app_itr/etc/DBColumnNames.dart', 'packages/app_itr/etc/PolygonGenerator.dart', 'packages/sqflite_common/src/open_options.dart', 'packages/sqflite/src/factory_impl.dart', 'packages/path/src/path_set.dart', 'packages/app_itr/helpers/classes/Levantamento.dart', 'packages/app_itr/helpers/classes/EstradaPoint.dart', 'packages/app_itr/helpers/classes/RotaEscolarPoint.dart', 'packages/mobx/src/api/extensions.dart', 'packages/latlong2/latlong.dart', 'packages/google_maps_flutter_platform_interface/src/types/location.dart', 'packages/mobx/src/api/store.dart', 'packages/geolocator_platform_interface/src/models/position.dart'], (function load__packages__app_itr__helpers__classes__user_dart(dart_sdk, packages__app_itr__etc__DBColumnNames$46dart, packages__app_itr__etc__PolygonGenerator$46dart, packages__sqflite_common__src__open_options$46dart, packages__sqflite__src__factory_impl$46dart, packages__path__src__path_set$46dart, packages__app_itr__helpers__classes__Levantamento$46dart, packages__app_itr__helpers__classes__EstradaPoint$46dart, packages__app_itr__helpers__classes__RotaEscolarPoint$46dart, packages__mobx__src__api__extensions$46dart, packages__latlong2__latlong$46dart, packages__google_maps_flutter_platform_interface__src__types__location$46dart, packages__mobx__src__api__store$46dart, packages__geolocator_platform_interface__src__models__position$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const _js_helper = dart_sdk._js_helper;
  const convert = dart_sdk.convert;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const io = dart_sdk.io;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const DBColumnNames = packages__app_itr__etc__DBColumnNames$46dart.etc__DBColumnNames;
  const PolygonGenerator = packages__app_itr__etc__PolygonGenerator$46dart.etc__PolygonGenerator;
  const sqlite_api = packages__sqflite_common__src__open_options$46dart.sqlite_api;
  const sqflite = packages__sqflite__src__factory_impl$46dart.sqflite;
  const path$ = packages__path__src__path_set$46dart.path;
  const Levantamento = packages__app_itr__helpers__classes__Levantamento$46dart.helpers__classes__Levantamento;
  const EstradaPoint = packages__app_itr__helpers__classes__EstradaPoint$46dart.helpers__classes__EstradaPoint;
  const RotaEscolarPoint = packages__app_itr__helpers__classes__RotaEscolarPoint$46dart.helpers__classes__RotaEscolarPoint;
  const observable_collections = packages__mobx__src__api__extensions$46dart.src__api__observable_collections;
  const reaction = packages__mobx__src__api__extensions$46dart.src__api__reaction;
  const core$ = packages__mobx__src__api__extensions$46dart.src__core;
  const atom_extensions = packages__mobx__src__api__extensions$46dart.src__core__atom_extensions;
  const latlong = packages__latlong2__latlong$46dart.latlong;
  const location = packages__google_maps_flutter_platform_interface__src__types__location$46dart.src__types__location;
  const store = packages__mobx__src__api__store$46dart.src__api__store;
  const position = packages__geolocator_platform_interface__src__models__position$46dart.src__models__position;
  var user$ = Object.create(dart.library);
  var municipio = Object.create(dart.library);
  var imovel$ = Object.create(dart.library);
  var PontePoint = Object.create(dart.library);
  var ImovelRoute = Object.create(dart.library);
  var db$ = Object.create(dart.library);
  var ImovelGeoPoint = Object.create(dart.library);
  var login_data_store = Object.create(dart.library);
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $toString = dartx.toString;
  var $runes = dartx.runes;
  var $toList = dartx.toList;
  var $length = dartx.length;
  var $split = dartx.split;
  var $add = dartx.add;
  var $first = dartx.first;
  var $contains = dartx.contains;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    IdentityMapOfString$ObjectN: () => (T.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T.ObjectN())))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    JSArrayOfImovelGeoPoint: () => (T.JSArrayOfImovelGeoPoint = dart.constFn(_interceptors.JSArray$(ImovelGeoPoint.ImovelGeoPoint)))(),
    IdentityMapOfint$String: () => (T.IdentityMapOfint$String = dart.constFn(_js_helper.IdentityMap$(core.int, core.String)))(),
    JSArrayOfLatLngWithAngle: () => (T.JSArrayOfLatLngWithAngle = dart.constFn(_interceptors.JSArray$(PolygonGenerator.LatLngWithAngle)))(),
    ListOfLatLngWithAngle: () => (T.ListOfLatLngWithAngle = dart.constFn(core.List$(PolygonGenerator.LatLngWithAngle)))(),
    DatabaseN: () => (T.DatabaseN = dart.constFn(dart.nullable(sqlite_api.Database)))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    DatabaseAndintToFutureOfvoid: () => (T.DatabaseAndintToFutureOfvoid = dart.constFn(dart.fnType(T.FutureOfvoid(), [sqlite_api.Database, core.int])))(),
    MunicipioN: () => (T.MunicipioN = dart.constFn(dart.nullable(municipio.Municipio)))(),
    ImovelGeoPointN: () => (T.ImovelGeoPointN = dart.constFn(dart.nullable(ImovelGeoPoint.ImovelGeoPoint)))(),
    ImovelN: () => (T.ImovelN = dart.constFn(dart.nullable(imovel$.Imovel)))(),
    ImovelRouteN: () => (T.ImovelRouteN = dart.constFn(dart.nullable(ImovelRoute.ImovelRoute)))(),
    LevantamentoN: () => (T.LevantamentoN = dart.constFn(dart.nullable(Levantamento.Levantamento)))(),
    EstradaPointN: () => (T.EstradaPointN = dart.constFn(dart.nullable(EstradaPoint.EstradaPoint)))(),
    RotaEscolarPointN: () => (T.RotaEscolarPointN = dart.constFn(dart.nullable(RotaEscolarPoint.RotaEscolarPoint)))(),
    PontePointN: () => (T.PontePointN = dart.constFn(dart.nullable(PontePoint.PontePoint)))(),
    PonteImageN: () => (T.PonteImageN = dart.constFn(dart.nullable(PontePoint.PonteImage)))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    JSArrayOfObjectN: () => (T.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T.ObjectN())))(),
    UserN: () => (T.UserN = dart.constFn(dart.nullable(user$.User)))(),
    JSArrayOfImovel: () => (T.JSArrayOfImovel = dart.constFn(_interceptors.JSArray$(imovel$.Imovel)))(),
    ObservableListOfImovelRoute: () => (T.ObservableListOfImovelRoute = dart.constFn(observable_collections.ObservableList$(ImovelRoute.ImovelRoute)))(),
    ObservableListOfLatLng: () => (T.ObservableListOfLatLng = dart.constFn(observable_collections.ObservableList$(latlong.LatLng)))(),
    ObservableListOfMunicipio: () => (T.ObservableListOfMunicipio = dart.constFn(observable_collections.ObservableList$(municipio.Municipio)))(),
    ObservableListOfLevantamento: () => (T.ObservableListOfLevantamento = dart.constFn(observable_collections.ObservableList$(Levantamento.Levantamento)))(),
    ObservableListOfEstradaPoint: () => (T.ObservableListOfEstradaPoint = dart.constFn(observable_collections.ObservableList$(EstradaPoint.EstradaPoint)))(),
    ObservableListOfRotaEscolarPoint: () => (T.ObservableListOfRotaEscolarPoint = dart.constFn(observable_collections.ObservableList$(RotaEscolarPoint.RotaEscolarPoint)))(),
    ObservableListOfImovelGeoPoint: () => (T.ObservableListOfImovelGeoPoint = dart.constFn(observable_collections.ObservableList$(ImovelGeoPoint.ImovelGeoPoint)))(),
    ObservableListOfPontePoint: () => (T.ObservableListOfPontePoint = dart.constFn(observable_collections.ObservableList$(PontePoint.PontePoint)))(),
    ObservableListOfObject: () => (T.ObservableListOfObject = dart.constFn(observable_collections.ObservableList$(core.Object)))(),
    PathOfLatLng: () => (T.PathOfLatLng = dart.constFn(latlong.Path$(latlong.LatLng)))(),
    ReactionToNull: () => (T.ReactionToNull = dart.constFn(dart.fnType(core.Null, [core$.Reaction])))(),
    ObjectTobool: () => (T.ObjectTobool = dart.constFn(dart.fnType(core.bool, [core.Object])))(),
    ComputedOfbool: () => (T.ComputedOfbool = dart.constFn(core$.Computed$(core.bool)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ComputedOfint: () => (T.ComputedOfint = dart.constFn(core$.Computed$(core.int)))(),
    VoidToint: () => (T.VoidToint = dart.constFn(dart.fnType(core.int, [])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    PositionN: () => (T.PositionN = dart.constFn(dart.nullable(position.Position)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var C = [];
  var I = [
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/classes/user.dart",
    "package:app_itr/helpers/classes/user.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/classes/municipio.dart",
    "package:app_itr/helpers/classes/municipio.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/classes/imovel.dart",
    "package:app_itr/helpers/classes/imovel.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/classes/PontePoint.dart",
    "package:app_itr/helpers/classes/PontePoint.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/classes/ImovelRoute.dart",
    "package:app_itr/helpers/classes/ImovelRoute.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/db.dart",
    "package:app_itr/helpers/db.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/helpers/classes/ImovelGeoPoint.dart",
    "package:app_itr/helpers/classes/ImovelGeoPoint.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/stores/login_data_store.dart",
    "package:app_itr/stores/login_data_store.dart",
    "file:///C:/Users/Mateus/Documents/Projetos/app_itr/lib/stores/login_data_store.g.dart"
  ];
  var id = dart.privateName(user$, "User.id");
  var __User_idSistema = dart.privateName(user$, "_#User#idSistema");
  var __User_user = dart.privateName(user$, "_#User#user");
  var __User_pass = dart.privateName(user$, "_#User#pass");
  var __User_nome = dart.privateName(user$, "_#User#nome");
  var __User_email = dart.privateName(user$, "_#User#email");
  var __User_cpf = dart.privateName(user$, "_#User#cpf");
  var __User_rg = dart.privateName(user$, "_#User#rg");
  var __User_telefone = dart.privateName(user$, "_#User#telefone");
  var __User_imovel = dart.privateName(user$, "_#User#imovel");
  var __User_municipios = dart.privateName(user$, "_#User#municipios");
  var __User_token = dart.privateName(user$, "_#User#token");
  user$.User = class User extends core.Object {
    get id() {
      return this[id];
    }
    set id(value) {
      this[id] = value;
    }
    get idSistema() {
      let t0;
      t0 = this[__User_idSistema];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("idSistema")) : t0;
    }
    set idSistema(t0) {
      if (t0 == null) dart.nullFailed(I[0], 7, 12, "null");
      this[__User_idSistema] = t0;
    }
    get user() {
      let t1;
      t1 = this[__User_user];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("user")) : t1;
    }
    set user(t1) {
      if (t1 == null) dart.nullFailed(I[0], 8, 15, "null");
      this[__User_user] = t1;
    }
    get pass() {
      let t2;
      t2 = this[__User_pass];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("pass")) : t2;
    }
    set pass(t2) {
      if (t2 == null) dart.nullFailed(I[0], 9, 15, "null");
      this[__User_pass] = t2;
    }
    get nome() {
      let t3;
      t3 = this[__User_nome];
      return t3 == null ? dart.throw(new _internal.LateError.fieldNI("nome")) : t3;
    }
    set nome(t3) {
      if (t3 == null) dart.nullFailed(I[0], 10, 15, "null");
      this[__User_nome] = t3;
    }
    get email() {
      let t4;
      t4 = this[__User_email];
      return t4 == null ? dart.throw(new _internal.LateError.fieldNI("email")) : t4;
    }
    set email(t4) {
      if (t4 == null) dart.nullFailed(I[0], 11, 15, "null");
      this[__User_email] = t4;
    }
    get cpf() {
      let t5;
      t5 = this[__User_cpf];
      return t5 == null ? dart.throw(new _internal.LateError.fieldNI("cpf")) : t5;
    }
    set cpf(t5) {
      if (t5 == null) dart.nullFailed(I[0], 12, 16, "null");
      this[__User_cpf] = t5;
    }
    get rg() {
      let t6;
      t6 = this[__User_rg];
      return t6 == null ? dart.throw(new _internal.LateError.fieldNI("rg")) : t6;
    }
    set rg(t6) {
      if (t6 == null) dart.nullFailed(I[0], 13, 15, "null");
      this[__User_rg] = t6;
    }
    get telefone() {
      let t7;
      t7 = this[__User_telefone];
      return t7 == null ? dart.throw(new _internal.LateError.fieldNI("telefone")) : t7;
    }
    set telefone(t7) {
      if (t7 == null) dart.nullFailed(I[0], 14, 15, "null");
      this[__User_telefone] = t7;
    }
    get imovel() {
      let t8;
      t8 = this[__User_imovel];
      return t8 == null ? dart.throw(new _internal.LateError.fieldNI("imovel")) : t8;
    }
    set imovel(t8) {
      if (t8 == null) dart.nullFailed(I[0], 15, 15, "null");
      this[__User_imovel] = t8;
    }
    get municipios() {
      let t9;
      t9 = this[__User_municipios];
      return t9 == null ? dart.throw(new _internal.LateError.fieldNI("municipios")) : t9;
    }
    set municipios(t9) {
      if (t9 == null) dart.nullFailed(I[0], 16, 15, "null");
      this[__User_municipios] = t9;
    }
    get token() {
      let t10;
      t10 = this[__User_token];
      return t10 == null ? dart.throw(new _internal.LateError.fieldNI("token")) : t10;
    }
    set token(t10) {
      if (t10 == null) dart.nullFailed(I[0], 17, 15, "null");
      this[__User_token] = t10;
    }
    toMap() {
      let map = new (T.IdentityMapOfString$ObjectN()).from([DBColumnNames.idSistemaColumn, this.idSistema, DBColumnNames.userColumn, this.user, DBColumnNames.passColumn, this.pass, DBColumnNames.nameColumn, this.nome, DBColumnNames.emailColumn, this.email, DBColumnNames.cpfColumn, this.cpf, DBColumnNames.rgColumn, this.rg, DBColumnNames.telefoneColumn, this.telefone, DBColumnNames.imovelColumn, this.imovel, DBColumnNames.municipiosColumn, this.municipios, DBColumnNames.tokenColumn, this.token]);
      if (this.id != null) {
        map[$_set](DBColumnNames.idColumn, this.id);
      }
      return map;
    }
    toString() {
      return "User(id: " + dart.str(this.id) + ", idSistema: " + dart.str(this.idSistema) + ", user: " + dart.str(this.user) + ", pass: " + dart.str(this.pass) + ", nome: " + dart.str(this.nome) + ", email: " + dart.str(this.email) + ", cpf:" + " " + dart.str(this.cpf) + ", rg: " + dart.str(this.rg) + ", telefone: " + dart.str(this.telefone) + ", imovel: " + dart.str(this.imovel) + ", municipios: " + dart.str(this.municipios) + ", token: " + dart.str(this.token) + ")";
    }
  };
  (user$.User.new = function() {
    this[id] = null;
    this[__User_idSistema] = null;
    this[__User_user] = null;
    this[__User_pass] = null;
    this[__User_nome] = null;
    this[__User_email] = null;
    this[__User_cpf] = null;
    this[__User_rg] = null;
    this[__User_telefone] = null;
    this[__User_imovel] = null;
    this[__User_municipios] = null;
    this[__User_token] = null;
    ;
  }).prototype = user$.User.prototype;
  (user$.User.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[0], 21, 20, "map");
    this[id] = null;
    this[__User_idSistema] = null;
    this[__User_user] = null;
    this[__User_pass] = null;
    this[__User_nome] = null;
    this[__User_email] = null;
    this[__User_cpf] = null;
    this[__User_rg] = null;
    this[__User_telefone] = null;
    this[__User_imovel] = null;
    this[__User_municipios] = null;
    this[__User_token] = null;
    this.id = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this.idSistema = core.int.as(map[$_get](DBColumnNames.idSistemaColumn));
    this.user = core.String.as(map[$_get](DBColumnNames.userColumn));
    this.pass = core.String.as(map[$_get](DBColumnNames.passColumn));
    this.nome = core.String.as(map[$_get](DBColumnNames.nameColumn));
    this.email = core.String.as(map[$_get](DBColumnNames.emailColumn));
    this.cpf = core.String.as(map[$_get](DBColumnNames.cpfColumn));
    this.rg = core.String.as(map[$_get](DBColumnNames.rgColumn));
    this.telefone = core.String.as(map[$_get](DBColumnNames.telefoneColumn));
    this.imovel = core.String.as(map[$_get](DBColumnNames.imovelColumn));
    this.municipios = core.String.as(map[$_get](DBColumnNames.municipiosColumn));
    this.token = core.String.as(map[$_get](DBColumnNames.tokenColumn));
  }).prototype = user$.User.prototype;
  dart.addTypeTests(user$.User);
  dart.addTypeCaches(user$.User);
  dart.setMethodSignature(user$.User, () => ({
    __proto__: dart.getMethods(user$.User.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setGetterSignature(user$.User, () => ({
    __proto__: dart.getGetters(user$.User.__proto__),
    idSistema: core.int,
    user: core.String,
    pass: core.String,
    nome: core.String,
    email: core.String,
    cpf: core.String,
    rg: core.String,
    telefone: core.String,
    imovel: core.String,
    municipios: core.String,
    token: core.String
  }));
  dart.setSetterSignature(user$.User, () => ({
    __proto__: dart.getSetters(user$.User.__proto__),
    idSistema: core.int,
    user: core.String,
    pass: core.String,
    nome: core.String,
    email: core.String,
    cpf: core.String,
    rg: core.String,
    telefone: core.String,
    imovel: core.String,
    municipios: core.String,
    token: core.String
  }));
  dart.setLibraryUri(user$.User, I[1]);
  dart.setFieldSignature(user$.User, () => ({
    __proto__: dart.getFields(user$.User.__proto__),
    id: dart.fieldType(dart.nullable(core.int)),
    [__User_idSistema]: dart.fieldType(dart.nullable(core.int)),
    [__User_user]: dart.fieldType(dart.nullable(core.String)),
    [__User_pass]: dart.fieldType(dart.nullable(core.String)),
    [__User_nome]: dart.fieldType(dart.nullable(core.String)),
    [__User_email]: dart.fieldType(dart.nullable(core.String)),
    [__User_cpf]: dart.fieldType(dart.nullable(core.String)),
    [__User_rg]: dart.fieldType(dart.nullable(core.String)),
    [__User_telefone]: dart.fieldType(dart.nullable(core.String)),
    [__User_imovel]: dart.fieldType(dart.nullable(core.String)),
    [__User_municipios]: dart.fieldType(dart.nullable(core.String)),
    [__User_token]: dart.fieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(user$.User, ['toString']);
  var id$ = dart.privateName(user$, "LoggedUser.id");
  var __LoggedUser_idSistema = dart.privateName(user$, "_#LoggedUser#idSistema");
  user$.LoggedUser = class LoggedUser extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      this[id$] = value;
    }
    get idSistema() {
      let t11;
      t11 = this[__LoggedUser_idSistema];
      return t11 == null ? dart.throw(new _internal.LateError.fieldNI("idSistema")) : t11;
    }
    set idSistema(t11) {
      if (t11 == null) dart.nullFailed(I[0], 65, 12, "null");
      this[__LoggedUser_idSistema] = t11;
    }
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaColumn, this.idSistema]);
      if (this.id != null) {
        map[$_set](DBColumnNames.idColumn, this.id);
      }
      return map;
    }
    toString() {
      return "LoggedUser(id: " + dart.str(this.id) + ", idSistema: " + dart.str(this.idSistema) + ")";
    }
  };
  (user$.LoggedUser.new = function() {
    this[id$] = null;
    this[__LoggedUser_idSistema] = null;
    ;
  }).prototype = user$.LoggedUser.prototype;
  (user$.LoggedUser.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[0], 69, 26, "map");
    this[id$] = null;
    this[__LoggedUser_idSistema] = null;
    this.id = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this.idSistema = core.int.as(map[$_get](DBColumnNames.idSistemaColumn));
  }).prototype = user$.LoggedUser.prototype;
  dart.addTypeTests(user$.LoggedUser);
  dart.addTypeCaches(user$.LoggedUser);
  dart.setMethodSignature(user$.LoggedUser, () => ({
    __proto__: dart.getMethods(user$.LoggedUser.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setGetterSignature(user$.LoggedUser, () => ({
    __proto__: dart.getGetters(user$.LoggedUser.__proto__),
    idSistema: core.int
  }));
  dart.setSetterSignature(user$.LoggedUser, () => ({
    __proto__: dart.getSetters(user$.LoggedUser.__proto__),
    idSistema: core.int
  }));
  dart.setLibraryUri(user$.LoggedUser, I[1]);
  dart.setFieldSignature(user$.LoggedUser, () => ({
    __proto__: dart.getFields(user$.LoggedUser.__proto__),
    id: dart.fieldType(dart.nullable(core.int)),
    [__LoggedUser_idSistema]: dart.fieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(user$.LoggedUser, ['toString']);
  var id$0 = dart.privateName(municipio, "Municipio.id");
  var idSistema = dart.privateName(municipio, "Municipio.idSistema");
  var nome = dart.privateName(municipio, "Municipio.nome");
  var slug = dart.privateName(municipio, "Municipio.slug");
  var estado = dart.privateName(municipio, "Municipio.estado");
  var sigla_uf = dart.privateName(municipio, "Municipio.sigla_uf");
  var cod_ibge_m = dart.privateName(municipio, "Municipio.cod_ibge_m");
  var latitude = dart.privateName(municipio, "Municipio.latitude");
  var longitude = dart.privateName(municipio, "Municipio.longitude");
  municipio.Municipio = class Municipio extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      this[id$0] = value;
    }
    get idSistema() {
      return this[idSistema];
    }
    set idSistema(value) {
      this[idSistema] = value;
    }
    get nome() {
      return this[nome];
    }
    set nome(value) {
      this[nome] = value;
    }
    get slug() {
      return this[slug];
    }
    set slug(value) {
      this[slug] = value;
    }
    get estado() {
      return this[estado];
    }
    set estado(value) {
      this[estado] = value;
    }
    get sigla_uf() {
      return this[sigla_uf];
    }
    set sigla_uf(value) {
      this[sigla_uf] = value;
    }
    get cod_ibge_m() {
      return this[cod_ibge_m];
    }
    set cod_ibge_m(value) {
      this[cod_ibge_m] = value;
    }
    get latitude() {
      return this[latitude];
    }
    set latitude(value) {
      this[latitude] = value;
    }
    get longitude() {
      return this[longitude];
    }
    set longitude(value) {
      this[longitude] = value;
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["id", this.id, "nome", this.nome, "slug", this.slug, "estado", this.estado, "sigla_uf", this.sigla_uf, "cod_ibge_m", this.cod_ibge_m, "latitude", this.latitude, "longitude", this.longitude]);
    }
    municipio_plus_uf() {
      return dart.str(this.nome) + " - " + dart.str(this.sigla_uf);
    }
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaColumn, this.idSistema, DBColumnNames.nomeMunicipioColumn, this.nome, DBColumnNames.slugColumn, this.slug, DBColumnNames.estadoColumn, this.estado, DBColumnNames.sigla_ufColumn, this.sigla_uf, DBColumnNames.cod_ibge_mColumn, this.cod_ibge_m, DBColumnNames.latitudeColumn, this.latitude, DBColumnNames.longitudeColumn, this.longitude]);
      if (this.id != null) {
        map[$_set](DBColumnNames.idColumn, this.id);
      }
      return map;
    }
    toString() {
      return "Município(id: " + dart.str(this.id) + ", idSistema: " + dart.str(this.idSistema) + ", name: " + dart.str(this.nome) + ", slug: " + dart.str(this.slug) + ", estado: " + dart.str(this.estado) + ", sigla_uf: " + dart.str(this.sigla_uf) + ", cod_ibge_m: " + dart.str(this.cod_ibge_m) + ", latitude: " + dart.str(this.latitude) + ", longitude: " + dart.str(this.longitude) + ")";
    }
  };
  (municipio.Municipio.fromJson = function(json) {
    if (json == null) dart.nullFailed(I[2], 16, 43, "json");
    this[id$0] = null;
    this[idSistema] = core.int.parse(dart.toString(json[$_get]("id")));
    this[nome] = convert.utf8.decode(dart.toString(json[$_get]("nome"))[$runes][$toList]());
    this[slug] = convert.utf8.decode(dart.toString(json[$_get]("slug"))[$runes][$toList]());
    this[estado] = core.int.parse(convert.utf8.decode(dart.toString(json[$_get]("estado"))[$runes][$toList]()));
    this[sigla_uf] = convert.utf8.decode(dart.toString(json[$_get]("sigla_uf"))[$runes][$toList]());
    this[cod_ibge_m] = convert.utf8.decode(dart.toString(json[$_get]("cod_ibge_m"))[$runes][$toList]());
    this[latitude] = convert.utf8.decode(dart.toString(json[$_get]("lat_sede"))[$runes][$toList]());
    this[longitude] = convert.utf8.decode(dart.toString(json[$_get]("lng_sede"))[$runes][$toList]());
    ;
  }).prototype = municipio.Municipio.prototype;
  (municipio.Municipio.new = function() {
    this[id$0] = null;
    this[longitude] = null;
    this[latitude] = null;
    this[cod_ibge_m] = null;
    this[sigla_uf] = null;
    this[estado] = null;
    this[slug] = null;
    this[nome] = null;
    this[idSistema] = null;
    ;
  }).prototype = municipio.Municipio.prototype;
  (municipio.Municipio.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[2], 44, 25, "map");
    this[id$0] = null;
    this[longitude] = null;
    this[latitude] = null;
    this[cod_ibge_m] = null;
    this[sigla_uf] = null;
    this[estado] = null;
    this[slug] = null;
    this[nome] = null;
    this[idSistema] = null;
    this.id = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this.idSistema = T.intN().as(map[$_get](DBColumnNames.idSistemaColumn));
    this.nome = T.StringN().as(map[$_get](DBColumnNames.nomeMunicipioColumn));
    this.slug = T.StringN().as(map[$_get](DBColumnNames.slugColumn));
    this.estado = T.intN().as(map[$_get](DBColumnNames.estadoColumn));
    this.sigla_uf = T.StringN().as(map[$_get](DBColumnNames.sigla_ufColumn));
    this.cod_ibge_m = T.StringN().as(map[$_get](DBColumnNames.cod_ibge_mColumn));
    this.latitude = T.StringN().as(map[$_get](DBColumnNames.latitudeColumn));
    this.longitude = T.StringN().as(map[$_get](DBColumnNames.longitudeColumn));
  }).prototype = municipio.Municipio.prototype;
  dart.addTypeTests(municipio.Municipio);
  dart.addTypeCaches(municipio.Municipio);
  dart.setMethodSignature(municipio.Municipio, () => ({
    __proto__: dart.getMethods(municipio.Municipio.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), []),
    municipio_plus_uf: dart.fnType(core.String, []),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setLibraryUri(municipio.Municipio, I[3]);
  dart.setFieldSignature(municipio.Municipio, () => ({
    __proto__: dart.getFields(municipio.Municipio.__proto__),
    id: dart.fieldType(dart.nullable(core.int)),
    idSistema: dart.fieldType(dart.nullable(core.int)),
    nome: dart.fieldType(dart.nullable(core.String)),
    slug: dart.fieldType(dart.nullable(core.String)),
    estado: dart.fieldType(dart.nullable(core.int)),
    sigla_uf: dart.fieldType(dart.nullable(core.String)),
    cod_ibge_m: dart.fieldType(dart.nullable(core.String)),
    latitude: dart.fieldType(dart.nullable(core.String)),
    longitude: dart.fieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(municipio.Municipio, ['toString']);
  var id$1 = dart.privateName(imovel$, "Imovel.id");
  var idSistemaUser = dart.privateName(imovel$, "Imovel.idSistemaUser");
  var idSistemaMunicipio = dart.privateName(imovel$, "Imovel.idSistemaMunicipio");
  var geoPoints = dart.privateName(imovel$, "Imovel.geoPoints");
  var listGeoPoints = dart.privateName(imovel$, "Imovel.listGeoPoints");
  var using = dart.privateName(imovel$, "Imovel.using");
  imovel$.Imovel = class Imovel extends core.Object {
    get id() {
      return this[id$1];
    }
    set id(value) {
      this[id$1] = value;
    }
    get idSistemaUser() {
      return this[idSistemaUser];
    }
    set idSistemaUser(value) {
      this[idSistemaUser] = value;
    }
    get idSistemaMunicipio() {
      return this[idSistemaMunicipio];
    }
    set idSistemaMunicipio(value) {
      this[idSistemaMunicipio] = value;
    }
    get geoPoints() {
      return this[geoPoints];
    }
    set geoPoints(value) {
      this[geoPoints] = value;
    }
    get listGeoPoints() {
      return this[listGeoPoints];
    }
    set listGeoPoints(value) {
      this[listGeoPoints] = value;
    }
    get using() {
      return this[using];
    }
    set using(value) {
      this[using] = value;
    }
    getGeoPointsId() {
      let geo = "";
      for (let i = 0; i < dart.notNull(dart.nullCheck(this.geoPoints)[$length]); i = i + 1) {
        let aux = dart.toString(dart.nullCheck(this.geoPoints)[$_get](i).id);
        geo = geo + (dart.str(aux) + ",");
      }
      core.print("GEOFINAL -> " + geo);
      return geo;
    }
    listLatLng() {
      return async.async(T.ListOfLatLngWithAngle(), (function* listLatLng() {
        let db = db$.DBHelper.new();
        let listG = this.listGeoPoints;
        let split = dart.nullCheck(listG)[$split](",");
        let values = (() => {
          let t12 = new (T.IdentityMapOfint$String()).new();
          for (let i = 0; i < dart.notNull(split[$length]) - 1; i = i + 1)
            t12[$_set](i, split[$_get](i));
          return t12;
        })();
        for (let x = 0; x < dart.notNull(values[$length]); x = x + 1) {
          let gp = dart.nullCheck(yield db.getGeoPoint(core.int.parse(dart.nullCheck(values[$_get](x)))));
          dart.nullCheck(this.geoPoints)[$add](gp);
        }
        ;
        let list = T.JSArrayOfLatLngWithAngle().of([]);
        for (let i = 0; i < dart.notNull(dart.nullCheck(this.geoPoints)[$length]); i = i + 1) {
          let l = dart.nullCheck(dart.nullCheck(this.geoPoints)[$_get](i).geom);
          l.id = dart.nullCheck(dart.nullCheck(this.geoPoints)[$_get](i).id);
          list[$add](dart.nullCheck(dart.nullCheck(this.geoPoints)[$_get](i).geom));
        }
        return list;
      }).bind(this));
    }
    isUsing() {
      return this.using;
    }
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaUserColumn, this.idSistemaUser, DBColumnNames.idSistemaMunicipioColumn, this.idSistemaMunicipio, DBColumnNames.listGeoPointsColumn, this.listGeoPoints]);
      if (this.id != null) {
        map[$_set](DBColumnNames.idColumn, this.id);
      }
      return map;
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["id", this.id, "listGeoPoints", this.listGeoPoints]);
    }
    toString() {
      return "Imovel(id: " + dart.str(this.id) + ", GeoPoints: " + dart.str(this.geoPoints) + "), Stringed: " + dart.str(this.listGeoPoints);
    }
  };
  (imovel$.Imovel.new = function(use) {
    if (use == null) dart.nullFailed(I[4], 58, 15, "use");
    this[id$1] = null;
    this[idSistemaUser] = null;
    this[idSistemaMunicipio] = null;
    this[geoPoints] = T.JSArrayOfImovelGeoPoint().of([]);
    this[listGeoPoints] = null;
    this[using] = false;
    this.using = use;
  }).prototype = imovel$.Imovel.prototype;
  (imovel$.Imovel.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[4], 62, 22, "map");
    this[id$1] = null;
    this[idSistemaUser] = null;
    this[idSistemaMunicipio] = null;
    this[geoPoints] = T.JSArrayOfImovelGeoPoint().of([]);
    this[listGeoPoints] = null;
    this[using] = false;
    this.id = T.intN().as(map[$_get](DBColumnNames.idImovelColumn));
    this.idSistemaUser = T.intN().as(map[$_get](DBColumnNames.idSistemaUserColumn));
    this.idSistemaMunicipio = T.intN().as(map[$_get](DBColumnNames.idSistemaMunicipioColumn));
    this.listGeoPoints = T.StringN().as(map[$_get](DBColumnNames.listGeoPointsColumn));
  }).prototype = imovel$.Imovel.prototype;
  dart.addTypeTests(imovel$.Imovel);
  dart.addTypeCaches(imovel$.Imovel);
  dart.setMethodSignature(imovel$.Imovel, () => ({
    __proto__: dart.getMethods(imovel$.Imovel.__proto__),
    getGeoPointsId: dart.fnType(core.String, []),
    listLatLng: dart.fnType(async.Future$(core.List$(PolygonGenerator.LatLngWithAngle)), []),
    isUsing: dart.fnType(core.bool, []),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), []),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(imovel$.Imovel, I[5]);
  dart.setFieldSignature(imovel$.Imovel, () => ({
    __proto__: dart.getFields(imovel$.Imovel.__proto__),
    id: dart.fieldType(dart.nullable(core.int)),
    idSistemaUser: dart.fieldType(dart.nullable(core.int)),
    idSistemaMunicipio: dart.fieldType(dart.nullable(core.int)),
    geoPoints: dart.fieldType(dart.nullable(core.List$(ImovelGeoPoint.ImovelGeoPoint))),
    listGeoPoints: dart.fieldType(dart.nullable(core.String)),
    using: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(imovel$.Imovel, ['toString']);
  var _id = dart.privateName(PontePoint, "_id");
  var _idSistema = dart.privateName(PontePoint, "_idSistema");
  var _idLevantamento = dart.privateName(PontePoint, "_idLevantamento");
  var _idSistemaLevantamento = dart.privateName(PontePoint, "_idSistemaLevantamento");
  var _descricao = dart.privateName(PontePoint, "_descricao");
  var _estadoConservacao = dart.privateName(PontePoint, "_estadoConservacao");
  var _material = dart.privateName(PontePoint, "_material");
  var _extensaoAproximada = dart.privateName(PontePoint, "_extensaoAproximada");
  var _nomeRioRiacho = dart.privateName(PontePoint, "_nomeRioRiacho");
  var _cod_ibge_m = dart.privateName(PontePoint, "_cod_ibge_m");
  var _geom = dart.privateName(PontePoint, "_geom");
  var _sincronizado = dart.privateName(PontePoint, "_sincronizado");
  PontePoint.PontePoint = class PontePoint extends core.Object {
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaColumn, this[_idSistema], DBColumnNames.idLevantamentoColumn, this[_idLevantamento], DBColumnNames.idSistemaLevantamentoColumn, this[_idSistemaLevantamento], DBColumnNames.descricaoColumn, this[_descricao], DBColumnNames.estadoConservacaoColumn, this[_estadoConservacao], DBColumnNames.materialColumn, this[_material], DBColumnNames.extensaoAproximadaColumn, this[_extensaoAproximada], DBColumnNames.rioRiachoColumn, this[_nomeRioRiacho], DBColumnNames.cod_ibge_mColumn, this[_cod_ibge_m], DBColumnNames.latColumn, dart.nullCheck(this[_geom]).latitude, DBColumnNames.lngColumn, dart.nullCheck(this[_geom]).longitude, DBColumnNames.sincronizadoColumn, this[_sincronizado]]);
      if (this[_id] != null) {
        map[$_set](DBColumnNames.idColumn, this[_id]);
      }
      return map;
    }
    getGeom() {
      return "POINT(" + dart.toString(dart.nullCheck(this[_geom]).longitude) + " " + dart.toString(dart.nullCheck(this[_geom]).latitude) + ")";
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["levantamento", this[_idSistemaLevantamento], "descricao", this[_descricao], "estado_conservacao", this[_estadoConservacao], "material", this[_material], "extensao_aproximada", this[_extensaoAproximada], "nome_rio_riacho", this[_nomeRioRiacho], "cod_ibge_m", this[_cod_ibge_m], "geom", this.getGeom()]);
    }
    get sincronizado() {
      return this[_sincronizado];
    }
    set sincronizado(value) {
      this[_sincronizado] = value;
    }
    get geom() {
      return this[_geom];
    }
    set geom(value) {
      this[_geom] = value;
    }
    get cod_ibge_m() {
      return this[_cod_ibge_m];
    }
    set cod_ibge_m(value) {
      this[_cod_ibge_m] = value;
    }
    get nomeRioRiacho() {
      return this[_nomeRioRiacho];
    }
    set nomeRioRiacho(value) {
      this[_nomeRioRiacho] = value;
    }
    get extensaoAproximada() {
      return this[_extensaoAproximada];
    }
    set extensaoAproximada(value) {
      this[_extensaoAproximada] = value;
    }
    get material() {
      return this[_material];
    }
    set material(value) {
      this[_material] = value;
    }
    get estadoConservacao() {
      return this[_estadoConservacao];
    }
    set estadoConservacao(value) {
      this[_estadoConservacao] = value;
    }
    get descricao() {
      return this[_descricao];
    }
    set descricao(value) {
      this[_descricao] = value;
    }
    get idSistemaLevantamento() {
      return this[_idSistemaLevantamento];
    }
    set idSistemaLevantamento(value) {
      this[_idSistemaLevantamento] = value;
    }
    get idLevantamento() {
      return this[_idLevantamento];
    }
    set idLevantamento(value) {
      this[_idLevantamento] = value;
    }
    get idSistema() {
      return this[_idSistema];
    }
    set idSistema(value) {
      this[_idSistema] = value;
    }
    get id() {
      return this[_id];
    }
    set id(value) {
      this[_id] = value;
    }
    toString() {
      return "PontePoint{_id: " + dart.str(this[_id]) + ", _idSistema: " + dart.str(this[_idSistema]) + ", _idLevantamento: " + dart.str(this[_idLevantamento]) + ", _idSistemaLevantamento: " + dart.str(this[_idSistemaLevantamento]) + ", _descricao: " + dart.str(this[_descricao]) + ", _estadoConservacao: " + dart.str(this[_estadoConservacao]) + ", _material: " + dart.str(this[_material]) + ", _extensaoAproximada: " + dart.str(this[_extensaoAproximada]) + ", _nomeRioRiacho: " + dart.str(this[_nomeRioRiacho]) + ", _cod_ibge_m: " + dart.str(this[_cod_ibge_m]) + ", _geom: " + dart.str(this[_geom]) + ", _sincronizado: " + dart.str(this[_sincronizado]) + "}";
    }
  };
  (PontePoint.PontePoint.new = function() {
    this[_id] = null;
    this[_idSistema] = null;
    this[_idLevantamento] = null;
    this[_idSistemaLevantamento] = null;
    this[_descricao] = null;
    this[_estadoConservacao] = null;
    this[_material] = null;
    this[_extensaoAproximada] = null;
    this[_nomeRioRiacho] = null;
    this[_cod_ibge_m] = null;
    this[_geom] = null;
    this[_sincronizado] = null;
    ;
  }).prototype = PontePoint.PontePoint.prototype;
  (PontePoint.PontePoint.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[6], 25, 26, "map");
    this[_id] = null;
    this[_idSistema] = null;
    this[_idLevantamento] = null;
    this[_idSistemaLevantamento] = null;
    this[_descricao] = null;
    this[_estadoConservacao] = null;
    this[_material] = null;
    this[_extensaoAproximada] = null;
    this[_nomeRioRiacho] = null;
    this[_cod_ibge_m] = null;
    this[_geom] = null;
    this[_sincronizado] = null;
    this[_id] = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this[_idSistema] = T.intN().as(map[$_get](DBColumnNames.idSistemaColumn));
    this[_idLevantamento] = T.intN().as(map[$_get](DBColumnNames.idLevantamentoColumn));
    this[_idSistemaLevantamento] = T.intN().as(map[$_get](DBColumnNames.idSistemaLevantamentoColumn));
    this[_descricao] = T.StringN().as(map[$_get](DBColumnNames.descricaoColumn));
    this[_estadoConservacao] = T.StringN().as(map[$_get](DBColumnNames.estadoConservacaoColumn));
    this[_material] = T.StringN().as(map[$_get](DBColumnNames.materialColumn));
    this[_extensaoAproximada] = T.StringN().as(map[$_get](DBColumnNames.extensaoAproximadaColumn));
    this[_nomeRioRiacho] = T.StringN().as(map[$_get](DBColumnNames.rioRiachoColumn));
    this[_cod_ibge_m] = T.StringN().as(map[$_get](DBColumnNames.cod_ibge_mColumn));
    this[_geom] = new PolygonGenerator.LatLngWithAngle.new(core.double.as(map[$_get](DBColumnNames.latColumn)), core.double.as(map[$_get](DBColumnNames.lngColumn)));
    this[_sincronizado] = T.intN().as(map[$_get](DBColumnNames.sincronizadoColumn));
  }).prototype = PontePoint.PontePoint.prototype;
  dart.addTypeTests(PontePoint.PontePoint);
  dart.addTypeCaches(PontePoint.PontePoint);
  dart.setMethodSignature(PontePoint.PontePoint, () => ({
    __proto__: dart.getMethods(PontePoint.PontePoint.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), []),
    getGeom: dart.fnType(core.String, []),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setGetterSignature(PontePoint.PontePoint, () => ({
    __proto__: dart.getGetters(PontePoint.PontePoint.__proto__),
    sincronizado: dart.nullable(core.int),
    geom: dart.nullable(PolygonGenerator.LatLngWithAngle),
    cod_ibge_m: dart.nullable(core.String),
    nomeRioRiacho: dart.nullable(core.String),
    extensaoAproximada: dart.nullable(core.String),
    material: dart.nullable(core.String),
    estadoConservacao: dart.nullable(core.String),
    descricao: dart.nullable(core.String),
    idSistemaLevantamento: dart.nullable(core.int),
    idLevantamento: dart.nullable(core.int),
    idSistema: dart.nullable(core.int),
    id: dart.nullable(core.int)
  }));
  dart.setSetterSignature(PontePoint.PontePoint, () => ({
    __proto__: dart.getSetters(PontePoint.PontePoint.__proto__),
    sincronizado: dart.nullable(core.int),
    geom: dart.nullable(PolygonGenerator.LatLngWithAngle),
    cod_ibge_m: dart.nullable(core.String),
    nomeRioRiacho: dart.nullable(core.String),
    extensaoAproximada: dart.nullable(core.String),
    material: dart.nullable(core.String),
    estadoConservacao: dart.nullable(core.String),
    descricao: dart.nullable(core.String),
    idSistemaLevantamento: dart.nullable(core.int),
    idLevantamento: dart.nullable(core.int),
    idSistema: dart.nullable(core.int),
    id: dart.nullable(core.int)
  }));
  dart.setLibraryUri(PontePoint.PontePoint, I[7]);
  dart.setFieldSignature(PontePoint.PontePoint, () => ({
    __proto__: dart.getFields(PontePoint.PontePoint.__proto__),
    [_id]: dart.fieldType(dart.nullable(core.int)),
    [_idSistema]: dart.fieldType(dart.nullable(core.int)),
    [_idLevantamento]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaLevantamento]: dart.fieldType(dart.nullable(core.int)),
    [_descricao]: dart.fieldType(dart.nullable(core.String)),
    [_estadoConservacao]: dart.fieldType(dart.nullable(core.String)),
    [_material]: dart.fieldType(dart.nullable(core.String)),
    [_extensaoAproximada]: dart.fieldType(dart.nullable(core.String)),
    [_nomeRioRiacho]: dart.fieldType(dart.nullable(core.String)),
    [_cod_ibge_m]: dart.fieldType(dart.nullable(core.String)),
    [_geom]: dart.fieldType(dart.nullable(PolygonGenerator.LatLngWithAngle)),
    [_sincronizado]: dart.fieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(PontePoint.PontePoint, ['toString']);
  var _idPonte = dart.privateName(PontePoint, "_idPonte");
  var _idSistemaPonte = dart.privateName(PontePoint, "_idSistemaPonte");
  var _imagePath = dart.privateName(PontePoint, "_imagePath");
  var _imageFile = dart.privateName(PontePoint, "_imageFile");
  PontePoint.PonteImage = class PonteImage extends core.Object {
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaColumn, this[_idSistema], DBColumnNames.idPonteColumn, this[_idPonte], DBColumnNames.idSistemaPonteColumn, this[_idSistemaPonte], DBColumnNames.ponteImagePathColumn, this[_imagePath], DBColumnNames.sincronizadoColumn, this[_sincronizado]]);
      if (this[_id] != null) {
        map[$_set](DBColumnNames.idColumn, this[_id]);
      }
      return map;
    }
    get sincronizado() {
      return this[_sincronizado];
    }
    set sincronizado(value) {
      this[_sincronizado] = value;
    }
    get imageFile() {
      return this[_imageFile];
    }
    set imageFile(value) {
      this[_imageFile] = value;
    }
    get imagePath() {
      return this[_imagePath];
    }
    set imagePath(value) {
      this[_imagePath] = value;
    }
    get idSistemaPonte() {
      return this[_idSistemaPonte];
    }
    set idSistemaPonte(value) {
      this[_idSistemaPonte] = value;
    }
    get idPonte() {
      return this[_idPonte];
    }
    set idPonte(value) {
      this[_idPonte] = value;
    }
    get idSistema() {
      return this[_idSistema];
    }
    set idSistema(value) {
      this[_idSistema] = value;
    }
    get id() {
      return this[_id];
    }
    set id(value) {
      this[_id] = value;
    }
    toString() {
      return "PonteImage{_id: " + dart.str(this[_id]) + ", _idSistema: " + dart.str(this[_idSistema]) + ", _idPonte: " + dart.str(this[_idPonte]) + ", _idSistemaPonte: " + dart.str(this[_idSistemaPonte]) + ", _imagePath: " + dart.str(this[_imagePath]) + ", _sincronizado: " + dart.str(this[_sincronizado]) + "}";
    }
  };
  (PontePoint.PonteImage.new = function() {
    this[_id] = null;
    this[_idSistema] = null;
    this[_idPonte] = null;
    this[_idSistemaPonte] = null;
    this[_imagePath] = null;
    this[_imageFile] = null;
    this[_sincronizado] = null;
    ;
  }).prototype = PontePoint.PonteImage.prototype;
  (PontePoint.PonteImage.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[6], 168, 26, "map");
    this[_id] = null;
    this[_idSistema] = null;
    this[_idPonte] = null;
    this[_idSistemaPonte] = null;
    this[_imagePath] = null;
    this[_imageFile] = null;
    this[_sincronizado] = null;
    this[_id] = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this[_idSistema] = T.intN().as(map[$_get](DBColumnNames.idSistemaColumn));
    this[_idPonte] = T.intN().as(map[$_get](DBColumnNames.idPonteColumn));
    this[_idSistemaPonte] = T.intN().as(map[$_get](DBColumnNames.idSistemaPonteColumn));
    this[_imagePath] = T.StringN().as(map[$_get](DBColumnNames.ponteImagePathColumn));
    this[_sincronizado] = T.intN().as(map[$_get](DBColumnNames.sincronizadoColumn));
  }).prototype = PontePoint.PonteImage.prototype;
  dart.addTypeTests(PontePoint.PonteImage);
  dart.addTypeCaches(PontePoint.PonteImage);
  dart.setMethodSignature(PontePoint.PonteImage, () => ({
    __proto__: dart.getMethods(PontePoint.PonteImage.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setGetterSignature(PontePoint.PonteImage, () => ({
    __proto__: dart.getGetters(PontePoint.PonteImage.__proto__),
    sincronizado: dart.nullable(core.int),
    imageFile: dart.nullable(io.File),
    imagePath: dart.nullable(core.String),
    idSistemaPonte: dart.nullable(core.int),
    idPonte: dart.nullable(core.int),
    idSistema: dart.nullable(core.int),
    id: dart.nullable(core.int)
  }));
  dart.setSetterSignature(PontePoint.PonteImage, () => ({
    __proto__: dart.getSetters(PontePoint.PonteImage.__proto__),
    sincronizado: dart.nullable(core.int),
    imageFile: dart.nullable(io.File),
    imagePath: dart.nullable(core.String),
    idSistemaPonte: dart.nullable(core.int),
    idPonte: dart.nullable(core.int),
    idSistema: dart.nullable(core.int),
    id: dart.nullable(core.int)
  }));
  dart.setLibraryUri(PontePoint.PonteImage, I[7]);
  dart.setFieldSignature(PontePoint.PonteImage, () => ({
    __proto__: dart.getFields(PontePoint.PonteImage.__proto__),
    [_id]: dart.fieldType(dart.nullable(core.int)),
    [_idSistema]: dart.fieldType(dart.nullable(core.int)),
    [_idPonte]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaPonte]: dart.fieldType(dart.nullable(core.int)),
    [_imagePath]: dart.fieldType(dart.nullable(core.String)),
    [_imageFile]: dart.fieldType(dart.nullable(io.File)),
    [_sincronizado]: dart.fieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(PontePoint.PonteImage, ['toString']);
  var _id$ = dart.privateName(ImovelRoute, "_id");
  var _coordenadas_sede = dart.privateName(ImovelRoute, "_coordenadas_sede");
  var _coordenadas_imovel = dart.privateName(ImovelRoute, "_coordenadas_imovel");
  var _geometry = dart.privateName(ImovelRoute, "_geometry");
  var _sincronizado$ = dart.privateName(ImovelRoute, "_sincronizado");
  var _nome_imovel = dart.privateName(ImovelRoute, "_nome_imovel");
  var _origem_consulta = dart.privateName(ImovelRoute, "_origem_consulta");
  var _idSistemaImovel = dart.privateName(ImovelRoute, "_idSistemaImovel");
  var _idSistemaMunicipio = dart.privateName(ImovelRoute, "_idSistemaMunicipio");
  var _idSistemaRoute = dart.privateName(ImovelRoute, "_idSistemaRoute");
  var _idSistemaUser = dart.privateName(ImovelRoute, "_idSistemaUser");
  ImovelRoute.ImovelRoute = class ImovelRoute extends core.Object {
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaRouteColumn, this[_idSistemaRoute], DBColumnNames.idSistemaUserColumn, this[_idSistemaUser], DBColumnNames.idSistemaMunicipioColumn, this[_idSistemaMunicipio], DBColumnNames.idSistemaImovelColumn, this[_idSistemaImovel], DBColumnNames.origem_consultaColumn, this[_origem_consulta], DBColumnNames.nome_imovelColumn, this[_nome_imovel], DBColumnNames.coordenadas_sedeLatColumn, dart.nullCheck(this[_coordenadas_sede]).latitude, DBColumnNames.coordenadas_sedeLngColumn, dart.nullCheck(this[_coordenadas_sede]).longitude, DBColumnNames.coordenadas_imovelLatColumn, dart.nullCheck(this[_coordenadas_imovel]).latitude, DBColumnNames.coordenadas_imovelLngColumn, dart.nullCheck(this[_coordenadas_imovel]).longitude, DBColumnNames.geometryColumn, this[_geometry], DBColumnNames.sincronizadoColumn, this[_sincronizado$]]);
      if (this[_id$] != null) {
        map[$_set](DBColumnNames.idColumn, this[_id$]);
      }
      return map;
    }
    get coordenadas_sede() {
      return this[_coordenadas_sede];
    }
    set coordenadas_sede(value) {
      if (value == null) dart.nullFailed(I[8], 70, 40, "value");
      this[_coordenadas_sede] = value;
    }
    get coordenadas_imovel() {
      return this[_coordenadas_imovel];
    }
    set coordenadas_imovel(value) {
      if (value == null) dart.nullFailed(I[8], 76, 42, "value");
      this[_coordenadas_imovel] = value;
    }
    get id() {
      return this[_id$];
    }
    set id(value) {
      this[_id$] = value;
    }
    get idSistemaRoute() {
      return this[_idSistemaRoute];
    }
    set idSistemaRoute(value) {
      this[_idSistemaRoute] = value;
    }
    get idSistemaUser() {
      return this[_idSistemaUser];
    }
    set idSistemaUser(value) {
      this[_idSistemaUser] = value;
    }
    get idSistemaMunicipio() {
      return this[_idSistemaMunicipio];
    }
    set idSistemaMunicipio(value) {
      this[_idSistemaMunicipio] = value;
    }
    get idSistemaImovel() {
      return this[_idSistemaImovel];
    }
    set idSistemaImovel(value) {
      this[_idSistemaImovel] = value;
    }
    get origem_consulta() {
      return this[_origem_consulta];
    }
    set origem_consulta(value) {
      this[_origem_consulta] = value;
    }
    get nome_imovel() {
      return this[_nome_imovel];
    }
    set nome_imovel(value) {
      this[_nome_imovel] = value;
    }
    get sincronizado() {
      return this[_sincronizado$];
    }
    set sincronizado(value) {
      this[_sincronizado$] = value;
    }
    get geometry() {
      return this[_geometry];
    }
    set geometry(value) {
      this[_geometry] = value;
    }
    toString() {
      if (this.sincronizado === 1) {
        return "Route{id: " + dart.str(this.id) + ", idSistemaUser: " + dart.str(this.idSistemaUser) + ", idSistemaMunicipio: " + dart.str(this.idSistemaMunicipio) + ", idSistemaImovel: " + dart.str(this.idSistemaImovel) + ", origem_consulta: " + dart.str(this.origem_consulta) + ", nome_imovel: " + dart.str(this.nome_imovel) + ", " + "sincronizado: true}";
      } else {
        return "Route{id: " + dart.str(this.id) + ", idSistemaUser: " + dart.str(this.idSistemaUser) + ", idSistemaMunicipio: " + dart.str(this.idSistemaMunicipio) + ", idSistemaImovel: " + dart.str(this.idSistemaImovel) + ", origem_consulta: " + dart.str(this.origem_consulta) + ", nome_imovel: " + dart.str(this.nome_imovel) + ", " + "sincronizado: false}";
      }
    }
  };
  (ImovelRoute.ImovelRoute.new = function() {
    this[_id$] = null;
    this[_coordenadas_sede] = new PolygonGenerator.LatLngWithAngle.new(0.0, 0.0);
    this[_coordenadas_imovel] = new PolygonGenerator.LatLngWithAngle.new(0.0, 0.0);
    this[_geometry] = null;
    this[_sincronizado$] = null;
    this[_nome_imovel] = null;
    this[_origem_consulta] = null;
    this[_idSistemaImovel] = null;
    this[_idSistemaMunicipio] = null;
    this[_idSistemaRoute] = null;
    this[_idSistemaUser] = null;
    ;
  }).prototype = ImovelRoute.ImovelRoute.prototype;
  (ImovelRoute.ImovelRoute.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[8], 23, 27, "map");
    this[_id$] = null;
    this[_coordenadas_sede] = new PolygonGenerator.LatLngWithAngle.new(0.0, 0.0);
    this[_coordenadas_imovel] = new PolygonGenerator.LatLngWithAngle.new(0.0, 0.0);
    this[_geometry] = null;
    this[_sincronizado$] = null;
    this[_nome_imovel] = null;
    this[_origem_consulta] = null;
    this[_idSistemaImovel] = null;
    this[_idSistemaMunicipio] = null;
    this[_idSistemaRoute] = null;
    this[_idSistemaUser] = null;
    this[_id$] = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this[_idSistemaRoute] = T.intN().as(map[$_get](DBColumnNames.idSistemaRouteColumn));
    this[_idSistemaUser] = T.intN().as(map[$_get](DBColumnNames.idSistemaUserColumn));
    this[_idSistemaMunicipio] = T.intN().as(map[$_get](DBColumnNames.idSistemaMunicipioColumn));
    this[_idSistemaImovel] = T.intN().as(map[$_get](DBColumnNames.idSistemaImovelColumn));
    this[_origem_consulta] = T.StringN().as(map[$_get](DBColumnNames.origem_consultaColumn));
    this[_nome_imovel] = T.StringN().as(map[$_get](DBColumnNames.nome_imovelColumn));
    this[_coordenadas_sede] = new PolygonGenerator.LatLngWithAngle.new(core.double.as(map[$_get](DBColumnNames.coordenadas_sedeLatColumn)), core.double.as(map[$_get](DBColumnNames.coordenadas_sedeLngColumn)));
    this[_coordenadas_imovel] = new PolygonGenerator.LatLngWithAngle.new(core.double.as(map[$_get](DBColumnNames.coordenadas_imovelLatColumn)), core.double.as(map[$_get](DBColumnNames.coordenadas_imovelLngColumn)));
    this[_geometry] = T.StringN().as(map[$_get](DBColumnNames.geometryColumn));
    this[_sincronizado$] = T.intN().as(map[$_get](DBColumnNames.sincronizadoColumn));
  }).prototype = ImovelRoute.ImovelRoute.prototype;
  (ImovelRoute.ImovelRoute.fromJson = function(json) {
    if (json == null) dart.nullFailed(I[8], 59, 45, "json");
    this[_id$] = null;
    this[_coordenadas_sede] = new PolygonGenerator.LatLngWithAngle.new(0.0, 0.0);
    this[_coordenadas_imovel] = new PolygonGenerator.LatLngWithAngle.new(0.0, 0.0);
    this[_geometry] = null;
    this[_sincronizado$] = null;
    this[_idSistemaUser] = core.int.parse(dart.toString(dart.dsend(json[$_get]("properties"), '_get', ["usuario"])));
    this[_idSistemaRoute] = core.int.parse(dart.toString(json[$_get]("id")));
    this[_idSistemaMunicipio] = core.int.parse(dart.toString(dart.dsend(json[$_get]("properties"), '_get', ["municipio"])));
    this[_idSistemaImovel] = core.int.parse(dart.toString(dart.dsend(json[$_get]("properties"), '_get', ["imovel_id"])));
    this[_origem_consulta] = convert.utf8.decode(dart.toString(dart.dsend(json[$_get]("properties"), '_get', ["origem_consulta"]))[$runes][$toList]());
    this[_nome_imovel] = convert.utf8.decode(dart.toString(dart.dsend(json[$_get]("properties"), '_get', ["nome_imovel"]))[$runes][$toList]());
    ;
  }).prototype = ImovelRoute.ImovelRoute.prototype;
  dart.addTypeTests(ImovelRoute.ImovelRoute);
  dart.addTypeCaches(ImovelRoute.ImovelRoute);
  dart.setMethodSignature(ImovelRoute.ImovelRoute, () => ({
    __proto__: dart.getMethods(ImovelRoute.ImovelRoute.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setGetterSignature(ImovelRoute.ImovelRoute, () => ({
    __proto__: dart.getGetters(ImovelRoute.ImovelRoute.__proto__),
    coordenadas_sede: PolygonGenerator.LatLngWithAngle,
    coordenadas_imovel: PolygonGenerator.LatLngWithAngle,
    id: dart.nullable(core.int),
    idSistemaRoute: dart.nullable(core.int),
    idSistemaUser: dart.nullable(core.int),
    idSistemaMunicipio: dart.nullable(core.int),
    idSistemaImovel: dart.nullable(core.int),
    origem_consulta: dart.nullable(core.String),
    nome_imovel: dart.nullable(core.String),
    sincronizado: dart.nullable(core.int),
    geometry: dart.nullable(core.String)
  }));
  dart.setSetterSignature(ImovelRoute.ImovelRoute, () => ({
    __proto__: dart.getSetters(ImovelRoute.ImovelRoute.__proto__),
    coordenadas_sede: PolygonGenerator.LatLngWithAngle,
    coordenadas_imovel: PolygonGenerator.LatLngWithAngle,
    id: dart.nullable(core.int),
    idSistemaRoute: dart.nullable(core.int),
    idSistemaUser: dart.nullable(core.int),
    idSistemaMunicipio: dart.nullable(core.int),
    idSistemaImovel: dart.nullable(core.int),
    origem_consulta: dart.nullable(core.String),
    nome_imovel: dart.nullable(core.String),
    sincronizado: dart.nullable(core.int),
    geometry: dart.nullable(core.String)
  }));
  dart.setLibraryUri(ImovelRoute.ImovelRoute, I[9]);
  dart.setFieldSignature(ImovelRoute.ImovelRoute, () => ({
    __proto__: dart.getFields(ImovelRoute.ImovelRoute.__proto__),
    [_id$]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaRoute]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaUser]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaMunicipio]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaImovel]: dart.fieldType(dart.nullable(core.int)),
    [_origem_consulta]: dart.fieldType(dart.nullable(core.String)),
    [_nome_imovel]: dart.fieldType(dart.nullable(core.String)),
    [_coordenadas_sede]: dart.fieldType(PolygonGenerator.LatLngWithAngle),
    [_coordenadas_imovel]: dart.fieldType(PolygonGenerator.LatLngWithAngle),
    [_geometry]: dart.fieldType(dart.nullable(core.String)),
    [_sincronizado$]: dart.fieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(ImovelRoute.ImovelRoute, ['toString']);
  var _db = dart.privateName(db$, "_db");
  db$.DBHelper = class DBHelper extends core.Object {
    static new() {
      return db$.DBHelper._instance;
    }
    get db() {
      return async.async(T.DatabaseN(), (function* db() {
        if (this[_db] != null) {
          return this[_db];
        } else {
          this[_db] = (yield this.initDb());
          return this[_db];
        }
      }).bind(this));
    }
    initDb() {
      return async.async(sqlite_api.Database, function* initDb() {
        let databasePath = (yield sqflite.getDatabasesPath());
        let path = path$.join(databasePath, "user.db");
        core.print("db location : " + dart.notNull(databasePath));
        let db = (yield sqflite.openDatabase(path));
        if (dart.notNull(yield db.getVersion()) < dart.notNull(db$.version)) {
          db.close();
          yield sqflite.deleteDatabase(path);
          db = (yield sqflite.openDatabase(path, {version: db$.version, onCreate: dart.fn((db, newerVersion) => {
              if (db == null) dart.nullFailed(I[10], 51, 75, "db");
              if (newerVersion == null) dart.nullFailed(I[10], 51, 83, "newerVersion");
              return async.async(dart.void, function*() {
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.userTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY, " + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE, " + dart.str(DBColumnNames.userColumn) + " TEXT," + dart.str(DBColumnNames.passColumn) + " TEXT," + dart.str(DBColumnNames.nameColumn) + " TEXT," + dart.str(DBColumnNames.emailColumn) + " TEXT," + dart.str(DBColumnNames.cpfColumn) + " TEXT," + dart.str(DBColumnNames.rgColumn) + " TEXT," + dart.str(DBColumnNames.telefoneColumn) + " TEXT," + dart.str(DBColumnNames.imovelColumn) + " TEXT," + dart.str(DBColumnNames.municipiosColumn) + " TEXT," + dart.str(DBColumnNames.tokenColumn) + " TEXT);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.municipioTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.nomeMunicipioColumn) + " TEXT," + dart.str(DBColumnNames.slugColumn) + " TEXT," + dart.str(DBColumnNames.estadoColumn) + " INTEGER," + dart.str(DBColumnNames.sigla_ufColumn) + " TEXT," + dart.str(DBColumnNames.cod_ibge_mColumn) + " TEXT," + dart.str(DBColumnNames.latitudeColumn) + " TEXT," + dart.str(DBColumnNames.longitudeColumn) + " TEXT);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.loggedUserTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.geoPointTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.tipoColumn) + " TEXT," + dart.str(DBColumnNames.descricaoColumn) + " TEXT," + dart.str(DBColumnNames.cod_ibge_mColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER," + dart.str(DBColumnNames.latColumn) + " REAL," + dart.str(DBColumnNames.lngColumn) + " REAL);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.imovelTable) + "(" + dart.str(DBColumnNames.idImovelColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaUserColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " INTEGER," + dart.str(DBColumnNames.listGeoPointsColumn) + " TEXT);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.routeTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaRouteColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idSistemaUserColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaImovelColumn) + " INTEGER," + dart.str(DBColumnNames.origem_consultaColumn) + " TEXT," + dart.str(DBColumnNames.nome_imovelColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER," + dart.str(DBColumnNames.geometryColumn) + " TEXT," + dart.str(DBColumnNames.coordenadas_imovelLatColumn) + " REAL," + dart.str(DBColumnNames.coordenadas_imovelLngColumn) + " REAL," + dart.str(DBColumnNames.coordenadas_sedeLatColumn) + " REAL," + dart.str(DBColumnNames.coordenadas_sedeLngColumn) + " REAL);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.levantamentoTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idSistemaUserColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " INTEGER," + dart.str(DBColumnNames.descricaoColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER," + dart.str(DBColumnNames.statusColumn) + " TEXT," + dart.str(DBColumnNames.tipoLevantamentoColumn) + " TEXT);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.estradaPointTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.descricaoColumn) + " TEXT," + dart.str(DBColumnNames.estadoConservacaoColumn) + " TEXT," + dart.str(DBColumnNames.larguraAproximadaColumn) + " TEXT," + dart.str(DBColumnNames.cod_ibge_mColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER," + dart.str(DBColumnNames.latColumn) + " REAL," + dart.str(DBColumnNames.lngColumn) + " REAL," + dart.str(DBColumnNames.tipoPavimentacaoColumn) + " TEXT);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.rotaEscolarPointTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.descricaoColumn) + " TEXT," + dart.str(DBColumnNames.estadoConservacaoColumn) + " TEXT," + dart.str(DBColumnNames.larguraAproximadaColumn) + " TEXT," + dart.str(DBColumnNames.cod_ibge_mColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER," + dart.str(DBColumnNames.latColumn) + " REAL," + dart.str(DBColumnNames.lngColumn) + " REAL," + dart.str(DBColumnNames.tipoPavimentacaoColumn) + " TEXT);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.pontePointTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaLevantamentoColumn) + " INTEGER," + dart.str(DBColumnNames.descricaoColumn) + " TEXT," + dart.str(DBColumnNames.estadoConservacaoColumn) + " TEXT," + dart.str(DBColumnNames.materialColumn) + " TEXT," + dart.str(DBColumnNames.extensaoAproximadaColumn) + " TEXT," + dart.str(DBColumnNames.rioRiachoColumn) + " TEXT," + dart.str(DBColumnNames.cod_ibge_mColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER," + dart.str(DBColumnNames.latColumn) + " REAL," + dart.str(DBColumnNames.lngColumn) + " REAL);");
                yield db.execute("CREATE TABLE " + dart.str(DBColumnNames.ponteImageTable) + "(" + dart.str(DBColumnNames.idColumn) + " INTEGER PRIMARY KEY," + dart.str(DBColumnNames.idSistemaColumn) + " INTEGER UNIQUE," + dart.str(DBColumnNames.idPonteColumn) + " INTEGER," + dart.str(DBColumnNames.idSistemaPonteColumn) + " INTEGER," + dart.str(DBColumnNames.ponteImagePathColumn) + " TEXT," + dart.str(DBColumnNames.sincronizadoColumn) + " INTEGER);");
              });
            }, T.DatabaseAndintToFutureOfvoid())}));
          db.setVersion(db$.version);
        }
        return db;
      });
    }
    saveUser(user) {
      if (user == null) dart.nullFailed(I[10], 184, 30, "user");
      return async.async(user$.User, (function* saveUser() {
        let dbUser = dart.nullCheck(yield this.db);
        try {
          user.id = (yield dbUser.insert(DBColumnNames.userTable, user.toMap()));
          return user;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            return this.updateUser(user);
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveLoggedUser(loggedUser) {
      if (loggedUser == null) dart.nullFailed(I[10], 195, 48, "loggedUser");
      return async.async(user$.LoggedUser, (function* saveLoggedUser() {
        let dbLoggedUser = dart.nullCheck(yield this.db);
        try {
          loggedUser.id = (yield dbLoggedUser.insert(DBColumnNames.loggedUserTable, loggedUser.toMap()));
          core.print("LOGGED USER SAVED -> " + dart.str(loggedUser));
          return loggedUser;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR SAVE LOGGED USER: " + dart.str(e));
            this.deleteLoggedUser();
            loggedUser.id = (yield dbLoggedUser.insert(DBColumnNames.loggedUserTable, loggedUser.toMap()));
            return loggedUser;
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveMunicipio(m) {
      if (m == null) dart.nullFailed(I[10], 209, 46, "m");
      return async.async(T.MunicipioN(), (function* saveMunicipio() {
        let dbMunicipio = dart.nullCheck(yield this.db);
        try {
          m.id = (yield dbMunicipio.insert(DBColumnNames.municipioTable, m.toMap()));
          return m;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            return this.getMunicipio(dart.nullCheck(m.idSistema));
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveGeoPoint(gp) {
      if (gp == null) dart.nullFailed(I[10], 221, 55, "gp");
      return async.async(T.ImovelGeoPointN(), (function* saveGeoPoint() {
        let dbGeo = dart.nullCheck(yield this.db);
        try {
          gp.id = (yield dbGeo.insert(DBColumnNames.geoPointTable, gp.toMap()));
          core.print("GEOPOINT SAVED: " + dart.str(gp));
          return gp;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR GEOPOINT: " + dart.str(e));
            return this.getGeoPoint(dart.nullCheck(gp.id));
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveImovel(imovel) {
      if (imovel == null) dart.nullFailed(I[10], 235, 37, "imovel");
      return async.async(T.ImovelN(), (function* saveImovel() {
        let dbImovel = dart.nullCheck(yield this.db);
        try {
          imovel.id = (yield dbImovel.insert(DBColumnNames.imovelTable, imovel.toMap()));
          core.print("IMOVEL SAVED: " + dart.str(imovel));
          return imovel;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR IMOVEL: " + dart.str(e));
            return this.getImovel(dart.nullCheck(imovel.id));
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveImovelRoute(route) {
      if (route == null) dart.nullFailed(I[10], 249, 52, "route");
      return async.async(T.ImovelRouteN(), (function* saveImovelRoute() {
        let dbRoute = dart.nullCheck(yield this.db);
        try {
          route.id = (yield dbRoute.insert(DBColumnNames.routeTable, route.toMap()));
          return route;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (route.id != null) {
              return this.getImovelRoute(dart.nullCheck(route.id));
            } else {
              return this.updateImovelRoute(route);
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveLevantamento(levantamento) {
      if (levantamento == null) dart.nullFailed(I[10], 270, 55, "levantamento");
      return async.async(T.LevantamentoN(), (function* saveLevantamento() {
        let dbLevantamento = dart.nullCheck(yield this.db);
        try {
          levantamento.id = (yield dbLevantamento.insert(DBColumnNames.levantamentoTable, levantamento.toMap()));
          return levantamento;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (levantamento.id !== 0) {
              return this.updateLevantamento(levantamento);
            } else {
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveEstradaPoint(estradaPoint) {
      if (estradaPoint == null) dart.nullFailed(I[10], 291, 55, "estradaPoint");
      return async.async(T.EstradaPointN(), (function* saveEstradaPoint() {
        let dbEstradaPoint = dart.nullCheck(yield this.db);
        try {
          estradaPoint.id = (yield dbEstradaPoint.insert(DBColumnNames.estradaPointTable, estradaPoint.toMap()));
          return estradaPoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (estradaPoint.id !== 0) {
              return this.updateEstradaPoint(estradaPoint);
            } else {
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    saveRotaEscolar(rotaEscolarPoint) {
      if (rotaEscolarPoint == null) dart.nullFailed(I[10], 312, 62, "rotaEscolarPoint");
      return async.async(T.RotaEscolarPointN(), (function* saveRotaEscolar() {
        let dbRotaEscolar = dart.nullCheck(yield this.db);
        try {
          rotaEscolarPoint.id = (yield dbRotaEscolar.insert(DBColumnNames.rotaEscolarPointTable, rotaEscolarPoint.toMap()));
          return rotaEscolarPoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (rotaEscolarPoint.id !== 0) {
              return this.updateRotaEscolar(rotaEscolarPoint);
            } else {
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    savePonte(pontePoint) {
      if (pontePoint == null) dart.nullFailed(I[10], 333, 44, "pontePoint");
      return async.async(T.PontePointN(), (function* savePonte() {
        let dbPonte = dart.nullCheck(yield this.db);
        try {
          pontePoint.id = (yield dbPonte.insert(DBColumnNames.pontePointTable, pontePoint.toMap()));
          return pontePoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (pontePoint.id !== 0) {
              return this.updatePonte(pontePoint);
            } else {
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    savePonteImage(ponteImage) {
      if (ponteImage == null) dart.nullFailed(I[10], 354, 49, "ponteImage");
      return async.async(T.PonteImageN(), (function* savePonteImage() {
        let dbPonte = dart.nullCheck(yield this.db);
        try {
          ponteImage.id = (yield dbPonte.insert(DBColumnNames.ponteImageTable, ponteImage.toMap()));
          return ponteImage;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (ponteImage.id !== 0) {
              return this.updatePonteImage(ponteImage);
            } else {
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    getUser(id) {
      if (id == null) dart.nullFailed(I[10], 377, 29, "id");
      return async.async(T.UserN(), (function* getUser() {
        let dbUser = dart.nullCheck(yield this.db);
        let maps = (yield dbUser.query(DBColumnNames.userTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.userColumn, DBColumnNames.passColumn, DBColumnNames.nameColumn, DBColumnNames.emailColumn, DBColumnNames.cpfColumn, DBColumnNames.rgColumn, DBColumnNames.telefoneColumn, DBColumnNames.imovelColumn, DBColumnNames.municipiosColumn, DBColumnNames.tokenColumn]), where: dart.str(DBColumnNames.idSistemaColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new user$.User.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getLoggedUser() {
      return async.async(T.UserN(), (function* getLoggedUser() {
        let dbLoggedUser = dart.nullCheck(yield this.db);
        let maps = (yield dbLoggedUser.query(DBColumnNames.loggedUserTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn])}));
        if (dart.notNull(maps[$length]) > 0) {
          return this.getUser(new user$.LoggedUser.fromMap(maps[$first]).idSistema);
        } else {
          return null;
        }
      }).bind(this));
    }
    getMunicipio(id) {
      if (id == null) dart.nullFailed(I[10], 416, 39, "id");
      return async.async(T.MunicipioN(), (function* getMunicipio() {
        let dbMunicipior = dart.nullCheck(yield this.db);
        let maps = (yield dbMunicipior.query(DBColumnNames.municipioTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.nomeMunicipioColumn, DBColumnNames.slugColumn, DBColumnNames.estadoColumn, DBColumnNames.sigla_ufColumn, DBColumnNames.cod_ibge_mColumn, DBColumnNames.latitudeColumn, DBColumnNames.longitudeColumn]), where: dart.str(DBColumnNames.idSistemaColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new municipio.Municipio.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getGeoPoint(id) {
      if (id == null) dart.nullFailed(I[10], 439, 43, "id");
      return async.async(T.ImovelGeoPointN(), (function* getGeoPoint() {
        let dbGeo = dart.nullCheck(yield this.db);
        let maps = (yield dbGeo.query(DBColumnNames.geoPointTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.idLevantamentoColumn, DBColumnNames.idSistemaLevantamentoColumn, DBColumnNames.tipoColumn, DBColumnNames.descricaoColumn, DBColumnNames.cod_ibge_mColumn, DBColumnNames.sincronizadoColumn, DBColumnNames.latColumn, DBColumnNames.lngColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new ImovelGeoPoint.ImovelGeoPoint.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getImovel(id) {
      if (id == null) dart.nullFailed(I[10], 463, 33, "id");
      return async.async(T.ImovelN(), (function* getImovel() {
        let dbImovel = dart.nullCheck(yield this.db);
        let maps = (yield dbImovel.query(DBColumnNames.imovelTable, {columns: T.JSArrayOfString().of([DBColumnNames.idImovelColumn, DBColumnNames.idSistemaUserColumn, DBColumnNames.idSistemaMunicipioColumn, DBColumnNames.listGeoPointsColumn]), where: dart.str(DBColumnNames.idImovelColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new imovel$.Imovel.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getImovelRoute(id) {
      if (id == null) dart.nullFailed(I[10], 481, 43, "id");
      return async.async(T.ImovelRouteN(), (function* getImovelRoute() {
        let dbRoute = dart.nullCheck(yield this.db);
        let maps = (yield dbRoute.query(DBColumnNames.routeTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaRouteColumn, DBColumnNames.idSistemaUserColumn, DBColumnNames.idSistemaMunicipioColumn, DBColumnNames.idSistemaImovelColumn, DBColumnNames.origem_consultaColumn, DBColumnNames.nome_imovelColumn, DBColumnNames.sincronizadoColumn, DBColumnNames.geometryColumn, DBColumnNames.coordenadas_imovelLatColumn, DBColumnNames.coordenadas_imovelLngColumn, DBColumnNames.coordenadas_sedeLatColumn, DBColumnNames.coordenadas_sedeLngColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new ImovelRoute.ImovelRoute.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getLevantamento(id) {
      if (id == null) dart.nullFailed(I[10], 508, 45, "id");
      return async.async(T.LevantamentoN(), (function* getLevantamento() {
        let dbLevantamento = dart.nullCheck(yield this.db);
        let maps = (yield dbLevantamento.query(DBColumnNames.levantamentoTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.idSistemaUserColumn, DBColumnNames.idSistemaMunicipioColumn, DBColumnNames.tipoLevantamentoColumn, DBColumnNames.descricaoColumn, DBColumnNames.statusColumn, DBColumnNames.sincronizadoColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new Levantamento.Levantamento.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getEstradaPoint(id) {
      if (id == null) dart.nullFailed(I[10], 530, 45, "id");
      return async.async(T.EstradaPointN(), (function* getEstradaPoint() {
        let dbEstradaPoint = dart.nullCheck(yield this.db);
        let maps = (yield dbEstradaPoint.query(DBColumnNames.estradaPointTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.idLevantamentoColumn, DBColumnNames.idSistemaLevantamentoColumn, DBColumnNames.descricaoColumn, DBColumnNames.estadoConservacaoColumn, DBColumnNames.tipoPavimentacaoColumn, DBColumnNames.larguraAproximadaColumn, DBColumnNames.cod_ibge_mColumn, DBColumnNames.sincronizadoColumn, DBColumnNames.latColumn, DBColumnNames.lngColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new EstradaPoint.EstradaPoint.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getRotaEscolar(id) {
      if (id == null) dart.nullFailed(I[10], 556, 48, "id");
      return async.async(T.RotaEscolarPointN(), (function* getRotaEscolar() {
        let dbRotaEscolar = dart.nullCheck(yield this.db);
        let maps = (yield dbRotaEscolar.query(DBColumnNames.rotaEscolarPointTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.idLevantamentoColumn, DBColumnNames.idSistemaLevantamentoColumn, DBColumnNames.descricaoColumn, DBColumnNames.estadoConservacaoColumn, DBColumnNames.tipoPavimentacaoColumn, DBColumnNames.larguraAproximadaColumn, DBColumnNames.cod_ibge_mColumn, DBColumnNames.sincronizadoColumn, DBColumnNames.latColumn, DBColumnNames.lngColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new RotaEscolarPoint.RotaEscolarPoint.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getPonte(id) {
      if (id == null) dart.nullFailed(I[10], 582, 36, "id");
      return async.async(T.PontePointN(), (function* getPonte() {
        let dbPonte = dart.nullCheck(yield this.db);
        let maps = (yield dbPonte.query(DBColumnNames.pontePointTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.idLevantamentoColumn, DBColumnNames.idSistemaLevantamentoColumn, DBColumnNames.descricaoColumn, DBColumnNames.estadoConservacaoColumn, DBColumnNames.materialColumn, DBColumnNames.extensaoAproximadaColumn, DBColumnNames.rioRiachoColumn, DBColumnNames.cod_ibge_mColumn, DBColumnNames.sincronizadoColumn, DBColumnNames.latColumn, DBColumnNames.lngColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new PontePoint.PontePoint.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    getPonteImage(id) {
      if (id == null) dart.nullFailed(I[10], 609, 41, "id");
      return async.async(T.PonteImageN(), (function* getPonteImage() {
        let dbPonte = dart.nullCheck(yield this.db);
        let maps = (yield dbPonte.query(DBColumnNames.ponteImageTable, {columns: T.JSArrayOfString().of([DBColumnNames.idColumn, DBColumnNames.idSistemaColumn, DBColumnNames.idPonteColumn, DBColumnNames.idSistemaPonteColumn, DBColumnNames.ponteImagePathColumn, DBColumnNames.sincronizadoColumn]), where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([id])}));
        if (dart.notNull(maps[$length]) > 0) {
          return new PontePoint.PonteImage.fromMap(maps[$first]);
        } else {
          return null;
        }
      }).bind(this));
    }
    deleteLoggedUser() {
      return async.async(core.int, (function* deleteLoggedUser() {
        let dbLoggedUser = dart.nullCheck(yield this.db);
        return yield dbLoggedUser.delete(DBColumnNames.loggedUserTable);
      }).bind(this));
    }
    deleteAllPointsFromLevantamento(store) {
      if (store == null) dart.nullFailed(I[10], 637, 62, "store");
      return async.async(core.int, (function* deleteAllPointsFromLevantamento() {
        let dbEstradaPoints = dart.nullCheck(yield this.db);
        return yield dbEstradaPoints.delete(DBColumnNames.estradaPointTable, {where: dart.str(DBColumnNames.idLevantamentoColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([store.selectedLevantamento.id])});
      }).bind(this));
    }
    deleteAllRotaPointsFromLevantamento(store) {
      if (store == null) dart.nullFailed(I[10], 642, 66, "store");
      return async.async(core.int, (function* deleteAllRotaPointsFromLevantamento() {
        let dbRotaEscolar = dart.nullCheck(yield this.db);
        return yield dbRotaEscolar.delete(DBColumnNames.rotaEscolarPointTable, {where: dart.str(DBColumnNames.idLevantamentoColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([store.selectedLevantamento.id])});
      }).bind(this));
    }
    deleteImagePonte(store) {
      if (store == null) dart.nullFailed(I[10], 647, 47, "store");
      return async.async(core.int, (function* deleteImagePonte() {
        let dbPonte = dart.nullCheck(yield this.db);
        return yield dbPonte.delete(DBColumnNames.pontePointTable, {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([dart.nullCheck(store.selectedPonteImage).id])});
      }).bind(this));
    }
    updateUser(user) {
      if (user == null) dart.nullFailed(I[10], 654, 32, "user");
      return async.async(user$.User, (function* updateUser() {
        let dbUser = dart.nullCheck(yield this.db);
        try {
          user.id = (yield dbUser.update(DBColumnNames.userTable, user.toMap(), {where: dart.str(DBColumnNames.idSistemaColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([user.idSistema])}));
          return user;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE USER: " + dart.str(e));
            return user;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateMunicipio(m) {
      if (m == null) dart.nullFailed(I[10], 666, 47, "m");
      return async.async(municipio.Municipio, (function* updateMunicipio() {
        let dbUser = dart.nullCheck(yield this.db);
        try {
          m.id = (yield dbUser.update(DBColumnNames.municipioTable, m.toMap(), {where: dart.str(DBColumnNames.idSistemaColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([m.idSistema])}));
          return m;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE MUNI: " + dart.str(e));
            return m;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateGeoPoint(geoPoint) {
      if (geoPoint == null) dart.nullFailed(I[10], 678, 56, "geoPoint");
      return async.async(ImovelGeoPoint.ImovelGeoPoint, (function* updateGeoPoint() {
        let dbGeoPoint = dart.nullCheck(yield this.db);
        try {
          geoPoint.id = (yield dbGeoPoint.update(DBColumnNames.geoPointTable, geoPoint.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([geoPoint.id])}));
          return geoPoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE GEOPOINT: " + dart.str(e));
            return geoPoint;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateImovel(imovel) {
      if (imovel == null) dart.nullFailed(I[10], 690, 38, "imovel");
      return async.async(imovel$.Imovel, (function* updateImovel() {
        let dbImovel = dart.nullCheck(yield this.db);
        try {
          imovel.id = (yield dbImovel.update(DBColumnNames.imovelTable, imovel.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([imovel.id])}));
          return imovel;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE IMOVEL: " + dart.str(e));
            return imovel;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateImovelRoute(imovelRoute) {
      if (imovelRoute == null) dart.nullFailed(I[10], 702, 53, "imovelRoute");
      return async.async(ImovelRoute.ImovelRoute, (function* updateImovelRoute() {
        let dbImovelRoute = dart.nullCheck(yield this.db);
        try {
          imovelRoute.id = (yield dbImovelRoute.update(DBColumnNames.routeTable, imovelRoute.toMap(), {where: dart.str(DBColumnNames.idSistemaRouteColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([imovelRoute.idSistemaRoute])}));
          return imovelRoute;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE IMOVEL ROUTE: " + dart.str(e));
            return imovelRoute;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateLevantamento(levantamento) {
      if (levantamento == null) dart.nullFailed(I[10], 714, 56, "levantamento");
      return async.async(Levantamento.Levantamento, (function* updateLevantamento() {
        let dbLevantamento = dart.nullCheck(yield this.db);
        try {
          levantamento.id = (yield dbLevantamento.update(DBColumnNames.levantamentoTable, levantamento.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([levantamento.id])}));
          return levantamento;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE LEVANTAMENTO: " + dart.str(e));
            return levantamento;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEstradaPoint(estradaPoint) {
      if (estradaPoint == null) dart.nullFailed(I[10], 726, 56, "estradaPoint");
      return async.async(EstradaPoint.EstradaPoint, (function* updateEstradaPoint() {
        let dbEstradaPoint = dart.nullCheck(yield this.db);
        try {
          estradaPoint.id = (yield dbEstradaPoint.update(DBColumnNames.estradaPointTable, estradaPoint.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([estradaPoint.id])}));
          return estradaPoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE ESTRADA: " + dart.str(e));
            return estradaPoint;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateRotaEscolar(rotaEscolarPoint) {
      if (rotaEscolarPoint == null) dart.nullFailed(I[10], 738, 63, "rotaEscolarPoint");
      return async.async(RotaEscolarPoint.RotaEscolarPoint, (function* updateRotaEscolar() {
        let dbRotaEscolar = dart.nullCheck(yield this.db);
        try {
          rotaEscolarPoint.id = (yield dbRotaEscolar.update(DBColumnNames.rotaEscolarPointTable, rotaEscolarPoint.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([rotaEscolarPoint.id])}));
          return rotaEscolarPoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE ROTA ESCOLAR: " + dart.str(e));
            return rotaEscolarPoint;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePonte(pontePoint) {
      if (pontePoint == null) dart.nullFailed(I[10], 750, 45, "pontePoint");
      return async.async(PontePoint.PontePoint, (function* updatePonte() {
        let dbPonte = dart.nullCheck(yield this.db);
        try {
          pontePoint.id = (yield dbPonte.update(DBColumnNames.pontePointTable, pontePoint.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([pontePoint.id])}));
          return pontePoint;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE PONTE: " + dart.str(e));
            return pontePoint;
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePonteImage(ponteImage) {
      if (ponteImage == null) dart.nullFailed(I[10], 762, 50, "ponteImage");
      return async.async(PontePoint.PonteImage, (function* updatePonteImage() {
        let dbPonte = dart.nullCheck(yield this.db);
        try {
          ponteImage.id = (yield dbPonte.update(DBColumnNames.ponteImageTable, ponteImage.toMap(), {where: dart.str(DBColumnNames.idColumn) + " = ?", whereArgs: T.JSArrayOfObjectN().of([ponteImage.id])}));
          return ponteImage;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("ERROR UPDATE PONTE IMAGE: " + dart.str(e));
            return ponteImage;
          } else
            throw e$;
        }
      }).bind(this));
    }
    getAllMunicipiosByUserList(store) {
      if (store == null) dart.nullFailed(I[10], 777, 58, "store");
      return async.async(core.List, (function* getAllMunicipiosByUserList() {
        let municipiosUserList = store.u.municipios[$split](",");
        let dbMunicipio = dart.nullCheck(yield this.db);
        let listMap = (yield dbMunicipio.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.municipioTable)));
        let listMunicipio = [];
        core.print("LISTA USER = " + dart.str(municipiosUserList));
        store.clearMunicipioList();
        let aux = new municipio.Municipio.new();
        aux.idSistema = 0;
        aux.nome = "- - - -";
        aux.sigla_uf = "";
        store.addMunicipioList(aux);
        for (let t34 of listMap) {
          let m = core.Map.as(t34);
          core.print("Map m -> " + dart.str(m));
          let mun = new municipio.Municipio.fromMap(m);
          if (dart.test(municipiosUserList[$contains](dart.toString(mun.idSistema)))) {
            core.print("REACHED -> " + dart.str(m));
            listMunicipio[$add](new municipio.Municipio.fromMap(m));
            store.addMunicipioList(new municipio.Municipio.fromMap(m));
          } else {
          }
        }
        store.setMunicipio(aux);
        return listMunicipio;
      }).bind(this));
    }
    getAllAsyncGeoPoints(store) {
      if (store == null) dart.nullFailed(I[10], 803, 52, "store");
      return async.async(core.List, (function* getAllAsyncGeoPoints() {
        let dbGeoPoint = dart.nullCheck(yield this.db);
        let idSistemaUser = store.u.idSistema;
        let idSistemaMunicipio = dart.nullCheck(store.m.idSistema);
        let listMap = (yield dbGeoPoint.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.geoPointTable) + " WHERE " + dart.str(DBColumnNames.idSistemaUserColumn) + " " + "= " + dart.str(idSistemaUser) + " AND " + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " = " + dart.str(idSistemaMunicipio) + " AND " + dart.str(DBColumnNames.sincronizadoColumn) + " = 0;"));
        let listGeoPoints = T.JSArrayOfImovelGeoPoint().of([]);
        let aux = 0;
        for (let t35 of listMap) {
          let m = core.Map.as(t35);
          core.print("Map m -> " + dart.str(m));
          let g = new ImovelGeoPoint.ImovelGeoPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(g));
          if (g.sincronizado === 0) {
            aux = aux + 1;
          }
          listGeoPoints[$add](g);
        }
        core.print("QTD DESSINCRONIZADO => " + dart.str(aux));
        if (aux > 0) {
          store.setAllSincronized(false);
        } else {
          store.setAllSincronized(true);
        }
        return listGeoPoints;
      }).bind(this));
    }
    getAllImoveis(store) {
      if (store == null) dart.nullFailed(I[10], 833, 45, "store");
      return async.async(core.List, (function* getAllImoveis() {
        let dbImovel = dart.nullCheck(yield this.db);
        let idSistemaUser = store.u.idSistema;
        let idSistemaMunicipio = dart.nullCheck(store.m.idSistema);
        let listMap = (yield dbImovel.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.imovelTable) + " WHERE " + dart.str(DBColumnNames.idSistemaUserColumn) + " " + "= " + dart.str(idSistemaUser) + " AND " + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " = " + dart.str(idSistemaMunicipio)));
        let listImovel = T.JSArrayOfImovel().of([]);
        let aux = 0;
        for (let t36 of listMap) {
          let m = core.Map.as(t36);
          core.print("Map m -> " + dart.str(m));
          let i = new imovel$.Imovel.fromMap(m);
          core.print("REACHED -> " + dart.str(i));
          listImovel[$add](i);
        }
        core.print("QTD IMOVEIS => " + dart.toString(listImovel[$length]));
        return listImovel;
      }).bind(this));
    }
    getAllImovelRoutes(store) {
      if (store == null) dart.nullFailed(I[10], 854, 44, "store");
      return async.async(dart.dynamic, (function* getAllImovelRoutes() {
        let dbImovelRoute = dart.nullCheck(yield this.db);
        let idSistemaUser = store.u.idSistema;
        let idSistemaMunicipio = dart.nullCheck(store.m.idSistema);
        let listMap = (yield dbImovelRoute.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.routeTable) + " WHERE " + dart.str(DBColumnNames.idSistemaUserColumn) + " " + "= ? AND " + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " = ?", T.JSArrayOfObjectN().of([dart.str(idSistemaUser), dart.str(idSistemaMunicipio)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearImovelRoute();
        for (let t37 of listMap) {
          let m = core.Map.as(t37);
          core.print("Map m -> " + dart.str(m));
          let r = new ImovelRoute.ImovelRoute.fromMap(m);
          core.print("REACHED -> " + dart.str(r));
          store.addImovelRoute(r);
        }
        core.print("QTD Rotas =>  " + dart.str(store.imovelRouteList.length));
      }).bind(this));
    }
    getAllLevantamentos(store) {
      if (store == null) dart.nullFailed(I[10], 875, 45, "store");
      return async.async(dart.dynamic, (function* getAllLevantamentos() {
        let dbLevantamentos = dart.nullCheck(yield this.db);
        let idSistemaUser = store.u.idSistema;
        let idSistemaMunicipio = dart.nullCheck(store.m.idSistema);
        let listMap = (yield dbLevantamentos.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.levantamentoTable) + " WHERE " + dart.str(DBColumnNames.idSistemaUserColumn) + " " + "= ? AND " + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " = ?", T.JSArrayOfObjectN().of([dart.str(idSistemaUser), dart.str(idSistemaMunicipio)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearLevantamentosList();
        for (let t38 of listMap) {
          let m = core.Map.as(t38);
          core.print("Map m -> " + dart.str(m));
          let l = new Levantamento.Levantamento.fromMap(m);
          core.print("REACHED -> " + dart.str(l));
          store.addLevantamentosList(l);
        }
        core.print("QTD Levantamentos =>  " + dart.str(store.levantamentosList.length));
      }).bind(this));
    }
    getAllAsyncLevantamentos(store) {
      if (store == null) dart.nullFailed(I[10], 896, 50, "store");
      return async.async(dart.dynamic, (function* getAllAsyncLevantamentos() {
        let dbLevantamentos = dart.nullCheck(yield this.db);
        let idSistemaUser = store.u.idSistema;
        let idSistemaMunicipio = dart.nullCheck(store.m.idSistema);
        let listMap = (yield dbLevantamentos.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.levantamentoTable) + " WHERE " + dart.str(DBColumnNames.idSistemaUserColumn) + " " + "= ? AND " + dart.str(DBColumnNames.idSistemaMunicipioColumn) + " = ? AND " + dart.str(DBColumnNames.sincronizadoColumn) + " = ? AND " + dart.str(DBColumnNames.statusColumn) + " = ?", T.JSArrayOfObjectN().of([dart.str(idSistemaUser), dart.str(idSistemaMunicipio), "0", "finalizado"])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearLevantamentosAsyncList();
        for (let t39 of listMap) {
          let m = core.Map.as(t39);
          core.print("Map m -> " + dart.str(m));
          let l = new Levantamento.Levantamento.fromMap(m);
          core.print("REACHED -> " + dart.str(l));
          store.addLevantamentosAsyncList(l);
        }
        core.print("QTD Levantamentos Async =>  " + dart.str(store.levantamentosListAsync.length));
      }).bind(this));
    }
    getAllEstradaPointsByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 918, 57, "l");
      if (store == null) dart.nullFailed(I[10], 918, 75, "store");
      return async.async(dart.dynamic, (function* getAllEstradaPointsByLevantamento() {
        let dbEstradaPoint = dart.nullCheck(yield this.db);
        let listMap = (yield dbEstradaPoint.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.estradaPointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearEstradaPointList();
        for (let t40 of listMap) {
          let m = core.Map.as(t40);
          core.print("Map m -> " + dart.str(m));
          let e = new EstradaPoint.EstradaPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(e));
          store.addEstradaPointList(e);
        }
        core.print("QTD Estrada Points =>  " + dart.str(store.estradaPointList.length));
      }).bind(this));
    }
    getAllAsyncEstradaPointsByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 937, 62, "l");
      if (store == null) dart.nullFailed(I[10], 937, 80, "store");
      return async.async(dart.dynamic, (function* getAllAsyncEstradaPointsByLevantamento() {
        let dbEstradaPoint = dart.nullCheck(yield this.db);
        let listMap = (yield dbEstradaPoint.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.estradaPointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearEstradaPointAsyncList();
        for (let t41 of listMap) {
          let m = core.Map.as(t41);
          core.print("Map m -> " + dart.str(m));
          let e = new EstradaPoint.EstradaPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(e));
          store.addEstradaPointAsyncList(e);
        }
        core.print("QTD Estrada Points =>  " + dart.str(store.estradaPointListAsync.length));
      }).bind(this));
    }
    getAllRotaEscolarPointsByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 956, 61, "l");
      if (store == null) dart.nullFailed(I[10], 956, 79, "store");
      return async.async(dart.dynamic, (function* getAllRotaEscolarPointsByLevantamento() {
        let dbRotaEscolar = dart.nullCheck(yield this.db);
        let listMap = (yield dbRotaEscolar.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.rotaEscolarPointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearRotaEscolarPointList();
        for (let t42 of listMap) {
          let m = core.Map.as(t42);
          core.print("Map m -> " + dart.str(m));
          let r = new RotaEscolarPoint.RotaEscolarPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(r));
          store.addRotaEscolarPointList(r);
        }
        core.print("QTD Rota Escolar Points =>  " + dart.str(store.rotaEscolarPointList.length));
      }).bind(this));
    }
    getAllAsyncRotaEscolarPointsByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 975, 66, "l");
      if (store == null) dart.nullFailed(I[10], 975, 84, "store");
      return async.async(dart.dynamic, (function* getAllAsyncRotaEscolarPointsByLevantamento() {
        let dbRotaEscolar = dart.nullCheck(yield this.db);
        let listMap = (yield dbRotaEscolar.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.rotaEscolarPointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearRotaEscolarPointAsyncList();
        for (let t43 of listMap) {
          let m = core.Map.as(t43);
          core.print("Map m -> " + dart.str(m));
          let r = new RotaEscolarPoint.RotaEscolarPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(r));
          store.addRotaEscolarPointAsyncList(r);
        }
        core.print("QTD Rota Escolar Points =>  " + dart.str(store.rotaEscolarPointListAsync.length));
      }).bind(this));
    }
    getAllGeoPointsByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 994, 53, "l");
      if (store == null) dart.nullFailed(I[10], 994, 71, "store");
      return async.async(dart.dynamic, (function* getAllGeoPointsByLevantamento() {
        let dbImovelGeoPoint = dart.nullCheck(yield this.db);
        let listMap = (yield dbImovelGeoPoint.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.geoPointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearImovelGeoPointList();
        for (let t44 of listMap) {
          let m = core.Map.as(t44);
          core.print("Map m -> " + dart.str(m));
          let i = new ImovelGeoPoint.ImovelGeoPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(i));
          store.addImovelGeoPointList(i);
        }
        core.print("QTD IMOVEL Points =>  " + dart.str(store.imovelGeoPointList.length));
      }).bind(this));
    }
    getAllAsyncGeoPointsByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 1013, 58, "l");
      if (store == null) dart.nullFailed(I[10], 1013, 76, "store");
      return async.async(dart.dynamic, (function* getAllAsyncGeoPointsByLevantamento() {
        let dbImovelGeoPoint = dart.nullCheck(yield this.db);
        let listMap = (yield dbImovelGeoPoint.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.geoPointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearImovelGeoPointAsyncList();
        for (let t45 of listMap) {
          let m = core.Map.as(t45);
          core.print("Map m -> " + dart.str(m));
          let i = new ImovelGeoPoint.ImovelGeoPoint.fromMap(m);
          core.print("REACHED -> " + dart.str(i));
          store.addImovelGeoPointAsyncList(i);
        }
        core.print("QTD IMOVEL ASYNC Points =>  " + dart.str(store.imovelGeoPointListAsync.length));
      }).bind(this));
    }
    getAllPontesByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 1033, 50, "l");
      if (store == null) dart.nullFailed(I[10], 1033, 68, "store");
      return async.async(dart.dynamic, (function* getAllPontesByLevantamento() {
        let dbPonte = dart.nullCheck(yield this.db);
        let listMap = (yield dbPonte.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.pontePointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearPonteList();
        for (let t46 of listMap) {
          let m = core.Map.as(t46);
          core.print("Map m -> " + dart.str(m));
          let i = new PontePoint.PontePoint.fromMap(m);
          core.print("REACHED -> " + dart.str(i));
          store.addPonteList(i);
        }
        core.print("QTD PONTE Points =>  " + dart.str(store.ponteList.length));
      }).bind(this));
    }
    getAllAsyncPontesByLevantamento(l, store) {
      if (l == null) dart.nullFailed(I[10], 1052, 55, "l");
      if (store == null) dart.nullFailed(I[10], 1052, 73, "store");
      return async.async(dart.dynamic, (function* getAllAsyncPontesByLevantamento() {
        let dbPonte = dart.nullCheck(yield this.db);
        let listMap = (yield dbPonte.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.pontePointTable) + " WHERE " + dart.str(DBColumnNames.idLevantamentoColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(l.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearPonteAsyncList();
        for (let t47 of listMap) {
          let m = core.Map.as(t47);
          core.print("Map m -> " + dart.str(m));
          let i = new PontePoint.PontePoint.fromMap(m);
          core.print("REACHED -> " + dart.str(i));
          store.addPonteAsyncList(i);
        }
        core.print("QTD PONTE ASYNC Points =>  " + dart.str(store.ponteListAsync.length));
      }).bind(this));
    }
    getAllPonteImagesByPontePoint(pp, store) {
      if (pp == null) dart.nullFailed(I[10], 1071, 51, "pp");
      if (store == null) dart.nullFailed(I[10], 1071, 70, "store");
      return async.async(dart.dynamic, (function* getAllPonteImagesByPontePoint() {
        let dbPonte = dart.nullCheck(yield this.db);
        let listMap = (yield dbPonte.rawQuery("SELECT * FROM " + dart.str(DBColumnNames.ponteImageTable) + " WHERE " + dart.str(DBColumnNames.idPonteColumn) + " " + "= ?", T.JSArrayOfObjectN().of([dart.str(pp.id)])));
        core.print("LIST-MAP here -> " + dart.str(listMap));
        store.clearPonteImages();
        for (let t48 of listMap) {
          let m = core.Map.as(t48);
          core.print("Map m -> " + dart.str(m));
          let i = new PontePoint.PonteImage.fromMap(m);
          core.print("REACHED -> " + dart.str(i));
          store.addPonteImagesList(i);
        }
        store.addPonteImageLastPosition();
        core.print("QTD PONTE IMAGES =>  " + dart.str(store.ponteImages.length));
      }).bind(this));
    }
  };
  (db$.DBHelper.internal = function() {
    this[_db] = null;
    ;
  }).prototype = db$.DBHelper.prototype;
  dart.addTypeTests(db$.DBHelper);
  dart.addTypeCaches(db$.DBHelper);
  dart.setMethodSignature(db$.DBHelper, () => ({
    __proto__: dart.getMethods(db$.DBHelper.__proto__),
    initDb: dart.fnType(async.Future$(sqlite_api.Database), []),
    saveUser: dart.fnType(async.Future$(user$.User), [user$.User]),
    saveLoggedUser: dart.fnType(async.Future$(user$.LoggedUser), [user$.LoggedUser]),
    saveMunicipio: dart.fnType(async.Future$(dart.nullable(municipio.Municipio)), [municipio.Municipio]),
    saveGeoPoint: dart.fnType(async.Future$(dart.nullable(ImovelGeoPoint.ImovelGeoPoint)), [ImovelGeoPoint.ImovelGeoPoint]),
    saveImovel: dart.fnType(async.Future$(dart.nullable(imovel$.Imovel)), [imovel$.Imovel]),
    saveImovelRoute: dart.fnType(async.Future$(dart.nullable(ImovelRoute.ImovelRoute)), [ImovelRoute.ImovelRoute]),
    saveLevantamento: dart.fnType(async.Future$(dart.nullable(Levantamento.Levantamento)), [Levantamento.Levantamento]),
    saveEstradaPoint: dart.fnType(async.Future$(dart.nullable(EstradaPoint.EstradaPoint)), [EstradaPoint.EstradaPoint]),
    saveRotaEscolar: dart.fnType(async.Future$(dart.nullable(RotaEscolarPoint.RotaEscolarPoint)), [RotaEscolarPoint.RotaEscolarPoint]),
    savePonte: dart.fnType(async.Future$(dart.nullable(PontePoint.PontePoint)), [PontePoint.PontePoint]),
    savePonteImage: dart.fnType(async.Future$(dart.nullable(PontePoint.PonteImage)), [PontePoint.PonteImage]),
    getUser: dart.fnType(async.Future$(dart.nullable(user$.User)), [core.int]),
    getLoggedUser: dart.fnType(async.Future$(dart.nullable(user$.User)), []),
    getMunicipio: dart.fnType(async.Future$(dart.nullable(municipio.Municipio)), [core.int]),
    getGeoPoint: dart.fnType(async.Future$(dart.nullable(ImovelGeoPoint.ImovelGeoPoint)), [core.int]),
    getImovel: dart.fnType(async.Future$(dart.nullable(imovel$.Imovel)), [core.int]),
    getImovelRoute: dart.fnType(async.Future$(dart.nullable(ImovelRoute.ImovelRoute)), [core.int]),
    getLevantamento: dart.fnType(async.Future$(dart.nullable(Levantamento.Levantamento)), [core.int]),
    getEstradaPoint: dart.fnType(async.Future$(dart.nullable(EstradaPoint.EstradaPoint)), [core.int]),
    getRotaEscolar: dart.fnType(async.Future$(dart.nullable(RotaEscolarPoint.RotaEscolarPoint)), [core.int]),
    getPonte: dart.fnType(async.Future$(dart.nullable(PontePoint.PontePoint)), [core.int]),
    getPonteImage: dart.fnType(async.Future$(dart.nullable(PontePoint.PonteImage)), [core.int]),
    deleteLoggedUser: dart.fnType(async.Future$(core.int), []),
    deleteAllPointsFromLevantamento: dart.fnType(async.Future$(core.int), [login_data_store.LoginDataStore]),
    deleteAllRotaPointsFromLevantamento: dart.fnType(async.Future$(core.int), [login_data_store.LoginDataStore]),
    deleteImagePonte: dart.fnType(async.Future$(core.int), [login_data_store.LoginDataStore]),
    updateUser: dart.fnType(async.Future$(user$.User), [user$.User]),
    updateMunicipio: dart.fnType(async.Future$(municipio.Municipio), [municipio.Municipio]),
    updateGeoPoint: dart.fnType(async.Future$(ImovelGeoPoint.ImovelGeoPoint), [ImovelGeoPoint.ImovelGeoPoint]),
    updateImovel: dart.fnType(async.Future$(imovel$.Imovel), [imovel$.Imovel]),
    updateImovelRoute: dart.fnType(async.Future$(ImovelRoute.ImovelRoute), [ImovelRoute.ImovelRoute]),
    updateLevantamento: dart.fnType(async.Future$(Levantamento.Levantamento), [Levantamento.Levantamento]),
    updateEstradaPoint: dart.fnType(async.Future$(EstradaPoint.EstradaPoint), [EstradaPoint.EstradaPoint]),
    updateRotaEscolar: dart.fnType(async.Future$(RotaEscolarPoint.RotaEscolarPoint), [RotaEscolarPoint.RotaEscolarPoint]),
    updatePonte: dart.fnType(async.Future$(PontePoint.PontePoint), [PontePoint.PontePoint]),
    updatePonteImage: dart.fnType(async.Future$(PontePoint.PonteImage), [PontePoint.PonteImage]),
    getAllMunicipiosByUserList: dart.fnType(async.Future$(core.List), [login_data_store.LoginDataStore]),
    getAllAsyncGeoPoints: dart.fnType(async.Future$(core.List), [login_data_store.LoginDataStore]),
    getAllImoveis: dart.fnType(async.Future$(core.List), [login_data_store.LoginDataStore]),
    getAllImovelRoutes: dart.fnType(async.Future, [login_data_store.LoginDataStore]),
    getAllLevantamentos: dart.fnType(async.Future, [login_data_store.LoginDataStore]),
    getAllAsyncLevantamentos: dart.fnType(async.Future, [login_data_store.LoginDataStore]),
    getAllEstradaPointsByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllAsyncEstradaPointsByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllRotaEscolarPointsByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllAsyncRotaEscolarPointsByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllGeoPointsByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllAsyncGeoPointsByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllPontesByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllAsyncPontesByLevantamento: dart.fnType(async.Future, [Levantamento.Levantamento, login_data_store.LoginDataStore]),
    getAllPonteImagesByPontePoint: dart.fnType(async.Future, [PontePoint.PontePoint, login_data_store.LoginDataStore])
  }));
  dart.setGetterSignature(db$.DBHelper, () => ({
    __proto__: dart.getGetters(db$.DBHelper.__proto__),
    db: async.Future$(dart.nullable(sqlite_api.Database))
  }));
  dart.setLibraryUri(db$.DBHelper, I[11]);
  dart.setFieldSignature(db$.DBHelper, () => ({
    __proto__: dart.getFields(db$.DBHelper.__proto__),
    [_db]: dart.fieldType(dart.nullable(sqlite_api.Database))
  }));
  dart.defineLazy(db$.DBHelper, {
    /*db$.DBHelper._instance*/get _instance() {
      return new db$.DBHelper.internal();
    }
  }, false);
  dart.defineLazy(db$, {
    /*db$.version*/get version() {
      return 64;
    }
  }, false);
  var _id$0 = dart.privateName(ImovelGeoPoint, "_id");
  var _idSistema$ = dart.privateName(ImovelGeoPoint, "_idSistema");
  var _idLevantamento$ = dart.privateName(ImovelGeoPoint, "_idLevantamento");
  var _idSistemaLevantamento$ = dart.privateName(ImovelGeoPoint, "_idSistemaLevantamento");
  var _tipo = dart.privateName(ImovelGeoPoint, "_tipo");
  var _descricao$ = dart.privateName(ImovelGeoPoint, "_descricao");
  var _cod_ibge_m$ = dart.privateName(ImovelGeoPoint, "_cod_ibge_m");
  var _geom$ = dart.privateName(ImovelGeoPoint, "_geom");
  var _sincronizado$0 = dart.privateName(ImovelGeoPoint, "_sincronizado");
  ImovelGeoPoint.ImovelGeoPoint = class ImovelGeoPoint extends core.Object {
    toMap() {
      let map = new (T.IdentityMapOfString$dynamic()).from([DBColumnNames.idSistemaColumn, this[_idSistema$], DBColumnNames.idLevantamentoColumn, this[_idLevantamento$], DBColumnNames.idSistemaLevantamentoColumn, this[_idSistemaLevantamento$], DBColumnNames.tipoColumn, this[_tipo], DBColumnNames.descricaoColumn, this[_descricao$], DBColumnNames.cod_ibge_mColumn, this[_cod_ibge_m$], DBColumnNames.latColumn, dart.nullCheck(this[_geom$]).latitude, DBColumnNames.lngColumn, dart.nullCheck(this[_geom$]).longitude, DBColumnNames.sincronizadoColumn, this[_sincronizado$0]]);
      if (this[_id$0] != null) {
        map[$_set](DBColumnNames.idColumn, this[_id$0]);
      }
      return map;
    }
    getGeom() {
      return "POINT(" + dart.toString(dart.nullCheck(this[_geom$]).longitude) + " " + dart.toString(dart.nullCheck(this[_geom$]).latitude) + ")";
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["levantamento", this[_idSistemaLevantamento$], "descricao", this[_descricao$], "tipo", this[_tipo], "cod_ibge_m", this[_cod_ibge_m$], "geom", this.getGeom()]);
    }
    get sincronizado() {
      return this[_sincronizado$0];
    }
    set sincronizado(value) {
      this[_sincronizado$0] = value;
    }
    get geom() {
      return this[_geom$];
    }
    set geom(value) {
      this[_geom$] = value;
    }
    get cod_ibge_m() {
      return this[_cod_ibge_m$];
    }
    set cod_ibge_m(value) {
      this[_cod_ibge_m$] = value;
    }
    get descricao() {
      return this[_descricao$];
    }
    set descricao(value) {
      this[_descricao$] = value;
    }
    get tipo() {
      return this[_tipo];
    }
    set tipo(value) {
      this[_tipo] = value;
    }
    get idSistemaLevantamento() {
      return this[_idSistemaLevantamento$];
    }
    set idSistemaLevantamento(value) {
      this[_idSistemaLevantamento$] = value;
    }
    get idLevantamento() {
      return this[_idLevantamento$];
    }
    set idLevantamento(value) {
      this[_idLevantamento$] = value;
    }
    get idSistema() {
      return this[_idSistema$];
    }
    set idSistema(value) {
      this[_idSistema$] = value;
    }
    get id() {
      return this[_id$0];
    }
    set id(value) {
      this[_id$0] = value;
    }
    toString() {
      return "ImovelGeoPoint{_id: " + dart.str(this[_id$0]) + ", _idSistema: " + dart.str(this[_idSistema$]) + ", _idLevantamento: " + dart.str(this[_idLevantamento$]) + ", _idSistemaLevantamento: " + dart.str(this[_idSistemaLevantamento$]) + ", _tipo: " + dart.str(this[_tipo]) + ", _descricao: " + dart.str(this[_descricao$]) + ", _cod_ibge_m: " + dart.str(this[_cod_ibge_m$]) + ", _geom: " + dart.str(this[_geom$]) + ", _sincronizado: " + dart.str(this[_sincronizado$0]) + "}";
    }
  };
  (ImovelGeoPoint.ImovelGeoPoint.new = function() {
    this[_id$0] = null;
    this[_idSistema$] = null;
    this[_idLevantamento$] = null;
    this[_idSistemaLevantamento$] = null;
    this[_tipo] = null;
    this[_descricao$] = null;
    this[_cod_ibge_m$] = null;
    this[_geom$] = null;
    this[_sincronizado$0] = null;
    ;
  }).prototype = ImovelGeoPoint.ImovelGeoPoint.prototype;
  (ImovelGeoPoint.ImovelGeoPoint.fromMap = function(map) {
    if (map == null) dart.nullFailed(I[12], 19, 30, "map");
    this[_id$0] = null;
    this[_idSistema$] = null;
    this[_idLevantamento$] = null;
    this[_idSistemaLevantamento$] = null;
    this[_tipo] = null;
    this[_descricao$] = null;
    this[_cod_ibge_m$] = null;
    this[_geom$] = null;
    this[_sincronizado$0] = null;
    this[_id$0] = T.intN().as(map[$_get](DBColumnNames.idColumn));
    this[_idSistema$] = T.intN().as(map[$_get](DBColumnNames.idSistemaColumn));
    this[_idLevantamento$] = T.intN().as(map[$_get](DBColumnNames.idLevantamentoColumn));
    this[_idSistemaLevantamento$] = T.intN().as(map[$_get](DBColumnNames.idSistemaLevantamentoColumn));
    this[_tipo] = T.StringN().as(map[$_get](DBColumnNames.tipoColumn));
    this[_descricao$] = T.StringN().as(map[$_get](DBColumnNames.descricaoColumn));
    this[_cod_ibge_m$] = T.StringN().as(map[$_get](DBColumnNames.cod_ibge_mColumn));
    this[_geom$] = new PolygonGenerator.LatLngWithAngle.new(core.double.as(map[$_get](DBColumnNames.latColumn)), core.double.as(map[$_get](DBColumnNames.lngColumn)));
    this[_sincronizado$0] = T.intN().as(map[$_get](DBColumnNames.sincronizadoColumn));
  }).prototype = ImovelGeoPoint.ImovelGeoPoint.prototype;
  dart.addTypeTests(ImovelGeoPoint.ImovelGeoPoint);
  dart.addTypeCaches(ImovelGeoPoint.ImovelGeoPoint);
  dart.setMethodSignature(ImovelGeoPoint.ImovelGeoPoint, () => ({
    __proto__: dart.getMethods(ImovelGeoPoint.ImovelGeoPoint.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), []),
    getGeom: dart.fnType(core.String, []),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setGetterSignature(ImovelGeoPoint.ImovelGeoPoint, () => ({
    __proto__: dart.getGetters(ImovelGeoPoint.ImovelGeoPoint.__proto__),
    sincronizado: dart.nullable(core.int),
    geom: dart.nullable(PolygonGenerator.LatLngWithAngle),
    cod_ibge_m: dart.nullable(core.String),
    descricao: dart.nullable(core.String),
    tipo: dart.nullable(core.String),
    idSistemaLevantamento: dart.nullable(core.int),
    idLevantamento: dart.nullable(core.int),
    idSistema: dart.nullable(core.int),
    id: dart.nullable(core.int)
  }));
  dart.setSetterSignature(ImovelGeoPoint.ImovelGeoPoint, () => ({
    __proto__: dart.getSetters(ImovelGeoPoint.ImovelGeoPoint.__proto__),
    sincronizado: dart.nullable(core.int),
    geom: dart.nullable(PolygonGenerator.LatLngWithAngle),
    cod_ibge_m: dart.nullable(core.String),
    descricao: dart.nullable(core.String),
    tipo: dart.nullable(core.String),
    idSistemaLevantamento: dart.nullable(core.int),
    idLevantamento: dart.nullable(core.int),
    idSistema: dart.nullable(core.int),
    id: dart.nullable(core.int)
  }));
  dart.setLibraryUri(ImovelGeoPoint.ImovelGeoPoint, I[13]);
  dart.setFieldSignature(ImovelGeoPoint.ImovelGeoPoint, () => ({
    __proto__: dart.getFields(ImovelGeoPoint.ImovelGeoPoint.__proto__),
    [_id$0]: dart.fieldType(dart.nullable(core.int)),
    [_idSistema$]: dart.fieldType(dart.nullable(core.int)),
    [_idLevantamento$]: dart.fieldType(dart.nullable(core.int)),
    [_idSistemaLevantamento$]: dart.fieldType(dart.nullable(core.int)),
    [_tipo]: dart.fieldType(dart.nullable(core.String)),
    [_descricao$]: dart.fieldType(dart.nullable(core.String)),
    [_cod_ibge_m$]: dart.fieldType(dart.nullable(core.String)),
    [_geom$]: dart.fieldType(dart.nullable(PolygonGenerator.LatLngWithAngle)),
    [_sincronizado$0]: dart.fieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(ImovelGeoPoint.ImovelGeoPoint, ['toString']);
  var _$isColectedComputed = dart.privateName(login_data_store, "_$isColectedComputed");
  var _$isCidadeValidComputed = dart.privateName(login_data_store, "_$isCidadeValidComputed");
  var _$tipoSelectedComputed = dart.privateName(login_data_store, "_$tipoSelectedComputed");
  var _$isIdentValidComputed = dart.privateName(login_data_store, "_$isIdentValidComputed");
  var _$isColorFinishedComputed = dart.privateName(login_data_store, "_$isColorFinishedComputed");
  var _$isTipoVerticeComputed = dart.privateName(login_data_store, "_$isTipoVerticeComputed");
  var _$isAllSincronizedComputed = dart.privateName(login_data_store, "_$isAllSincronizedComputed");
  var _$isMarkerVisibleComputed = dart.privateName(login_data_store, "_$isMarkerVisibleComputed");
  var _$isImovelUsingComputed = dart.privateName(login_data_store, "_$isImovelUsingComputed");
  var _$isMapLoadingComputed = dart.privateName(login_data_store, "_$isMapLoadingComputed");
  var _$isButtonsVisibleComputed = dart.privateName(login_data_store, "_$isButtonsVisibleComputed");
  var _$isButtonIniciarNavegacaoVisibleComputed = dart.privateName(login_data_store, "_$isButtonIniciarNavegacaoVisibleComputed");
  var _$isNavigationStartedComputed = dart.privateName(login_data_store, "_$isNavigationStartedComputed");
  var _$isNavigationStartedWithoutCompassComputed = dart.privateName(login_data_store, "_$isNavigationStartedWithoutCompassComputed");
  var _$hasSelectedRouteComputed = dart.privateName(login_data_store, "_$hasSelectedRouteComputed");
  var _$isRouteDoneComputed = dart.privateName(login_data_store, "_$isRouteDoneComputed");
  var _$isLevantamentoFormValidComputed = dart.privateName(login_data_store, "_$isLevantamentoFormValidComputed");
  var _$isLevantamentoSincronizadoComputed = dart.privateName(login_data_store, "_$isLevantamentoSincronizadoComputed");
  var _$isEstradaFormValidComputed = dart.privateName(login_data_store, "_$isEstradaFormValidComputed");
  var _$isEstradaStartedComputed = dart.privateName(login_data_store, "_$isEstradaStartedComputed");
  var _$isEstradaCaptureStartedComputed = dart.privateName(login_data_store, "_$isEstradaCaptureStartedComputed");
  var _$isRotaEscolarFormValidComputed = dart.privateName(login_data_store, "_$isRotaEscolarFormValidComputed");
  var _$isRotaEscolarStartedComputed = dart.privateName(login_data_store, "_$isRotaEscolarStartedComputed");
  var _$isRotaEscolarCaptureStartedComputed = dart.privateName(login_data_store, "_$isRotaEscolarCaptureStartedComputed");
  var _$isGeoPointFormValidComputed = dart.privateName(login_data_store, "_$isGeoPointFormValidComputed");
  var _$isImovelStartedComputed = dart.privateName(login_data_store, "_$isImovelStartedComputed");
  var _$isImovelCaptureStartedComputed = dart.privateName(login_data_store, "_$isImovelCaptureStartedComputed");
  var _$isPonteFormValidComputed = dart.privateName(login_data_store, "_$isPonteFormValidComputed");
  var _$isPonteStartedComputed = dart.privateName(login_data_store, "_$isPonteStartedComputed");
  var _$isPonteCaptureStartedComputed = dart.privateName(login_data_store, "_$isPonteCaptureStartedComputed");
  var _$mAtom = dart.privateName(login_data_store, "_$mAtom");
  var _$uAtom = dart.privateName(login_data_store, "_$uAtom");
  var _$loggedInAtom = dart.privateName(login_data_store, "_$loggedInAtom");
  var _$municipioSelectorEnabledAtom = dart.privateName(login_data_store, "_$municipioSelectorEnabledAtom");
  var _$statusBarHeightAtom = dart.privateName(login_data_store, "_$statusBarHeightAtom");
  var _$tipo_pontoAtom = dart.privateName(login_data_store, "_$tipo_pontoAtom");
  var _$identificacaoAtom = dart.privateName(login_data_store, "_$identificacaoAtom");
  var _$userPositionAtom = dart.privateName(login_data_store, "_$userPositionAtom");
  var _$oldUserPositionAtom = dart.privateName(login_data_store, "_$oldUserPositionAtom");
  var _$colorStateValueAtom = dart.privateName(login_data_store, "_$colorStateValueAtom");
  var _$verticeActualValueAtom = dart.privateName(login_data_store, "_$verticeActualValueAtom");
  var _$colectedAtom = dart.privateName(login_data_store, "_$colectedAtom");
  var _$allSincronizedAtom = dart.privateName(login_data_store, "_$allSincronizedAtom");
  var _$markers_visibleAtom = dart.privateName(login_data_store, "_$markers_visibleAtom");
  var _$imovelAtom = dart.privateName(login_data_store, "_$imovelAtom");
  var _$geoJsonFileNameAtom = dart.privateName(login_data_store, "_$geoJsonFileNameAtom");
  var _$javaScriptFileNameAtom = dart.privateName(login_data_store, "_$javaScriptFileNameAtom");
  var _$pathHtmlAtom = dart.privateName(login_data_store, "_$pathHtmlAtom");
  var _$mapLoadingAtom = dart.privateName(login_data_store, "_$mapLoadingAtom");
  var _$buttonsVisibilityAtom = dart.privateName(login_data_store, "_$buttonsVisibilityAtom");
  var _$buttonIniciarNavegacaoVisibilityAtom = dart.privateName(login_data_store, "_$buttonIniciarNavegacaoVisibilityAtom");
  var _$buttonIniciarNavegacaoTextAtom = dart.privateName(login_data_store, "_$buttonIniciarNavegacaoTextAtom");
  var _$navigationHeadingAtom = dart.privateName(login_data_store, "_$navigationHeadingAtom");
  var _$routePathAtom = dart.privateName(login_data_store, "_$routePathAtom");
  var _$selectedImovelRouteAtom = dart.privateName(login_data_store, "_$selectedImovelRouteAtom");
  var _$selectedLevantamentoAtom = dart.privateName(login_data_store, "_$selectedLevantamentoAtom");
  var _$routeDoneAtom = dart.privateName(login_data_store, "_$routeDoneAtom");
  var _$levantamentoDescricaoAtom = dart.privateName(login_data_store, "_$levantamentoDescricaoAtom");
  var _$estradaDescricaoAtom = dart.privateName(login_data_store, "_$estradaDescricaoAtom");
  var _$estradaEstadoDeConservacaoAtom = dart.privateName(login_data_store, "_$estradaEstadoDeConservacaoAtom");
  var _$estradaTipoDePavimentacaoAtom = dart.privateName(login_data_store, "_$estradaTipoDePavimentacaoAtom");
  var _$estradaLarguraAproximadaAtom = dart.privateName(login_data_store, "_$estradaLarguraAproximadaAtom");
  var _$estradaStartAtom = dart.privateName(login_data_store, "_$estradaStartAtom");
  var _$estradaPointTimerAtom = dart.privateName(login_data_store, "_$estradaPointTimerAtom");
  var _$lastEstradaPointAtom = dart.privateName(login_data_store, "_$lastEstradaPointAtom");
  var _$buttonIniciarCapturaEstradaTextAtom = dart.privateName(login_data_store, "_$buttonIniciarCapturaEstradaTextAtom");
  var _$rotaEscolarDescricaoAtom = dart.privateName(login_data_store, "_$rotaEscolarDescricaoAtom");
  var _$rotaEscolarEstadoDeConservacaoAtom = dart.privateName(login_data_store, "_$rotaEscolarEstadoDeConservacaoAtom");
  var _$rotaEscolarTipoDePavimentacaoAtom = dart.privateName(login_data_store, "_$rotaEscolarTipoDePavimentacaoAtom");
  var _$rotaEscolarLarguraAproximadaAtom = dart.privateName(login_data_store, "_$rotaEscolarLarguraAproximadaAtom");
  var _$rotaEscolarStartAtom = dart.privateName(login_data_store, "_$rotaEscolarStartAtom");
  var _$rotaEscolarPointTimerAtom = dart.privateName(login_data_store, "_$rotaEscolarPointTimerAtom");
  var _$lastRotaEscolarPointAtom = dart.privateName(login_data_store, "_$lastRotaEscolarPointAtom");
  var _$buttonIniciarCapturaRotaEscolarTextAtom = dart.privateName(login_data_store, "_$buttonIniciarCapturaRotaEscolarTextAtom");
  var _$imovelGeoPointDescricaoAtom = dart.privateName(login_data_store, "_$imovelGeoPointDescricaoAtom");
  var _$imovelGeoPointTipoAtom = dart.privateName(login_data_store, "_$imovelGeoPointTipoAtom");
  var _$imovelGeoPointStartAtom = dart.privateName(login_data_store, "_$imovelGeoPointStartAtom");
  var _$buttonIniciarCapturaImovelTextAtom = dart.privateName(login_data_store, "_$buttonIniciarCapturaImovelTextAtom");
  var _$ponteDescricaoAtom = dart.privateName(login_data_store, "_$ponteDescricaoAtom");
  var _$ponteEstadoConservacaoAtom = dart.privateName(login_data_store, "_$ponteEstadoConservacaoAtom");
  var _$ponteMaterialAtom = dart.privateName(login_data_store, "_$ponteMaterialAtom");
  var _$ponteExtensaoAproximadaAtom = dart.privateName(login_data_store, "_$ponteExtensaoAproximadaAtom");
  var _$ponteRioRiachoAtom = dart.privateName(login_data_store, "_$ponteRioRiachoAtom");
  var _$ponteStartAtom = dart.privateName(login_data_store, "_$ponteStartAtom");
  var _$buttonIniciarCapturaPonteTextAtom = dart.privateName(login_data_store, "_$buttonIniciarCapturaPonteTextAtom");
  var _$selectedPonteImageAtom = dart.privateName(login_data_store, "_$selectedPonteImageAtom");
  var _$_LoginDataStoreActionController = dart.privateName(login_data_store, "_$_LoginDataStoreActionController");
  var m = dart.privateName(login_data_store, "_LoginDataStore.m");
  var u = dart.privateName(login_data_store, "_LoginDataStore.u");
  var loggedIn = dart.privateName(login_data_store, "_LoginDataStore.loggedIn");
  var municipioSelectorEnabled = dart.privateName(login_data_store, "_LoginDataStore.municipioSelectorEnabled");
  var statusBarHeight = dart.privateName(login_data_store, "_LoginDataStore.statusBarHeight");
  var tipo_ponto = dart.privateName(login_data_store, "_LoginDataStore.tipo_ponto");
  var identificacao = dart.privateName(login_data_store, "_LoginDataStore.identificacao");
  var userPosition = dart.privateName(login_data_store, "_LoginDataStore.userPosition");
  var oldUserPosition = dart.privateName(login_data_store, "_LoginDataStore.oldUserPosition");
  var colorStateValue = dart.privateName(login_data_store, "_LoginDataStore.colorStateValue");
  var verticeActualValue = dart.privateName(login_data_store, "_LoginDataStore.verticeActualValue");
  var colected = dart.privateName(login_data_store, "_LoginDataStore.colected");
  var allSincronized = dart.privateName(login_data_store, "_LoginDataStore.allSincronized");
  var markers_visible = dart.privateName(login_data_store, "_LoginDataStore.markers_visible");
  var imovel = dart.privateName(login_data_store, "_LoginDataStore.imovel");
  var geoJsonFileName = dart.privateName(login_data_store, "_LoginDataStore.geoJsonFileName");
  var javaScriptFileName = dart.privateName(login_data_store, "_LoginDataStore.javaScriptFileName");
  var pathHtml = dart.privateName(login_data_store, "_LoginDataStore.pathHtml");
  var mapLoading = dart.privateName(login_data_store, "_LoginDataStore.mapLoading");
  var buttonsVisibility = dart.privateName(login_data_store, "_LoginDataStore.buttonsVisibility");
  var buttonIniciarNavegacaoVisibility = dart.privateName(login_data_store, "_LoginDataStore.buttonIniciarNavegacaoVisibility");
  var buttonIniciarNavegacaoText = dart.privateName(login_data_store, "_LoginDataStore.buttonIniciarNavegacaoText");
  var navigationHeading = dart.privateName(login_data_store, "_LoginDataStore.navigationHeading");
  var imovelRouteList = dart.privateName(login_data_store, "_LoginDataStore.imovelRouteList");
  var routeLatLngList = dart.privateName(login_data_store, "_LoginDataStore.routeLatLngList");
  var municipiosList = dart.privateName(login_data_store, "_LoginDataStore.municipiosList");
  var levantamentosList = dart.privateName(login_data_store, "_LoginDataStore.levantamentosList");
  var levantamentosListAsync = dart.privateName(login_data_store, "_LoginDataStore.levantamentosListAsync");
  var estradaPointList = dart.privateName(login_data_store, "_LoginDataStore.estradaPointList");
  var estradaPointListAsync = dart.privateName(login_data_store, "_LoginDataStore.estradaPointListAsync");
  var rotaEscolarPointList = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarPointList");
  var rotaEscolarPointListAsync = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarPointListAsync");
  var imovelGeoPointList = dart.privateName(login_data_store, "_LoginDataStore.imovelGeoPointList");
  var imovelGeoPointListAsync = dart.privateName(login_data_store, "_LoginDataStore.imovelGeoPointListAsync");
  var ponteList = dart.privateName(login_data_store, "_LoginDataStore.ponteList");
  var ponteListAsync = dart.privateName(login_data_store, "_LoginDataStore.ponteListAsync");
  var ponteImages = dart.privateName(login_data_store, "_LoginDataStore.ponteImages");
  var routePath = dart.privateName(login_data_store, "_LoginDataStore.routePath");
  var selectedImovelRoute = dart.privateName(login_data_store, "_LoginDataStore.selectedImovelRoute");
  var selectedLevantamento = dart.privateName(login_data_store, "_LoginDataStore.selectedLevantamento");
  var routeDone = dart.privateName(login_data_store, "_LoginDataStore.routeDone");
  var levantamentoDescricao = dart.privateName(login_data_store, "_LoginDataStore.levantamentoDescricao");
  var estradaDescricao = dart.privateName(login_data_store, "_LoginDataStore.estradaDescricao");
  var estradaEstadoDeConservacao = dart.privateName(login_data_store, "_LoginDataStore.estradaEstadoDeConservacao");
  var estradaTipoDePavimentacao = dart.privateName(login_data_store, "_LoginDataStore.estradaTipoDePavimentacao");
  var estradaLarguraAproximada = dart.privateName(login_data_store, "_LoginDataStore.estradaLarguraAproximada");
  var estradaStart = dart.privateName(login_data_store, "_LoginDataStore.estradaStart");
  var estradaPointTimer = dart.privateName(login_data_store, "_LoginDataStore.estradaPointTimer");
  var lastEstradaPoint = dart.privateName(login_data_store, "_LoginDataStore.lastEstradaPoint");
  var buttonIniciarCapturaEstradaText = dart.privateName(login_data_store, "_LoginDataStore.buttonIniciarCapturaEstradaText");
  var rotaEscolarDescricao = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarDescricao");
  var rotaEscolarEstadoDeConservacao = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarEstadoDeConservacao");
  var rotaEscolarTipoDePavimentacao = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarTipoDePavimentacao");
  var rotaEscolarLarguraAproximada = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarLarguraAproximada");
  var rotaEscolarStart = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarStart");
  var rotaEscolarPointTimer = dart.privateName(login_data_store, "_LoginDataStore.rotaEscolarPointTimer");
  var lastRotaEscolarPoint = dart.privateName(login_data_store, "_LoginDataStore.lastRotaEscolarPoint");
  var buttonIniciarCapturaRotaEscolarText = dart.privateName(login_data_store, "_LoginDataStore.buttonIniciarCapturaRotaEscolarText");
  var imovelGeoPointDescricao = dart.privateName(login_data_store, "_LoginDataStore.imovelGeoPointDescricao");
  var imovelGeoPointTipo = dart.privateName(login_data_store, "_LoginDataStore.imovelGeoPointTipo");
  var imovelGeoPointStart = dart.privateName(login_data_store, "_LoginDataStore.imovelGeoPointStart");
  var buttonIniciarCapturaImovelText = dart.privateName(login_data_store, "_LoginDataStore.buttonIniciarCapturaImovelText");
  var ponteDescricao = dart.privateName(login_data_store, "_LoginDataStore.ponteDescricao");
  var ponteEstadoConservacao = dart.privateName(login_data_store, "_LoginDataStore.ponteEstadoConservacao");
  var ponteMaterial = dart.privateName(login_data_store, "_LoginDataStore.ponteMaterial");
  var ponteExtensaoAproximada = dart.privateName(login_data_store, "_LoginDataStore.ponteExtensaoAproximada");
  var ponteRioRiacho = dart.privateName(login_data_store, "_LoginDataStore.ponteRioRiacho");
  var ponteStart = dart.privateName(login_data_store, "_LoginDataStore.ponteStart");
  var buttonIniciarCapturaPonteText = dart.privateName(login_data_store, "_LoginDataStore.buttonIniciarCapturaPonteText");
  var selectedPonteImage = dart.privateName(login_data_store, "_LoginDataStore.selectedPonteImage");
  const Object_Store$36 = class Object_Store extends core.Object {};
  (Object_Store$36.new = function() {
  }).prototype = Object_Store$36.prototype;
  dart.applyMixin(Object_Store$36, store.Store);
  login_data_store._LoginDataStore = class _LoginDataStore extends Object_Store$36 {
    get m() {
      return this[m];
    }
    set m(value) {
      this[m] = value;
    }
    get u() {
      return this[u];
    }
    set u(value) {
      this[u] = value;
    }
    get loggedIn() {
      return this[loggedIn];
    }
    set loggedIn(value) {
      this[loggedIn] = value;
    }
    get municipioSelectorEnabled() {
      return this[municipioSelectorEnabled];
    }
    set municipioSelectorEnabled(value) {
      this[municipioSelectorEnabled] = value;
    }
    get statusBarHeight() {
      return this[statusBarHeight];
    }
    set statusBarHeight(value) {
      this[statusBarHeight] = value;
    }
    get tipo_ponto() {
      return this[tipo_ponto];
    }
    set tipo_ponto(value) {
      this[tipo_ponto] = value;
    }
    get identificacao() {
      return this[identificacao];
    }
    set identificacao(value) {
      this[identificacao] = value;
    }
    get userPosition() {
      return this[userPosition];
    }
    set userPosition(value) {
      this[userPosition] = value;
    }
    get oldUserPosition() {
      return this[oldUserPosition];
    }
    set oldUserPosition(value) {
      this[oldUserPosition] = value;
    }
    get colorStateValue() {
      return this[colorStateValue];
    }
    set colorStateValue(value) {
      this[colorStateValue] = value;
    }
    get verticeActualValue() {
      return this[verticeActualValue];
    }
    set verticeActualValue(value) {
      this[verticeActualValue] = value;
    }
    get colected() {
      return this[colected];
    }
    set colected(value) {
      this[colected] = value;
    }
    get allSincronized() {
      return this[allSincronized];
    }
    set allSincronized(value) {
      this[allSincronized] = value;
    }
    get markers_visible() {
      return this[markers_visible];
    }
    set markers_visible(value) {
      this[markers_visible] = value;
    }
    get imovel() {
      return this[imovel];
    }
    set imovel(value) {
      this[imovel] = value;
    }
    get geoJsonFileName() {
      return this[geoJsonFileName];
    }
    set geoJsonFileName(value) {
      this[geoJsonFileName] = value;
    }
    get javaScriptFileName() {
      return this[javaScriptFileName];
    }
    set javaScriptFileName(value) {
      this[javaScriptFileName] = value;
    }
    get pathHtml() {
      return this[pathHtml];
    }
    set pathHtml(value) {
      this[pathHtml] = value;
    }
    get mapLoading() {
      return this[mapLoading];
    }
    set mapLoading(value) {
      this[mapLoading] = value;
    }
    get buttonsVisibility() {
      return this[buttonsVisibility];
    }
    set buttonsVisibility(value) {
      this[buttonsVisibility] = value;
    }
    get buttonIniciarNavegacaoVisibility() {
      return this[buttonIniciarNavegacaoVisibility];
    }
    set buttonIniciarNavegacaoVisibility(value) {
      this[buttonIniciarNavegacaoVisibility] = value;
    }
    get buttonIniciarNavegacaoText() {
      return this[buttonIniciarNavegacaoText];
    }
    set buttonIniciarNavegacaoText(value) {
      this[buttonIniciarNavegacaoText] = value;
    }
    get navigationHeading() {
      return this[navigationHeading];
    }
    set navigationHeading(value) {
      this[navigationHeading] = value;
    }
    get imovelRouteList() {
      return this[imovelRouteList];
    }
    set imovelRouteList(value) {
      this[imovelRouteList] = value;
    }
    get routeLatLngList() {
      return this[routeLatLngList];
    }
    set routeLatLngList(value) {
      this[routeLatLngList] = value;
    }
    get municipiosList() {
      return this[municipiosList];
    }
    set municipiosList(value) {
      this[municipiosList] = value;
    }
    get levantamentosList() {
      return this[levantamentosList];
    }
    set levantamentosList(value) {
      this[levantamentosList] = value;
    }
    get levantamentosListAsync() {
      return this[levantamentosListAsync];
    }
    set levantamentosListAsync(value) {
      this[levantamentosListAsync] = value;
    }
    get estradaPointList() {
      return this[estradaPointList];
    }
    set estradaPointList(value) {
      this[estradaPointList] = value;
    }
    get estradaPointListAsync() {
      return this[estradaPointListAsync];
    }
    set estradaPointListAsync(value) {
      this[estradaPointListAsync] = value;
    }
    get rotaEscolarPointList() {
      return this[rotaEscolarPointList];
    }
    set rotaEscolarPointList(value) {
      this[rotaEscolarPointList] = value;
    }
    get rotaEscolarPointListAsync() {
      return this[rotaEscolarPointListAsync];
    }
    set rotaEscolarPointListAsync(value) {
      this[rotaEscolarPointListAsync] = value;
    }
    get imovelGeoPointList() {
      return this[imovelGeoPointList];
    }
    set imovelGeoPointList(value) {
      this[imovelGeoPointList] = value;
    }
    get imovelGeoPointListAsync() {
      return this[imovelGeoPointListAsync];
    }
    set imovelGeoPointListAsync(value) {
      this[imovelGeoPointListAsync] = value;
    }
    get ponteList() {
      return this[ponteList];
    }
    set ponteList(value) {
      this[ponteList] = value;
    }
    get ponteListAsync() {
      return this[ponteListAsync];
    }
    set ponteListAsync(value) {
      this[ponteListAsync] = value;
    }
    get ponteImages() {
      return this[ponteImages];
    }
    set ponteImages(value) {
      this[ponteImages] = value;
    }
    get routePath() {
      return this[routePath];
    }
    set routePath(value) {
      this[routePath] = value;
    }
    get selectedImovelRoute() {
      return this[selectedImovelRoute];
    }
    set selectedImovelRoute(value) {
      this[selectedImovelRoute] = value;
    }
    get selectedLevantamento() {
      return this[selectedLevantamento];
    }
    set selectedLevantamento(value) {
      this[selectedLevantamento] = value;
    }
    get routeDone() {
      return this[routeDone];
    }
    set routeDone(value) {
      this[routeDone] = value;
    }
    get levantamentoDescricao() {
      return this[levantamentoDescricao];
    }
    set levantamentoDescricao(value) {
      this[levantamentoDescricao] = value;
    }
    get estradaDescricao() {
      return this[estradaDescricao];
    }
    set estradaDescricao(value) {
      this[estradaDescricao] = value;
    }
    get estradaEstadoDeConservacao() {
      return this[estradaEstadoDeConservacao];
    }
    set estradaEstadoDeConservacao(value) {
      this[estradaEstadoDeConservacao] = value;
    }
    get estradaTipoDePavimentacao() {
      return this[estradaTipoDePavimentacao];
    }
    set estradaTipoDePavimentacao(value) {
      this[estradaTipoDePavimentacao] = value;
    }
    get estradaLarguraAproximada() {
      return this[estradaLarguraAproximada];
    }
    set estradaLarguraAproximada(value) {
      this[estradaLarguraAproximada] = value;
    }
    get estradaStart() {
      return this[estradaStart];
    }
    set estradaStart(value) {
      this[estradaStart] = value;
    }
    get estradaPointTimer() {
      return this[estradaPointTimer];
    }
    set estradaPointTimer(value) {
      this[estradaPointTimer] = value;
    }
    get lastEstradaPoint() {
      return this[lastEstradaPoint];
    }
    set lastEstradaPoint(value) {
      this[lastEstradaPoint] = value;
    }
    get buttonIniciarCapturaEstradaText() {
      return this[buttonIniciarCapturaEstradaText];
    }
    set buttonIniciarCapturaEstradaText(value) {
      this[buttonIniciarCapturaEstradaText] = value;
    }
    get rotaEscolarDescricao() {
      return this[rotaEscolarDescricao];
    }
    set rotaEscolarDescricao(value) {
      this[rotaEscolarDescricao] = value;
    }
    get rotaEscolarEstadoDeConservacao() {
      return this[rotaEscolarEstadoDeConservacao];
    }
    set rotaEscolarEstadoDeConservacao(value) {
      this[rotaEscolarEstadoDeConservacao] = value;
    }
    get rotaEscolarTipoDePavimentacao() {
      return this[rotaEscolarTipoDePavimentacao];
    }
    set rotaEscolarTipoDePavimentacao(value) {
      this[rotaEscolarTipoDePavimentacao] = value;
    }
    get rotaEscolarLarguraAproximada() {
      return this[rotaEscolarLarguraAproximada];
    }
    set rotaEscolarLarguraAproximada(value) {
      this[rotaEscolarLarguraAproximada] = value;
    }
    get rotaEscolarStart() {
      return this[rotaEscolarStart];
    }
    set rotaEscolarStart(value) {
      this[rotaEscolarStart] = value;
    }
    get rotaEscolarPointTimer() {
      return this[rotaEscolarPointTimer];
    }
    set rotaEscolarPointTimer(value) {
      this[rotaEscolarPointTimer] = value;
    }
    get lastRotaEscolarPoint() {
      return this[lastRotaEscolarPoint];
    }
    set lastRotaEscolarPoint(value) {
      this[lastRotaEscolarPoint] = value;
    }
    get buttonIniciarCapturaRotaEscolarText() {
      return this[buttonIniciarCapturaRotaEscolarText];
    }
    set buttonIniciarCapturaRotaEscolarText(value) {
      this[buttonIniciarCapturaRotaEscolarText] = value;
    }
    get imovelGeoPointDescricao() {
      return this[imovelGeoPointDescricao];
    }
    set imovelGeoPointDescricao(value) {
      this[imovelGeoPointDescricao] = value;
    }
    get imovelGeoPointTipo() {
      return this[imovelGeoPointTipo];
    }
    set imovelGeoPointTipo(value) {
      this[imovelGeoPointTipo] = value;
    }
    get imovelGeoPointStart() {
      return this[imovelGeoPointStart];
    }
    set imovelGeoPointStart(value) {
      this[imovelGeoPointStart] = value;
    }
    get buttonIniciarCapturaImovelText() {
      return this[buttonIniciarCapturaImovelText];
    }
    set buttonIniciarCapturaImovelText(value) {
      this[buttonIniciarCapturaImovelText] = value;
    }
    get ponteDescricao() {
      return this[ponteDescricao];
    }
    set ponteDescricao(value) {
      this[ponteDescricao] = value;
    }
    get ponteEstadoConservacao() {
      return this[ponteEstadoConservacao];
    }
    set ponteEstadoConservacao(value) {
      this[ponteEstadoConservacao] = value;
    }
    get ponteMaterial() {
      return this[ponteMaterial];
    }
    set ponteMaterial(value) {
      this[ponteMaterial] = value;
    }
    get ponteExtensaoAproximada() {
      return this[ponteExtensaoAproximada];
    }
    set ponteExtensaoAproximada(value) {
      this[ponteExtensaoAproximada] = value;
    }
    get ponteRioRiacho() {
      return this[ponteRioRiacho];
    }
    set ponteRioRiacho(value) {
      this[ponteRioRiacho] = value;
    }
    get ponteStart() {
      return this[ponteStart];
    }
    set ponteStart(value) {
      this[ponteStart] = value;
    }
    get buttonIniciarCapturaPonteText() {
      return this[buttonIniciarCapturaPonteText];
    }
    set buttonIniciarCapturaPonteText(value) {
      this[buttonIniciarCapturaPonteText] = value;
    }
    get selectedPonteImage() {
      return this[selectedPonteImage];
    }
    set selectedPonteImage(value) {
      this[selectedPonteImage] = value;
    }
    setMunicipio(municipio) {
      if (municipio == null) dart.nullFailed(I[14], 234, 31, "municipio");
      this.m = municipio;
    }
    setUser(user) {
      if (user == null) dart.nullFailed(I[14], 239, 21, "user");
      this.u = user;
    }
    login() {
      this.loggedIn = true;
    }
    logout() {
      this.setUser(new user$.User.new());
      this.setMunicipio(new municipio.Municipio.new());
      this.setImovel(new imovel$.Imovel.new(false));
      this.loggedIn = false;
    }
    setStatusBarHeight(d) {
      if (d == null) dart.nullFailed(I[14], 257, 34, "d");
      this.statusBarHeight = d;
    }
    setTipo(value) {
      if (value == null) dart.nullFailed(I[14], 262, 20, "value");
      return this.tipo_ponto = value;
    }
    setIdent(value) {
      if (value == null) dart.nullFailed(I[14], 265, 24, "value");
      return this.identificacao = value;
    }
    setUserPosition(position) {
      if (position == null) dart.nullFailed(I[14], 268, 33, "position");
      if (this.userPosition == null) {
        this.userPosition = position;
        this.oldUserPosition = this.userPosition;
      } else {
        this.oldUserPosition = this.userPosition;
        this.userPosition = position;
      }
    }
    setColorStateValue(value) {
      if (value == null) dart.nullFailed(I[14], 281, 31, "value");
      this.colorStateValue = value;
    }
    setVerticeActualValue(value) {
      if (value == null) dart.nullFailed(I[14], 286, 34, "value");
      this.verticeActualValue = value;
    }
    setCollected(value) {
      if (value == null) dart.nullFailed(I[14], 291, 26, "value");
      return this.colected = value;
    }
    setAllSincronized(value) {
      if (value == null) dart.nullFailed(I[14], 294, 31, "value");
      return this.allSincronized = value;
    }
    toggleMarkers() {
      this.markers_visible = !dart.test(this.markers_visible);
    }
    setMarkersVisibility(value) {
      if (value == null) dart.nullFailed(I[14], 302, 34, "value");
      this.markers_visible = value;
    }
    setImovel(im) {
      if (im == null) dart.nullFailed(I[14], 307, 25, "im");
      this.imovel = im;
    }
    setGeoJsonFileName(f) {
      if (f == null) dart.nullFailed(I[14], 312, 34, "f");
      this.geoJsonFileName = f;
    }
    setJavaScriptFileName(f) {
      if (f == null) dart.nullFailed(I[14], 317, 37, "f");
      this.javaScriptFileName = f;
    }
    setPathHtml(s) {
      if (s == null) dart.nullFailed(I[14], 322, 27, "s");
      this.pathHtml = s;
    }
    setMapLoading(b) {
      if (b == null) dart.nullFailed(I[14], 327, 27, "b");
      this.mapLoading = b;
    }
    setButtonsVisibility(b) {
      if (b == null) dart.nullFailed(I[14], 332, 34, "b");
      this.buttonsVisibility = b;
    }
    setButtonIniciarNavegacaoVisibility(b) {
      if (b == null) dart.nullFailed(I[14], 337, 49, "b");
      this.buttonIniciarNavegacaoVisibility = b;
    }
    setButtonIniciarNavegacaoText(T) {
      if (T == null) dart.nullFailed(I[14], 342, 45, "T");
      this.buttonIniciarNavegacaoText = T;
    }
    setNavigationHeading(d) {
      if (d == null) dart.nullFailed(I[14], 347, 36, "d");
      this.navigationHeading = d;
    }
    addMunicipioList(m) {
      if (m == null) dart.nullFailed(I[14], 353, 35, "m");
      this.municipiosList.add(m);
    }
    clearMunicipioList() {
      this.municipiosList.clear();
    }
    setRoutPath(p) {
      if (p == null) dart.nullFailed(I[14], 366, 33, "p");
      this.routePath = p;
    }
    addImovelRoute(i) {
      if (i == null) dart.nullFailed(I[14], 371, 35, "i");
      this.imovelRouteList.add(i);
    }
    clearImovelRoute() {
      this.imovelRouteList.clear();
    }
    addLatLngRoute(l) {
      if (l == null) dart.nullFailed(I[14], 382, 38, "l");
      this.routeLatLngList.add(l);
    }
    clearLatLngRoute() {
      this.routeLatLngList.clear();
    }
    setSelectedImovelRoute(i) {
      if (i == null) dart.nullFailed(I[14], 393, 43, "i");
      this.selectedImovelRoute = i;
    }
    setSelectedLevantamento(l) {
      if (l == null) dart.nullFailed(I[14], 398, 45, "l");
      this.selectedLevantamento = l;
    }
    setRouteDone(b) {
      if (b == null) dart.nullFailed(I[14], 403, 26, "b");
      this.routeDone = b;
    }
    clearButtons() {
      this.buttonIniciarNavegacaoVisibility = false;
      this.buttonIniciarNavegacaoText = "INICIAR NAVEGAÇÃO";
      this.buttonIniciarCapturaImovelText = "INICIAR CAPTURA DO PONTO";
      this.buttonIniciarCapturaEstradaText = "INICIAR CAPTURA DA ESTRADA";
      this.buttonIniciarCapturaRotaEscolarText = "INICIAR CAPTURA DA ROTA ESCOLAR";
      this.estradaStart = false;
      this.rotaEscolarStart = false;
      this.imovelGeoPointStart = false;
    }
    setLevantamentoDescricao(d) {
      if (d == null) dart.nullFailed(I[14], 422, 40, "d");
      this.levantamentoDescricao = d;
    }
    addLevantamentosList(l) {
      if (l == null) dart.nullFailed(I[14], 427, 42, "l");
      this.levantamentosList.add(l);
    }
    clearLevantamentosList() {
      this.levantamentosList.clear();
    }
    addLevantamentosAsyncList(l) {
      if (l == null) dart.nullFailed(I[14], 438, 47, "l");
      this.levantamentosListAsync.add(l);
    }
    clearLevantamentosAsyncList() {
      this.levantamentosListAsync.clear();
    }
    setEstradaDescricao(d) {
      if (d == null) dart.nullFailed(I[14], 450, 35, "d");
      this.estradaDescricao = d;
    }
    setEstradaConservacao(d) {
      if (d == null) dart.nullFailed(I[14], 455, 37, "d");
      this.estradaEstadoDeConservacao = d;
    }
    setEstradaPavimentacao(d) {
      if (d == null) dart.nullFailed(I[14], 460, 38, "d");
      this.estradaTipoDePavimentacao = d;
    }
    setEstradaLargura(d) {
      if (d == null) dart.nullFailed(I[14], 465, 33, "d");
      this.estradaLarguraAproximada = d;
    }
    setEstradaStart(b) {
      if (b == null) dart.nullFailed(I[14], 470, 29, "b");
      this.estradaStart = b;
    }
    setEstradaPointTimer(s) {
      if (s == null) dart.nullFailed(I[14], 475, 36, "s");
      this.estradaPointTimer = s;
    }
    setLastEstradaPoint(l) {
      if (l == null) dart.nullFailed(I[14], 480, 35, "l");
      this.lastEstradaPoint = l;
    }
    setButtonIniciarCapturaEstrada(T) {
      if (T == null) dart.nullFailed(I[14], 485, 46, "T");
      this.buttonIniciarCapturaEstradaText = T;
    }
    clearEstradaData() {
      this.estradaEstadoDeConservacao = "otimo";
      this.estradaTipoDePavimentacao = "asfalto";
      this.estradaLarguraAproximada = "";
      this.estradaDescricao = "";
    }
    addEstradaPointList(e) {
      if (e == null) dart.nullFailed(I[14], 499, 41, "e");
      this.estradaPointList.add(e);
    }
    clearEstradaPointList() {
      this.estradaPointList.clear();
    }
    addEstradaPointAsyncList(e) {
      if (e == null) dart.nullFailed(I[14], 510, 46, "e");
      this.estradaPointListAsync.add(e);
    }
    clearEstradaPointAsyncList() {
      this.estradaPointListAsync.clear();
    }
    setRotaEscolarDescricao(d) {
      if (d == null) dart.nullFailed(I[14], 522, 39, "d");
      this.rotaEscolarDescricao = d;
    }
    setRotaEscolarConservacao(d) {
      if (d == null) dart.nullFailed(I[14], 527, 41, "d");
      this.rotaEscolarEstadoDeConservacao = d;
    }
    setRotaEscolarPavimentacao(d) {
      if (d == null) dart.nullFailed(I[14], 532, 42, "d");
      this.rotaEscolarTipoDePavimentacao = d;
    }
    setRotaEscolarLargura(d) {
      if (d == null) dart.nullFailed(I[14], 537, 37, "d");
      this.rotaEscolarLarguraAproximada = d;
    }
    setRotaEscolarStart(b) {
      if (b == null) dart.nullFailed(I[14], 542, 33, "b");
      this.rotaEscolarStart = b;
    }
    setRotaEscolarPointTimer(s) {
      if (s == null) dart.nullFailed(I[14], 547, 40, "s");
      this.rotaEscolarPointTimer = s;
    }
    setLastRotaEscolarPoint(l) {
      if (l == null) dart.nullFailed(I[14], 552, 39, "l");
      this.lastRotaEscolarPoint = l;
    }
    setButtonIniciarCapturaRotaEscolar(T) {
      if (T == null) dart.nullFailed(I[14], 557, 50, "T");
      this.buttonIniciarCapturaRotaEscolarText = T;
    }
    clearRotaEscolarData() {
      this.rotaEscolarEstadoDeConservacao = "otimo";
      this.rotaEscolarTipoDePavimentacao = "asfalto";
      this.rotaEscolarLarguraAproximada = "";
      this.rotaEscolarDescricao = "";
    }
    addRotaEscolarPointList(r) {
      if (r == null) dart.nullFailed(I[14], 571, 49, "r");
      this.rotaEscolarPointList.add(r);
    }
    clearRotaEscolarPointList() {
      this.rotaEscolarPointList.clear();
    }
    addRotaEscolarPointAsyncList(r) {
      if (r == null) dart.nullFailed(I[14], 582, 54, "r");
      this.rotaEscolarPointListAsync.add(r);
    }
    clearRotaEscolarPointAsyncList() {
      this.rotaEscolarPointListAsync.clear();
    }
    setImovelStart(b) {
      if (b == null) dart.nullFailed(I[14], 594, 28, "b");
      this.imovelGeoPointStart = b;
    }
    setImovelDescricao(s) {
      if (s == null) dart.nullFailed(I[14], 599, 34, "s");
      this.imovelGeoPointDescricao = s;
    }
    setImovelTipo(s) {
      if (s == null) dart.nullFailed(I[14], 604, 29, "s");
      this.imovelGeoPointTipo = s;
    }
    setButtonIniciarCapturaImovel(T) {
      if (T == null) dart.nullFailed(I[14], 609, 45, "T");
      this.buttonIniciarCapturaImovelText = T;
    }
    clearImovelGeoPointsData() {
      this.imovelGeoPointTipo = "sede";
      this.imovelGeoPointDescricao = "";
    }
    addImovelGeoPointList(i) {
      if (i == null) dart.nullFailed(I[14], 620, 45, "i");
      this.imovelGeoPointList.add(i);
    }
    clearImovelGeoPointList() {
      this.imovelGeoPointList.clear();
    }
    addImovelGeoPointAsyncList(i) {
      if (i == null) dart.nullFailed(I[14], 631, 50, "i");
      this.imovelGeoPointListAsync.add(i);
    }
    clearImovelGeoPointAsyncList() {
      this.imovelGeoPointListAsync.clear();
    }
    setPonteStart(b) {
      if (b == null) dart.nullFailed(I[14], 643, 27, "b");
      this.ponteStart = b;
    }
    setButtonIniciarCapturaPonte(T) {
      if (T == null) dart.nullFailed(I[14], 648, 44, "T");
      this.buttonIniciarCapturaPonteText = T;
    }
    setPonteDescricao(s) {
      if (s == null) dart.nullFailed(I[14], 653, 33, "s");
      this.ponteDescricao = s;
    }
    setPonteEstadoConservacao(s) {
      if (s == null) dart.nullFailed(I[14], 658, 41, "s");
      this.ponteEstadoConservacao = s;
    }
    setPonteMaterial(s) {
      if (s == null) dart.nullFailed(I[14], 663, 32, "s");
      this.ponteMaterial = s;
    }
    setPonteExtensaoAproximada(s) {
      if (s == null) dart.nullFailed(I[14], 668, 42, "s");
      this.ponteExtensaoAproximada = s;
    }
    setPonteRioRiacho(s) {
      if (s == null) dart.nullFailed(I[14], 673, 33, "s");
      this.ponteRioRiacho = s;
    }
    addPonteList(p) {
      if (p == null) dart.nullFailed(I[14], 678, 32, "p");
      this.ponteList.add(p);
    }
    clearPonteList() {
      this.ponteList.clear();
    }
    addPonteAsyncList(p) {
      if (p == null) dart.nullFailed(I[14], 689, 37, "p");
      this.ponteListAsync.add(p);
    }
    clearPonteAsyncList() {
      this.ponteListAsync.clear();
    }
    addPonteImagesList(o) {
      if (o == null) dart.nullFailed(I[14], 699, 34, "o");
      this.ponteImages.add(o);
    }
    addPonteImageLastPosition() {
      this.ponteImages.add("add image");
    }
    removePonteBlankImages() {
      this.ponteImages.removeWhere(dart.fn(element => {
        if (element == null) dart.nullFailed(I[14], 710, 30, "element");
        return typeof element == 'string';
      }, T.ObjectTobool()));
    }
    clearPonteImages() {
      this.ponteImages.clear();
    }
    setSelectedPonteImage(p) {
      if (p == null) dart.nullFailed(I[14], 719, 41, "p");
      this.selectedPonteImage = p;
    }
    fullDataClear() {
      this.rotaEscolarPointList.clear();
      this.rotaEscolarPointListAsync.clear();
      this.estradaPointList.clear();
      this.estradaPointListAsync.clear();
      this.imovelGeoPointListAsync.clear();
      this.imovelGeoPointList.clear();
      this.clearButtons();
    }
    get isColected() {
      return this.colected;
    }
    get isCidadeValid() {
      if (this.m.idSistema !== 0 && this.m.idSistema != null) {
        return true;
      } else {
        return false;
      }
    }
    get tipoSelected() {
      return this.tipo_ponto;
    }
    get isIdentValid() {
      return this.identificacao.length >= 2 && this.identificacao.length <= 30;
    }
    get isColorFinished() {
      return this.colorStateValue === 2;
    }
    get isTipoVertice() {
      return this.tipo_ponto === 0;
    }
    resetValues() {
      this.colorStateValue = 0;
      this.verticeActualValue = 0;
      this.tipo_ponto = 0;
      this.identificacao = "";
    }
    get isAllSincronized() {
      return this.allSincronized;
    }
    get isMarkerVisible() {
      return this.markers_visible;
    }
    get isImovelUsing() {
      return this.imovel.isUsing();
    }
    get isMapLoading() {
      return this.mapLoading;
    }
    get isButtonsVisible() {
      return this.buttonsVisibility;
    }
    get isButtonIniciarNavegacaoVisible() {
      return this.buttonIniciarNavegacaoVisibility;
    }
    get isNavigationStarted() {
      return this.buttonIniciarNavegacaoText === "PARAR NAVEGAÇÃO";
    }
    get isNavigationStartedWithoutCompass() {
      return this.buttonIniciarNavegacaoText === "PARAR NAVEGAÇÃO 2";
    }
    get hasSelectedRoute() {
      return this.selectedImovelRoute.id != null;
    }
    get isRouteDone() {
      return this.routeDone;
    }
    get isLevantamentoFormValid() {
      return this.levantamentoDescricao.length > 1;
    }
    get isLevantamentoSincronizado() {
      return this.selectedLevantamento.sincronizado === 1;
    }
    get isEstradaFormValid() {
      return this.estradaDescricao.length > 1 && this.estradaLarguraAproximada.length > 0;
    }
    get isEstradaStarted() {
      return this.estradaStart;
    }
    get isEstradaCaptureStarted() {
      return this.buttonIniciarCapturaEstradaText === "PAUSAR CAPTURA DA ESTRADA";
    }
    get isRotaEscolarFormValid() {
      return this.rotaEscolarDescricao.length > 1 && this.rotaEscolarLarguraAproximada.length > 0;
    }
    get isRotaEscolarStarted() {
      return this.rotaEscolarStart;
    }
    get isRotaEscolarCaptureStarted() {
      return this.buttonIniciarCapturaRotaEscolarText === "PAUSAR CAPTURA DA ROTA ESCOLAR";
    }
    get isGeoPointFormValid() {
      return this.imovelGeoPointDescricao.length > 1;
    }
    get isImovelStarted() {
      return this.imovelGeoPointStart;
    }
    get isImovelCaptureStarted() {
      return this.buttonIniciarCapturaImovelText === "PAUSAR CAPTURA DO PONTO";
    }
    get isPonteFormValid() {
      return this.ponteDescricao.length > 1 && this.ponteExtensaoAproximada.length > 0 && this.ponteRioRiacho.length > 0;
    }
    get isPonteStarted() {
      return this.ponteStart;
    }
    get isPonteCaptureStarted() {
      return this.buttonIniciarCapturaPonteText === "PAUSAR CAPTURA DA PONTE";
    }
  };
  (login_data_store._LoginDataStore.new = function() {
    this[m] = new municipio.Municipio.new();
    this[u] = new user$.User.new();
    this[loggedIn] = false;
    this[municipioSelectorEnabled] = false;
    this[statusBarHeight] = 0.0;
    this[tipo_ponto] = 0;
    this[identificacao] = "";
    this[userPosition] = null;
    this[oldUserPosition] = null;
    this[colorStateValue] = 0;
    this[verticeActualValue] = 0;
    this[colected] = false;
    this[allSincronized] = true;
    this[markers_visible] = false;
    this[imovel] = new imovel$.Imovel.new(false);
    this[geoJsonFileName] = "";
    this[javaScriptFileName] = "";
    this[pathHtml] = "";
    this[mapLoading] = true;
    this[buttonsVisibility] = true;
    this[buttonIniciarNavegacaoVisibility] = false;
    this[buttonIniciarNavegacaoText] = "INICIAR NAVEGAÇÃO";
    this[navigationHeading] = 0.0;
    this[imovelRouteList] = new (T.ObservableListOfImovelRoute()).new();
    this[routeLatLngList] = new (T.ObservableListOfLatLng()).new();
    this[municipiosList] = new (T.ObservableListOfMunicipio()).new();
    this[levantamentosList] = new (T.ObservableListOfLevantamento()).new();
    this[levantamentosListAsync] = new (T.ObservableListOfLevantamento()).new();
    this[estradaPointList] = new (T.ObservableListOfEstradaPoint()).new();
    this[estradaPointListAsync] = new (T.ObservableListOfEstradaPoint()).new();
    this[rotaEscolarPointList] = new (T.ObservableListOfRotaEscolarPoint()).new();
    this[rotaEscolarPointListAsync] = new (T.ObservableListOfRotaEscolarPoint()).new();
    this[imovelGeoPointList] = new (T.ObservableListOfImovelGeoPoint()).new();
    this[imovelGeoPointListAsync] = new (T.ObservableListOfImovelGeoPoint()).new();
    this[ponteList] = new (T.ObservableListOfPontePoint()).new();
    this[ponteListAsync] = new (T.ObservableListOfPontePoint()).new();
    this[ponteImages] = new (T.ObservableListOfObject()).new();
    this[routePath] = new (T.PathOfLatLng()).new();
    this[selectedImovelRoute] = new ImovelRoute.ImovelRoute.new();
    this[selectedLevantamento] = new Levantamento.Levantamento.new();
    this[routeDone] = false;
    this[levantamentoDescricao] = "";
    this[estradaDescricao] = "";
    this[estradaEstadoDeConservacao] = "";
    this[estradaTipoDePavimentacao] = "";
    this[estradaLarguraAproximada] = "";
    this[estradaStart] = false;
    this[estradaPointTimer] = "0";
    this[lastEstradaPoint] = new location.LatLng.new(0.0, 0.0);
    this[buttonIniciarCapturaEstradaText] = "INICIAR CAPTURA DA ESTRADA";
    this[rotaEscolarDescricao] = "";
    this[rotaEscolarEstadoDeConservacao] = "";
    this[rotaEscolarTipoDePavimentacao] = "";
    this[rotaEscolarLarguraAproximada] = "";
    this[rotaEscolarStart] = false;
    this[rotaEscolarPointTimer] = "0";
    this[lastRotaEscolarPoint] = new location.LatLng.new(0.0, 0.0);
    this[buttonIniciarCapturaRotaEscolarText] = "INICIAR CAPTURA DA ROTA ESCOLAR";
    this[imovelGeoPointDescricao] = "";
    this[imovelGeoPointTipo] = "";
    this[imovelGeoPointStart] = false;
    this[buttonIniciarCapturaImovelText] = "INICIAR CAPTURA DO PONTO";
    this[ponteDescricao] = "";
    this[ponteEstadoConservacao] = "";
    this[ponteMaterial] = "";
    this[ponteExtensaoAproximada] = "";
    this[ponteRioRiacho] = "";
    this[ponteStart] = false;
    this[buttonIniciarCapturaPonteText] = "INICIAR CAPTURA DA PONTE";
    this[selectedPonteImage] = null;
    reaction.autorun(dart.fn(_ => {
      if (_ == null) dart.nullFailed(I[14], 28, 14, "_");
      core.print("OLD HEADING: " + dart.str(dart.nullCheck(this.oldUserPosition).heading));
      core.print("NEW HEADING: " + dart.str(dart.nullCheck(this.userPosition).heading));
    }, T.ReactionToNull()));
  }).prototype = login_data_store._LoginDataStore.prototype;
  dart.addTypeTests(login_data_store._LoginDataStore);
  dart.addTypeCaches(login_data_store._LoginDataStore);
  dart.setMethodSignature(login_data_store._LoginDataStore, () => ({
    __proto__: dart.getMethods(login_data_store._LoginDataStore.__proto__),
    setMunicipio: dart.fnType(dart.void, [municipio.Municipio]),
    setUser: dart.fnType(dart.void, [user$.User]),
    login: dart.fnType(dart.void, []),
    logout: dart.fnType(dart.void, []),
    setStatusBarHeight: dart.fnType(dart.void, [core.double]),
    setTipo: dart.fnType(dart.void, [core.int]),
    setIdent: dart.fnType(dart.void, [core.String]),
    setUserPosition: dart.fnType(dart.void, [position.Position]),
    setColorStateValue: dart.fnType(dart.void, [core.int]),
    setVerticeActualValue: dart.fnType(dart.void, [core.int]),
    setCollected: dart.fnType(dart.void, [core.bool]),
    setAllSincronized: dart.fnType(dart.void, [core.bool]),
    toggleMarkers: dart.fnType(dart.void, []),
    setMarkersVisibility: dart.fnType(dart.void, [core.bool]),
    setImovel: dart.fnType(dart.void, [imovel$.Imovel]),
    setGeoJsonFileName: dart.fnType(dart.void, [core.String]),
    setJavaScriptFileName: dart.fnType(dart.void, [core.String]),
    setPathHtml: dart.fnType(dart.void, [core.String]),
    setMapLoading: dart.fnType(dart.void, [core.bool]),
    setButtonsVisibility: dart.fnType(dart.void, [core.bool]),
    setButtonIniciarNavegacaoVisibility: dart.fnType(dart.void, [core.bool]),
    setButtonIniciarNavegacaoText: dart.fnType(dart.void, [core.String]),
    setNavigationHeading: dart.fnType(dart.void, [core.double]),
    addMunicipioList: dart.fnType(dart.void, [municipio.Municipio]),
    clearMunicipioList: dart.fnType(dart.void, []),
    setRoutPath: dart.fnType(dart.void, [latlong.Path$(latlong.LatLng)]),
    addImovelRoute: dart.fnType(dart.void, [ImovelRoute.ImovelRoute]),
    clearImovelRoute: dart.fnType(dart.void, []),
    addLatLngRoute: dart.fnType(dart.void, [latlong.LatLng]),
    clearLatLngRoute: dart.fnType(dart.void, []),
    setSelectedImovelRoute: dart.fnType(dart.void, [ImovelRoute.ImovelRoute]),
    setSelectedLevantamento: dart.fnType(dart.void, [Levantamento.Levantamento]),
    setRouteDone: dart.fnType(dart.void, [core.bool]),
    clearButtons: dart.fnType(dart.void, []),
    setLevantamentoDescricao: dart.fnType(dart.void, [core.String]),
    addLevantamentosList: dart.fnType(dart.void, [Levantamento.Levantamento]),
    clearLevantamentosList: dart.fnType(dart.void, []),
    addLevantamentosAsyncList: dart.fnType(dart.void, [Levantamento.Levantamento]),
    clearLevantamentosAsyncList: dart.fnType(dart.void, []),
    setEstradaDescricao: dart.fnType(dart.void, [core.String]),
    setEstradaConservacao: dart.fnType(dart.void, [core.String]),
    setEstradaPavimentacao: dart.fnType(dart.void, [core.String]),
    setEstradaLargura: dart.fnType(dart.void, [core.String]),
    setEstradaStart: dart.fnType(dart.void, [core.bool]),
    setEstradaPointTimer: dart.fnType(dart.void, [core.String]),
    setLastEstradaPoint: dart.fnType(dart.void, [location.LatLng]),
    setButtonIniciarCapturaEstrada: dart.fnType(dart.void, [core.String]),
    clearEstradaData: dart.fnType(dart.void, []),
    addEstradaPointList: dart.fnType(dart.void, [EstradaPoint.EstradaPoint]),
    clearEstradaPointList: dart.fnType(dart.void, []),
    addEstradaPointAsyncList: dart.fnType(dart.void, [EstradaPoint.EstradaPoint]),
    clearEstradaPointAsyncList: dart.fnType(dart.void, []),
    setRotaEscolarDescricao: dart.fnType(dart.void, [core.String]),
    setRotaEscolarConservacao: dart.fnType(dart.void, [core.String]),
    setRotaEscolarPavimentacao: dart.fnType(dart.void, [core.String]),
    setRotaEscolarLargura: dart.fnType(dart.void, [core.String]),
    setRotaEscolarStart: dart.fnType(dart.void, [core.bool]),
    setRotaEscolarPointTimer: dart.fnType(dart.void, [core.String]),
    setLastRotaEscolarPoint: dart.fnType(dart.void, [location.LatLng]),
    setButtonIniciarCapturaRotaEscolar: dart.fnType(dart.void, [core.String]),
    clearRotaEscolarData: dart.fnType(dart.void, []),
    addRotaEscolarPointList: dart.fnType(dart.void, [RotaEscolarPoint.RotaEscolarPoint]),
    clearRotaEscolarPointList: dart.fnType(dart.void, []),
    addRotaEscolarPointAsyncList: dart.fnType(dart.void, [RotaEscolarPoint.RotaEscolarPoint]),
    clearRotaEscolarPointAsyncList: dart.fnType(dart.void, []),
    setImovelStart: dart.fnType(dart.void, [core.bool]),
    setImovelDescricao: dart.fnType(dart.void, [core.String]),
    setImovelTipo: dart.fnType(dart.void, [core.String]),
    setButtonIniciarCapturaImovel: dart.fnType(dart.void, [core.String]),
    clearImovelGeoPointsData: dart.fnType(dart.void, []),
    addImovelGeoPointList: dart.fnType(dart.void, [ImovelGeoPoint.ImovelGeoPoint]),
    clearImovelGeoPointList: dart.fnType(dart.void, []),
    addImovelGeoPointAsyncList: dart.fnType(dart.void, [ImovelGeoPoint.ImovelGeoPoint]),
    clearImovelGeoPointAsyncList: dart.fnType(dart.void, []),
    setPonteStart: dart.fnType(dart.void, [core.bool]),
    setButtonIniciarCapturaPonte: dart.fnType(dart.void, [core.String]),
    setPonteDescricao: dart.fnType(dart.void, [core.String]),
    setPonteEstadoConservacao: dart.fnType(dart.void, [core.String]),
    setPonteMaterial: dart.fnType(dart.void, [core.String]),
    setPonteExtensaoAproximada: dart.fnType(dart.void, [core.String]),
    setPonteRioRiacho: dart.fnType(dart.void, [core.String]),
    addPonteList: dart.fnType(dart.void, [PontePoint.PontePoint]),
    clearPonteList: dart.fnType(dart.void, []),
    addPonteAsyncList: dart.fnType(dart.void, [PontePoint.PontePoint]),
    clearPonteAsyncList: dart.fnType(dart.void, []),
    addPonteImagesList: dart.fnType(dart.void, [core.Object]),
    addPonteImageLastPosition: dart.fnType(dart.void, []),
    removePonteBlankImages: dart.fnType(dart.void, []),
    clearPonteImages: dart.fnType(dart.void, []),
    setSelectedPonteImage: dart.fnType(dart.void, [PontePoint.PonteImage]),
    fullDataClear: dart.fnType(dart.void, []),
    resetValues: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(login_data_store._LoginDataStore, () => ({
    __proto__: dart.getGetters(login_data_store._LoginDataStore.__proto__),
    isColected: core.bool,
    isCidadeValid: core.bool,
    tipoSelected: core.int,
    isIdentValid: core.bool,
    isColorFinished: core.bool,
    isTipoVertice: core.bool,
    isAllSincronized: core.bool,
    isMarkerVisible: core.bool,
    isImovelUsing: core.bool,
    isMapLoading: core.bool,
    isButtonsVisible: core.bool,
    isButtonIniciarNavegacaoVisible: core.bool,
    isNavigationStarted: core.bool,
    isNavigationStartedWithoutCompass: core.bool,
    hasSelectedRoute: core.bool,
    isRouteDone: core.bool,
    isLevantamentoFormValid: core.bool,
    isLevantamentoSincronizado: core.bool,
    isEstradaFormValid: core.bool,
    isEstradaStarted: core.bool,
    isEstradaCaptureStarted: core.bool,
    isRotaEscolarFormValid: core.bool,
    isRotaEscolarStarted: core.bool,
    isRotaEscolarCaptureStarted: core.bool,
    isGeoPointFormValid: core.bool,
    isImovelStarted: core.bool,
    isImovelCaptureStarted: core.bool,
    isPonteFormValid: core.bool,
    isPonteStarted: core.bool,
    isPonteCaptureStarted: core.bool
  }));
  dart.setLibraryUri(login_data_store._LoginDataStore, I[15]);
  dart.setFieldSignature(login_data_store._LoginDataStore, () => ({
    __proto__: dart.getFields(login_data_store._LoginDataStore.__proto__),
    m: dart.fieldType(municipio.Municipio),
    u: dart.fieldType(user$.User),
    loggedIn: dart.fieldType(core.bool),
    municipioSelectorEnabled: dart.fieldType(core.bool),
    statusBarHeight: dart.fieldType(core.double),
    tipo_ponto: dart.fieldType(core.int),
    identificacao: dart.fieldType(core.String),
    userPosition: dart.fieldType(dart.nullable(position.Position)),
    oldUserPosition: dart.fieldType(dart.nullable(position.Position)),
    colorStateValue: dart.fieldType(core.int),
    verticeActualValue: dart.fieldType(core.int),
    colected: dart.fieldType(core.bool),
    allSincronized: dart.fieldType(core.bool),
    markers_visible: dart.fieldType(core.bool),
    imovel: dart.fieldType(imovel$.Imovel),
    geoJsonFileName: dart.fieldType(core.String),
    javaScriptFileName: dart.fieldType(core.String),
    pathHtml: dart.fieldType(core.String),
    mapLoading: dart.fieldType(core.bool),
    buttonsVisibility: dart.fieldType(core.bool),
    buttonIniciarNavegacaoVisibility: dart.fieldType(core.bool),
    buttonIniciarNavegacaoText: dart.fieldType(core.String),
    navigationHeading: dart.fieldType(core.double),
    imovelRouteList: dart.fieldType(observable_collections.ObservableList$(ImovelRoute.ImovelRoute)),
    routeLatLngList: dart.fieldType(observable_collections.ObservableList$(latlong.LatLng)),
    municipiosList: dart.fieldType(observable_collections.ObservableList$(municipio.Municipio)),
    levantamentosList: dart.fieldType(observable_collections.ObservableList$(Levantamento.Levantamento)),
    levantamentosListAsync: dart.fieldType(observable_collections.ObservableList$(Levantamento.Levantamento)),
    estradaPointList: dart.fieldType(observable_collections.ObservableList$(EstradaPoint.EstradaPoint)),
    estradaPointListAsync: dart.fieldType(observable_collections.ObservableList$(EstradaPoint.EstradaPoint)),
    rotaEscolarPointList: dart.fieldType(observable_collections.ObservableList$(RotaEscolarPoint.RotaEscolarPoint)),
    rotaEscolarPointListAsync: dart.fieldType(observable_collections.ObservableList$(RotaEscolarPoint.RotaEscolarPoint)),
    imovelGeoPointList: dart.fieldType(observable_collections.ObservableList$(ImovelGeoPoint.ImovelGeoPoint)),
    imovelGeoPointListAsync: dart.fieldType(observable_collections.ObservableList$(ImovelGeoPoint.ImovelGeoPoint)),
    ponteList: dart.fieldType(observable_collections.ObservableList$(PontePoint.PontePoint)),
    ponteListAsync: dart.fieldType(observable_collections.ObservableList$(PontePoint.PontePoint)),
    ponteImages: dart.fieldType(observable_collections.ObservableList$(core.Object)),
    routePath: dart.fieldType(latlong.Path$(latlong.LatLng)),
    selectedImovelRoute: dart.fieldType(ImovelRoute.ImovelRoute),
    selectedLevantamento: dart.fieldType(Levantamento.Levantamento),
    routeDone: dart.fieldType(core.bool),
    levantamentoDescricao: dart.fieldType(core.String),
    estradaDescricao: dart.fieldType(core.String),
    estradaEstadoDeConservacao: dart.fieldType(core.String),
    estradaTipoDePavimentacao: dart.fieldType(core.String),
    estradaLarguraAproximada: dart.fieldType(core.String),
    estradaStart: dart.fieldType(core.bool),
    estradaPointTimer: dart.fieldType(core.String),
    lastEstradaPoint: dart.fieldType(location.LatLng),
    buttonIniciarCapturaEstradaText: dart.fieldType(core.String),
    rotaEscolarDescricao: dart.fieldType(core.String),
    rotaEscolarEstadoDeConservacao: dart.fieldType(core.String),
    rotaEscolarTipoDePavimentacao: dart.fieldType(core.String),
    rotaEscolarLarguraAproximada: dart.fieldType(core.String),
    rotaEscolarStart: dart.fieldType(core.bool),
    rotaEscolarPointTimer: dart.fieldType(core.String),
    lastRotaEscolarPoint: dart.fieldType(location.LatLng),
    buttonIniciarCapturaRotaEscolarText: dart.fieldType(core.String),
    imovelGeoPointDescricao: dart.fieldType(core.String),
    imovelGeoPointTipo: dart.fieldType(core.String),
    imovelGeoPointStart: dart.fieldType(core.bool),
    buttonIniciarCapturaImovelText: dart.fieldType(core.String),
    ponteDescricao: dart.fieldType(core.String),
    ponteEstadoConservacao: dart.fieldType(core.String),
    ponteMaterial: dart.fieldType(core.String),
    ponteExtensaoAproximada: dart.fieldType(core.String),
    ponteRioRiacho: dart.fieldType(core.String),
    ponteStart: dart.fieldType(core.bool),
    buttonIniciarCapturaPonteText: dart.fieldType(core.String),
    selectedPonteImage: dart.fieldType(dart.nullable(PontePoint.PonteImage))
  }));
  var _$36isColectedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isColectedComputed");
  var _$36isCidadeValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isCidadeValidComputed");
  var _$36tipoSelectedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$tipoSelectedComputed");
  var _$36isIdentValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isIdentValidComputed");
  var _$36isColorFinishedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isColorFinishedComputed");
  var _$36isTipoVerticeComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isTipoVerticeComputed");
  var _$36isAllSincronizedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isAllSincronizedComputed");
  var _$36isMarkerVisibleComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isMarkerVisibleComputed");
  var _$36isImovelUsingComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isImovelUsingComputed");
  var _$36isMapLoadingComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isMapLoadingComputed");
  var _$36isButtonsVisibleComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isButtonsVisibleComputed");
  var _$36isButtonIniciarNavegacaoVisibleComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isButtonIniciarNavegacaoVisibleComputed");
  var _$36isNavigationStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isNavigationStartedComputed");
  var _$36isNavigationStartedWithoutCompassComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isNavigationStartedWithoutCompassComputed");
  var _$36hasSelectedRouteComputed = dart.privateName(login_data_store, "_$LoginDataStore._$hasSelectedRouteComputed");
  var _$36isRouteDoneComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isRouteDoneComputed");
  var _$36isLevantamentoFormValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isLevantamentoFormValidComputed");
  var _$36isLevantamentoSincronizadoComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isLevantamentoSincronizadoComputed");
  var _$36isEstradaFormValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isEstradaFormValidComputed");
  var _$36isEstradaStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isEstradaStartedComputed");
  var _$36isEstradaCaptureStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isEstradaCaptureStartedComputed");
  var _$36isRotaEscolarFormValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isRotaEscolarFormValidComputed");
  var _$36isRotaEscolarStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isRotaEscolarStartedComputed");
  var _$36isRotaEscolarCaptureStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isRotaEscolarCaptureStartedComputed");
  var _$36isGeoPointFormValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isGeoPointFormValidComputed");
  var _$36isImovelStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isImovelStartedComputed");
  var _$36isImovelCaptureStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isImovelCaptureStartedComputed");
  var _$36isPonteFormValidComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isPonteFormValidComputed");
  var _$36isPonteStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isPonteStartedComputed");
  var _$36isPonteCaptureStartedComputed = dart.privateName(login_data_store, "_$LoginDataStore._$isPonteCaptureStartedComputed");
  var _$36mAtom = dart.privateName(login_data_store, "_$LoginDataStore._$mAtom");
  var _$36uAtom = dart.privateName(login_data_store, "_$LoginDataStore._$uAtom");
  var _$36loggedInAtom = dart.privateName(login_data_store, "_$LoginDataStore._$loggedInAtom");
  var _$36municipioSelectorEnabledAtom = dart.privateName(login_data_store, "_$LoginDataStore._$municipioSelectorEnabledAtom");
  var _$36statusBarHeightAtom = dart.privateName(login_data_store, "_$LoginDataStore._$statusBarHeightAtom");
  var _$36tipo_pontoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$tipo_pontoAtom");
  var _$36identificacaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$identificacaoAtom");
  var _$36userPositionAtom = dart.privateName(login_data_store, "_$LoginDataStore._$userPositionAtom");
  var _$36oldUserPositionAtom = dart.privateName(login_data_store, "_$LoginDataStore._$oldUserPositionAtom");
  var _$36colorStateValueAtom = dart.privateName(login_data_store, "_$LoginDataStore._$colorStateValueAtom");
  var _$36verticeActualValueAtom = dart.privateName(login_data_store, "_$LoginDataStore._$verticeActualValueAtom");
  var _$36colectedAtom = dart.privateName(login_data_store, "_$LoginDataStore._$colectedAtom");
  var _$36allSincronizedAtom = dart.privateName(login_data_store, "_$LoginDataStore._$allSincronizedAtom");
  var _$36markers_visibleAtom = dart.privateName(login_data_store, "_$LoginDataStore._$markers_visibleAtom");
  var _$36imovelAtom = dart.privateName(login_data_store, "_$LoginDataStore._$imovelAtom");
  var _$36geoJsonFileNameAtom = dart.privateName(login_data_store, "_$LoginDataStore._$geoJsonFileNameAtom");
  var _$36javaScriptFileNameAtom = dart.privateName(login_data_store, "_$LoginDataStore._$javaScriptFileNameAtom");
  var _$36pathHtmlAtom = dart.privateName(login_data_store, "_$LoginDataStore._$pathHtmlAtom");
  var _$36mapLoadingAtom = dart.privateName(login_data_store, "_$LoginDataStore._$mapLoadingAtom");
  var _$36buttonsVisibilityAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonsVisibilityAtom");
  var _$36buttonIniciarNavegacaoVisibilityAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonIniciarNavegacaoVisibilityAtom");
  var _$36buttonIniciarNavegacaoTextAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonIniciarNavegacaoTextAtom");
  var _$36navigationHeadingAtom = dart.privateName(login_data_store, "_$LoginDataStore._$navigationHeadingAtom");
  var _$36routePathAtom = dart.privateName(login_data_store, "_$LoginDataStore._$routePathAtom");
  var _$36selectedImovelRouteAtom = dart.privateName(login_data_store, "_$LoginDataStore._$selectedImovelRouteAtom");
  var _$36selectedLevantamentoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$selectedLevantamentoAtom");
  var _$36routeDoneAtom = dart.privateName(login_data_store, "_$LoginDataStore._$routeDoneAtom");
  var _$36levantamentoDescricaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$levantamentoDescricaoAtom");
  var _$36estradaDescricaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$estradaDescricaoAtom");
  var _$36estradaEstadoDeConservacaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$estradaEstadoDeConservacaoAtom");
  var _$36estradaTipoDePavimentacaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$estradaTipoDePavimentacaoAtom");
  var _$36estradaLarguraAproximadaAtom = dart.privateName(login_data_store, "_$LoginDataStore._$estradaLarguraAproximadaAtom");
  var _$36estradaStartAtom = dart.privateName(login_data_store, "_$LoginDataStore._$estradaStartAtom");
  var _$36estradaPointTimerAtom = dart.privateName(login_data_store, "_$LoginDataStore._$estradaPointTimerAtom");
  var _$36lastEstradaPointAtom = dart.privateName(login_data_store, "_$LoginDataStore._$lastEstradaPointAtom");
  var _$36buttonIniciarCapturaEstradaTextAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonIniciarCapturaEstradaTextAtom");
  var _$36rotaEscolarDescricaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$rotaEscolarDescricaoAtom");
  var _$36rotaEscolarEstadoDeConservacaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$rotaEscolarEstadoDeConservacaoAtom");
  var _$36rotaEscolarTipoDePavimentacaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$rotaEscolarTipoDePavimentacaoAtom");
  var _$36rotaEscolarLarguraAproximadaAtom = dart.privateName(login_data_store, "_$LoginDataStore._$rotaEscolarLarguraAproximadaAtom");
  var _$36rotaEscolarStartAtom = dart.privateName(login_data_store, "_$LoginDataStore._$rotaEscolarStartAtom");
  var _$36rotaEscolarPointTimerAtom = dart.privateName(login_data_store, "_$LoginDataStore._$rotaEscolarPointTimerAtom");
  var _$36lastRotaEscolarPointAtom = dart.privateName(login_data_store, "_$LoginDataStore._$lastRotaEscolarPointAtom");
  var _$36buttonIniciarCapturaRotaEscolarTextAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonIniciarCapturaRotaEscolarTextAtom");
  var _$36imovelGeoPointDescricaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$imovelGeoPointDescricaoAtom");
  var _$36imovelGeoPointTipoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$imovelGeoPointTipoAtom");
  var _$36imovelGeoPointStartAtom = dart.privateName(login_data_store, "_$LoginDataStore._$imovelGeoPointStartAtom");
  var _$36buttonIniciarCapturaImovelTextAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonIniciarCapturaImovelTextAtom");
  var _$36ponteDescricaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$ponteDescricaoAtom");
  var _$36ponteEstadoConservacaoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$ponteEstadoConservacaoAtom");
  var _$36ponteMaterialAtom = dart.privateName(login_data_store, "_$LoginDataStore._$ponteMaterialAtom");
  var _$36ponteExtensaoAproximadaAtom = dart.privateName(login_data_store, "_$LoginDataStore._$ponteExtensaoAproximadaAtom");
  var _$36ponteRioRiachoAtom = dart.privateName(login_data_store, "_$LoginDataStore._$ponteRioRiachoAtom");
  var _$36ponteStartAtom = dart.privateName(login_data_store, "_$LoginDataStore._$ponteStartAtom");
  var _$36buttonIniciarCapturaPonteTextAtom = dart.privateName(login_data_store, "_$LoginDataStore._$buttonIniciarCapturaPonteTextAtom");
  var _$36selectedPonteImageAtom = dart.privateName(login_data_store, "_$LoginDataStore._$selectedPonteImageAtom");
  var _$36_LoginDataStoreActionController = dart.privateName(login_data_store, "_$LoginDataStore._$_LoginDataStoreActionController");
  login_data_store._$LoginDataStore = class _$36LoginDataStore extends core.Object {};
  login_data_store._$LoginDataStore[dart.mixinOn] = __$36LoginDataStore$36_LoginDataStore$36Store => {
    class _$36LoginDataStore extends __$36LoginDataStore$36_LoginDataStore$36Store {
      get [_$isColectedComputed]() {
        return this[_$36isColectedComputed];
      }
      set [_$isColectedComputed](value) {
        this[_$36isColectedComputed] = value;
      }
      get [_$isCidadeValidComputed]() {
        return this[_$36isCidadeValidComputed];
      }
      set [_$isCidadeValidComputed](value) {
        this[_$36isCidadeValidComputed] = value;
      }
      get [_$tipoSelectedComputed]() {
        return this[_$36tipoSelectedComputed];
      }
      set [_$tipoSelectedComputed](value) {
        this[_$36tipoSelectedComputed] = value;
      }
      get [_$isIdentValidComputed]() {
        return this[_$36isIdentValidComputed];
      }
      set [_$isIdentValidComputed](value) {
        this[_$36isIdentValidComputed] = value;
      }
      get [_$isColorFinishedComputed]() {
        return this[_$36isColorFinishedComputed];
      }
      set [_$isColorFinishedComputed](value) {
        this[_$36isColorFinishedComputed] = value;
      }
      get [_$isTipoVerticeComputed]() {
        return this[_$36isTipoVerticeComputed];
      }
      set [_$isTipoVerticeComputed](value) {
        this[_$36isTipoVerticeComputed] = value;
      }
      get [_$isAllSincronizedComputed]() {
        return this[_$36isAllSincronizedComputed];
      }
      set [_$isAllSincronizedComputed](value) {
        this[_$36isAllSincronizedComputed] = value;
      }
      get [_$isMarkerVisibleComputed]() {
        return this[_$36isMarkerVisibleComputed];
      }
      set [_$isMarkerVisibleComputed](value) {
        this[_$36isMarkerVisibleComputed] = value;
      }
      get [_$isImovelUsingComputed]() {
        return this[_$36isImovelUsingComputed];
      }
      set [_$isImovelUsingComputed](value) {
        this[_$36isImovelUsingComputed] = value;
      }
      get [_$isMapLoadingComputed]() {
        return this[_$36isMapLoadingComputed];
      }
      set [_$isMapLoadingComputed](value) {
        this[_$36isMapLoadingComputed] = value;
      }
      get [_$isButtonsVisibleComputed]() {
        return this[_$36isButtonsVisibleComputed];
      }
      set [_$isButtonsVisibleComputed](value) {
        this[_$36isButtonsVisibleComputed] = value;
      }
      get [_$isButtonIniciarNavegacaoVisibleComputed]() {
        return this[_$36isButtonIniciarNavegacaoVisibleComputed];
      }
      set [_$isButtonIniciarNavegacaoVisibleComputed](value) {
        this[_$36isButtonIniciarNavegacaoVisibleComputed] = value;
      }
      get [_$isNavigationStartedComputed]() {
        return this[_$36isNavigationStartedComputed];
      }
      set [_$isNavigationStartedComputed](value) {
        this[_$36isNavigationStartedComputed] = value;
      }
      get [_$isNavigationStartedWithoutCompassComputed]() {
        return this[_$36isNavigationStartedWithoutCompassComputed];
      }
      set [_$isNavigationStartedWithoutCompassComputed](value) {
        this[_$36isNavigationStartedWithoutCompassComputed] = value;
      }
      get [_$hasSelectedRouteComputed]() {
        return this[_$36hasSelectedRouteComputed];
      }
      set [_$hasSelectedRouteComputed](value) {
        this[_$36hasSelectedRouteComputed] = value;
      }
      get [_$isRouteDoneComputed]() {
        return this[_$36isRouteDoneComputed];
      }
      set [_$isRouteDoneComputed](value) {
        this[_$36isRouteDoneComputed] = value;
      }
      get [_$isLevantamentoFormValidComputed]() {
        return this[_$36isLevantamentoFormValidComputed];
      }
      set [_$isLevantamentoFormValidComputed](value) {
        this[_$36isLevantamentoFormValidComputed] = value;
      }
      get [_$isLevantamentoSincronizadoComputed]() {
        return this[_$36isLevantamentoSincronizadoComputed];
      }
      set [_$isLevantamentoSincronizadoComputed](value) {
        this[_$36isLevantamentoSincronizadoComputed] = value;
      }
      get [_$isEstradaFormValidComputed]() {
        return this[_$36isEstradaFormValidComputed];
      }
      set [_$isEstradaFormValidComputed](value) {
        this[_$36isEstradaFormValidComputed] = value;
      }
      get [_$isEstradaStartedComputed]() {
        return this[_$36isEstradaStartedComputed];
      }
      set [_$isEstradaStartedComputed](value) {
        this[_$36isEstradaStartedComputed] = value;
      }
      get [_$isEstradaCaptureStartedComputed]() {
        return this[_$36isEstradaCaptureStartedComputed];
      }
      set [_$isEstradaCaptureStartedComputed](value) {
        this[_$36isEstradaCaptureStartedComputed] = value;
      }
      get [_$isRotaEscolarFormValidComputed]() {
        return this[_$36isRotaEscolarFormValidComputed];
      }
      set [_$isRotaEscolarFormValidComputed](value) {
        this[_$36isRotaEscolarFormValidComputed] = value;
      }
      get [_$isRotaEscolarStartedComputed]() {
        return this[_$36isRotaEscolarStartedComputed];
      }
      set [_$isRotaEscolarStartedComputed](value) {
        this[_$36isRotaEscolarStartedComputed] = value;
      }
      get [_$isRotaEscolarCaptureStartedComputed]() {
        return this[_$36isRotaEscolarCaptureStartedComputed];
      }
      set [_$isRotaEscolarCaptureStartedComputed](value) {
        this[_$36isRotaEscolarCaptureStartedComputed] = value;
      }
      get [_$isGeoPointFormValidComputed]() {
        return this[_$36isGeoPointFormValidComputed];
      }
      set [_$isGeoPointFormValidComputed](value) {
        this[_$36isGeoPointFormValidComputed] = value;
      }
      get [_$isImovelStartedComputed]() {
        return this[_$36isImovelStartedComputed];
      }
      set [_$isImovelStartedComputed](value) {
        this[_$36isImovelStartedComputed] = value;
      }
      get [_$isImovelCaptureStartedComputed]() {
        return this[_$36isImovelCaptureStartedComputed];
      }
      set [_$isImovelCaptureStartedComputed](value) {
        this[_$36isImovelCaptureStartedComputed] = value;
      }
      get [_$isPonteFormValidComputed]() {
        return this[_$36isPonteFormValidComputed];
      }
      set [_$isPonteFormValidComputed](value) {
        this[_$36isPonteFormValidComputed] = value;
      }
      get [_$isPonteStartedComputed]() {
        return this[_$36isPonteStartedComputed];
      }
      set [_$isPonteStartedComputed](value) {
        this[_$36isPonteStartedComputed] = value;
      }
      get [_$isPonteCaptureStartedComputed]() {
        return this[_$36isPonteCaptureStartedComputed];
      }
      set [_$isPonteCaptureStartedComputed](value) {
        this[_$36isPonteCaptureStartedComputed] = value;
      }
      get [_$mAtom]() {
        return this[_$36mAtom];
      }
      set [_$mAtom](value) {
        super[_$mAtom] = value;
      }
      get [_$uAtom]() {
        return this[_$36uAtom];
      }
      set [_$uAtom](value) {
        super[_$uAtom] = value;
      }
      get [_$loggedInAtom]() {
        return this[_$36loggedInAtom];
      }
      set [_$loggedInAtom](value) {
        super[_$loggedInAtom] = value;
      }
      get [_$municipioSelectorEnabledAtom]() {
        return this[_$36municipioSelectorEnabledAtom];
      }
      set [_$municipioSelectorEnabledAtom](value) {
        super[_$municipioSelectorEnabledAtom] = value;
      }
      get [_$statusBarHeightAtom]() {
        return this[_$36statusBarHeightAtom];
      }
      set [_$statusBarHeightAtom](value) {
        super[_$statusBarHeightAtom] = value;
      }
      get [_$tipo_pontoAtom]() {
        return this[_$36tipo_pontoAtom];
      }
      set [_$tipo_pontoAtom](value) {
        super[_$tipo_pontoAtom] = value;
      }
      get [_$identificacaoAtom]() {
        return this[_$36identificacaoAtom];
      }
      set [_$identificacaoAtom](value) {
        super[_$identificacaoAtom] = value;
      }
      get [_$userPositionAtom]() {
        return this[_$36userPositionAtom];
      }
      set [_$userPositionAtom](value) {
        super[_$userPositionAtom] = value;
      }
      get [_$oldUserPositionAtom]() {
        return this[_$36oldUserPositionAtom];
      }
      set [_$oldUserPositionAtom](value) {
        super[_$oldUserPositionAtom] = value;
      }
      get [_$colorStateValueAtom]() {
        return this[_$36colorStateValueAtom];
      }
      set [_$colorStateValueAtom](value) {
        super[_$colorStateValueAtom] = value;
      }
      get [_$verticeActualValueAtom]() {
        return this[_$36verticeActualValueAtom];
      }
      set [_$verticeActualValueAtom](value) {
        super[_$verticeActualValueAtom] = value;
      }
      get [_$colectedAtom]() {
        return this[_$36colectedAtom];
      }
      set [_$colectedAtom](value) {
        super[_$colectedAtom] = value;
      }
      get [_$allSincronizedAtom]() {
        return this[_$36allSincronizedAtom];
      }
      set [_$allSincronizedAtom](value) {
        super[_$allSincronizedAtom] = value;
      }
      get [_$markers_visibleAtom]() {
        return this[_$36markers_visibleAtom];
      }
      set [_$markers_visibleAtom](value) {
        super[_$markers_visibleAtom] = value;
      }
      get [_$imovelAtom]() {
        return this[_$36imovelAtom];
      }
      set [_$imovelAtom](value) {
        super[_$imovelAtom] = value;
      }
      get [_$geoJsonFileNameAtom]() {
        return this[_$36geoJsonFileNameAtom];
      }
      set [_$geoJsonFileNameAtom](value) {
        super[_$geoJsonFileNameAtom] = value;
      }
      get [_$javaScriptFileNameAtom]() {
        return this[_$36javaScriptFileNameAtom];
      }
      set [_$javaScriptFileNameAtom](value) {
        super[_$javaScriptFileNameAtom] = value;
      }
      get [_$pathHtmlAtom]() {
        return this[_$36pathHtmlAtom];
      }
      set [_$pathHtmlAtom](value) {
        super[_$pathHtmlAtom] = value;
      }
      get [_$mapLoadingAtom]() {
        return this[_$36mapLoadingAtom];
      }
      set [_$mapLoadingAtom](value) {
        super[_$mapLoadingAtom] = value;
      }
      get [_$buttonsVisibilityAtom]() {
        return this[_$36buttonsVisibilityAtom];
      }
      set [_$buttonsVisibilityAtom](value) {
        super[_$buttonsVisibilityAtom] = value;
      }
      get [_$buttonIniciarNavegacaoVisibilityAtom]() {
        return this[_$36buttonIniciarNavegacaoVisibilityAtom];
      }
      set [_$buttonIniciarNavegacaoVisibilityAtom](value) {
        super[_$buttonIniciarNavegacaoVisibilityAtom] = value;
      }
      get [_$buttonIniciarNavegacaoTextAtom]() {
        return this[_$36buttonIniciarNavegacaoTextAtom];
      }
      set [_$buttonIniciarNavegacaoTextAtom](value) {
        super[_$buttonIniciarNavegacaoTextAtom] = value;
      }
      get [_$navigationHeadingAtom]() {
        return this[_$36navigationHeadingAtom];
      }
      set [_$navigationHeadingAtom](value) {
        super[_$navigationHeadingAtom] = value;
      }
      get [_$routePathAtom]() {
        return this[_$36routePathAtom];
      }
      set [_$routePathAtom](value) {
        super[_$routePathAtom] = value;
      }
      get [_$selectedImovelRouteAtom]() {
        return this[_$36selectedImovelRouteAtom];
      }
      set [_$selectedImovelRouteAtom](value) {
        super[_$selectedImovelRouteAtom] = value;
      }
      get [_$selectedLevantamentoAtom]() {
        return this[_$36selectedLevantamentoAtom];
      }
      set [_$selectedLevantamentoAtom](value) {
        super[_$selectedLevantamentoAtom] = value;
      }
      get [_$routeDoneAtom]() {
        return this[_$36routeDoneAtom];
      }
      set [_$routeDoneAtom](value) {
        super[_$routeDoneAtom] = value;
      }
      get [_$levantamentoDescricaoAtom]() {
        return this[_$36levantamentoDescricaoAtom];
      }
      set [_$levantamentoDescricaoAtom](value) {
        super[_$levantamentoDescricaoAtom] = value;
      }
      get [_$estradaDescricaoAtom]() {
        return this[_$36estradaDescricaoAtom];
      }
      set [_$estradaDescricaoAtom](value) {
        super[_$estradaDescricaoAtom] = value;
      }
      get [_$estradaEstadoDeConservacaoAtom]() {
        return this[_$36estradaEstadoDeConservacaoAtom];
      }
      set [_$estradaEstadoDeConservacaoAtom](value) {
        super[_$estradaEstadoDeConservacaoAtom] = value;
      }
      get [_$estradaTipoDePavimentacaoAtom]() {
        return this[_$36estradaTipoDePavimentacaoAtom];
      }
      set [_$estradaTipoDePavimentacaoAtom](value) {
        super[_$estradaTipoDePavimentacaoAtom] = value;
      }
      get [_$estradaLarguraAproximadaAtom]() {
        return this[_$36estradaLarguraAproximadaAtom];
      }
      set [_$estradaLarguraAproximadaAtom](value) {
        super[_$estradaLarguraAproximadaAtom] = value;
      }
      get [_$estradaStartAtom]() {
        return this[_$36estradaStartAtom];
      }
      set [_$estradaStartAtom](value) {
        super[_$estradaStartAtom] = value;
      }
      get [_$estradaPointTimerAtom]() {
        return this[_$36estradaPointTimerAtom];
      }
      set [_$estradaPointTimerAtom](value) {
        super[_$estradaPointTimerAtom] = value;
      }
      get [_$lastEstradaPointAtom]() {
        return this[_$36lastEstradaPointAtom];
      }
      set [_$lastEstradaPointAtom](value) {
        super[_$lastEstradaPointAtom] = value;
      }
      get [_$buttonIniciarCapturaEstradaTextAtom]() {
        return this[_$36buttonIniciarCapturaEstradaTextAtom];
      }
      set [_$buttonIniciarCapturaEstradaTextAtom](value) {
        super[_$buttonIniciarCapturaEstradaTextAtom] = value;
      }
      get [_$rotaEscolarDescricaoAtom]() {
        return this[_$36rotaEscolarDescricaoAtom];
      }
      set [_$rotaEscolarDescricaoAtom](value) {
        super[_$rotaEscolarDescricaoAtom] = value;
      }
      get [_$rotaEscolarEstadoDeConservacaoAtom]() {
        return this[_$36rotaEscolarEstadoDeConservacaoAtom];
      }
      set [_$rotaEscolarEstadoDeConservacaoAtom](value) {
        super[_$rotaEscolarEstadoDeConservacaoAtom] = value;
      }
      get [_$rotaEscolarTipoDePavimentacaoAtom]() {
        return this[_$36rotaEscolarTipoDePavimentacaoAtom];
      }
      set [_$rotaEscolarTipoDePavimentacaoAtom](value) {
        super[_$rotaEscolarTipoDePavimentacaoAtom] = value;
      }
      get [_$rotaEscolarLarguraAproximadaAtom]() {
        return this[_$36rotaEscolarLarguraAproximadaAtom];
      }
      set [_$rotaEscolarLarguraAproximadaAtom](value) {
        super[_$rotaEscolarLarguraAproximadaAtom] = value;
      }
      get [_$rotaEscolarStartAtom]() {
        return this[_$36rotaEscolarStartAtom];
      }
      set [_$rotaEscolarStartAtom](value) {
        super[_$rotaEscolarStartAtom] = value;
      }
      get [_$rotaEscolarPointTimerAtom]() {
        return this[_$36rotaEscolarPointTimerAtom];
      }
      set [_$rotaEscolarPointTimerAtom](value) {
        super[_$rotaEscolarPointTimerAtom] = value;
      }
      get [_$lastRotaEscolarPointAtom]() {
        return this[_$36lastRotaEscolarPointAtom];
      }
      set [_$lastRotaEscolarPointAtom](value) {
        super[_$lastRotaEscolarPointAtom] = value;
      }
      get [_$buttonIniciarCapturaRotaEscolarTextAtom]() {
        return this[_$36buttonIniciarCapturaRotaEscolarTextAtom];
      }
      set [_$buttonIniciarCapturaRotaEscolarTextAtom](value) {
        super[_$buttonIniciarCapturaRotaEscolarTextAtom] = value;
      }
      get [_$imovelGeoPointDescricaoAtom]() {
        return this[_$36imovelGeoPointDescricaoAtom];
      }
      set [_$imovelGeoPointDescricaoAtom](value) {
        super[_$imovelGeoPointDescricaoAtom] = value;
      }
      get [_$imovelGeoPointTipoAtom]() {
        return this[_$36imovelGeoPointTipoAtom];
      }
      set [_$imovelGeoPointTipoAtom](value) {
        super[_$imovelGeoPointTipoAtom] = value;
      }
      get [_$imovelGeoPointStartAtom]() {
        return this[_$36imovelGeoPointStartAtom];
      }
      set [_$imovelGeoPointStartAtom](value) {
        super[_$imovelGeoPointStartAtom] = value;
      }
      get [_$buttonIniciarCapturaImovelTextAtom]() {
        return this[_$36buttonIniciarCapturaImovelTextAtom];
      }
      set [_$buttonIniciarCapturaImovelTextAtom](value) {
        super[_$buttonIniciarCapturaImovelTextAtom] = value;
      }
      get [_$ponteDescricaoAtom]() {
        return this[_$36ponteDescricaoAtom];
      }
      set [_$ponteDescricaoAtom](value) {
        super[_$ponteDescricaoAtom] = value;
      }
      get [_$ponteEstadoConservacaoAtom]() {
        return this[_$36ponteEstadoConservacaoAtom];
      }
      set [_$ponteEstadoConservacaoAtom](value) {
        super[_$ponteEstadoConservacaoAtom] = value;
      }
      get [_$ponteMaterialAtom]() {
        return this[_$36ponteMaterialAtom];
      }
      set [_$ponteMaterialAtom](value) {
        super[_$ponteMaterialAtom] = value;
      }
      get [_$ponteExtensaoAproximadaAtom]() {
        return this[_$36ponteExtensaoAproximadaAtom];
      }
      set [_$ponteExtensaoAproximadaAtom](value) {
        super[_$ponteExtensaoAproximadaAtom] = value;
      }
      get [_$ponteRioRiachoAtom]() {
        return this[_$36ponteRioRiachoAtom];
      }
      set [_$ponteRioRiachoAtom](value) {
        super[_$ponteRioRiachoAtom] = value;
      }
      get [_$ponteStartAtom]() {
        return this[_$36ponteStartAtom];
      }
      set [_$ponteStartAtom](value) {
        super[_$ponteStartAtom] = value;
      }
      get [_$buttonIniciarCapturaPonteTextAtom]() {
        return this[_$36buttonIniciarCapturaPonteTextAtom];
      }
      set [_$buttonIniciarCapturaPonteTextAtom](value) {
        super[_$buttonIniciarCapturaPonteTextAtom] = value;
      }
      get [_$selectedPonteImageAtom]() {
        return this[_$36selectedPonteImageAtom];
      }
      set [_$selectedPonteImageAtom](value) {
        super[_$selectedPonteImageAtom] = value;
      }
      get [_$_LoginDataStoreActionController]() {
        return this[_$36_LoginDataStoreActionController];
      }
      set [_$_LoginDataStoreActionController](value) {
        super[_$_LoginDataStoreActionController] = value;
      }
      get isColected() {
        let t49;
        return (t49 = this[_$isColectedComputed], t49 == null ? this[_$isColectedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isColected, T.VoidTobool()), {name: "_LoginDataStore.isColected"}) : t49).value;
      }
      get isCidadeValid() {
        let t49;
        return (t49 = this[_$isCidadeValidComputed], t49 == null ? this[_$isCidadeValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isCidadeValid, T.VoidTobool()), {name: "_LoginDataStore.isCidadeValid"}) : t49).value;
      }
      get tipoSelected() {
        let t49;
        return (t49 = this[_$tipoSelectedComputed], t49 == null ? this[_$tipoSelectedComputed] = T.ComputedOfint().new(dart.fn(() => super.tipoSelected, T.VoidToint()), {name: "_LoginDataStore.tipoSelected"}) : t49).value;
      }
      get isIdentValid() {
        let t49;
        return (t49 = this[_$isIdentValidComputed], t49 == null ? this[_$isIdentValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isIdentValid, T.VoidTobool()), {name: "_LoginDataStore.isIdentValid"}) : t49).value;
      }
      get isColorFinished() {
        let t49;
        return (t49 = this[_$isColorFinishedComputed], t49 == null ? this[_$isColorFinishedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isColorFinished, T.VoidTobool()), {name: "_LoginDataStore.isColorFinished"}) : t49).value;
      }
      get isTipoVertice() {
        let t49;
        return (t49 = this[_$isTipoVerticeComputed], t49 == null ? this[_$isTipoVerticeComputed] = T.ComputedOfbool().new(dart.fn(() => super.isTipoVertice, T.VoidTobool()), {name: "_LoginDataStore.isTipoVertice"}) : t49).value;
      }
      get isAllSincronized() {
        let t49;
        return (t49 = this[_$isAllSincronizedComputed], t49 == null ? this[_$isAllSincronizedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isAllSincronized, T.VoidTobool()), {name: "_LoginDataStore.isAllSincronized"}) : t49).value;
      }
      get isMarkerVisible() {
        let t49;
        return (t49 = this[_$isMarkerVisibleComputed], t49 == null ? this[_$isMarkerVisibleComputed] = T.ComputedOfbool().new(dart.fn(() => super.isMarkerVisible, T.VoidTobool()), {name: "_LoginDataStore.isMarkerVisible"}) : t49).value;
      }
      get isImovelUsing() {
        let t49;
        return (t49 = this[_$isImovelUsingComputed], t49 == null ? this[_$isImovelUsingComputed] = T.ComputedOfbool().new(dart.fn(() => super.isImovelUsing, T.VoidTobool()), {name: "_LoginDataStore.isImovelUsing"}) : t49).value;
      }
      get isMapLoading() {
        let t49;
        return (t49 = this[_$isMapLoadingComputed], t49 == null ? this[_$isMapLoadingComputed] = T.ComputedOfbool().new(dart.fn(() => super.isMapLoading, T.VoidTobool()), {name: "_LoginDataStore.isMapLoading"}) : t49).value;
      }
      get isButtonsVisible() {
        let t49;
        return (t49 = this[_$isButtonsVisibleComputed], t49 == null ? this[_$isButtonsVisibleComputed] = T.ComputedOfbool().new(dart.fn(() => super.isButtonsVisible, T.VoidTobool()), {name: "_LoginDataStore.isButtonsVisible"}) : t49).value;
      }
      get isButtonIniciarNavegacaoVisible() {
        let t49;
        return (t49 = this[_$isButtonIniciarNavegacaoVisibleComputed], t49 == null ? this[_$isButtonIniciarNavegacaoVisibleComputed] = T.ComputedOfbool().new(dart.fn(() => super.isButtonIniciarNavegacaoVisible, T.VoidTobool()), {name: "_LoginDataStore.isButtonIniciarNavegacaoVisible"}) : t49).value;
      }
      get isNavigationStarted() {
        let t49;
        return (t49 = this[_$isNavigationStartedComputed], t49 == null ? this[_$isNavigationStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isNavigationStarted, T.VoidTobool()), {name: "_LoginDataStore.isNavigationStarted"}) : t49).value;
      }
      get isNavigationStartedWithoutCompass() {
        let t49;
        return (t49 = this[_$isNavigationStartedWithoutCompassComputed], t49 == null ? this[_$isNavigationStartedWithoutCompassComputed] = T.ComputedOfbool().new(dart.fn(() => super.isNavigationStartedWithoutCompass, T.VoidTobool()), {name: "_LoginDataStore.isNavigationStartedWithoutCompass"}) : t49).value;
      }
      get hasSelectedRoute() {
        let t49;
        return (t49 = this[_$hasSelectedRouteComputed], t49 == null ? this[_$hasSelectedRouteComputed] = T.ComputedOfbool().new(dart.fn(() => super.hasSelectedRoute, T.VoidTobool()), {name: "_LoginDataStore.hasSelectedRoute"}) : t49).value;
      }
      get isRouteDone() {
        let t49;
        return (t49 = this[_$isRouteDoneComputed], t49 == null ? this[_$isRouteDoneComputed] = T.ComputedOfbool().new(dart.fn(() => super.isRouteDone, T.VoidTobool()), {name: "_LoginDataStore.isRouteDone"}) : t49).value;
      }
      get isLevantamentoFormValid() {
        let t49;
        return (t49 = this[_$isLevantamentoFormValidComputed], t49 == null ? this[_$isLevantamentoFormValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isLevantamentoFormValid, T.VoidTobool()), {name: "_LoginDataStore.isLevantamentoFormValid"}) : t49).value;
      }
      get isLevantamentoSincronizado() {
        let t49;
        return (t49 = this[_$isLevantamentoSincronizadoComputed], t49 == null ? this[_$isLevantamentoSincronizadoComputed] = T.ComputedOfbool().new(dart.fn(() => super.isLevantamentoSincronizado, T.VoidTobool()), {name: "_LoginDataStore.isLevantamentoSincronizado"}) : t49).value;
      }
      get isEstradaFormValid() {
        let t49;
        return (t49 = this[_$isEstradaFormValidComputed], t49 == null ? this[_$isEstradaFormValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isEstradaFormValid, T.VoidTobool()), {name: "_LoginDataStore.isEstradaFormValid"}) : t49).value;
      }
      get isEstradaStarted() {
        let t49;
        return (t49 = this[_$isEstradaStartedComputed], t49 == null ? this[_$isEstradaStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isEstradaStarted, T.VoidTobool()), {name: "_LoginDataStore.isEstradaStarted"}) : t49).value;
      }
      get isEstradaCaptureStarted() {
        let t49;
        return (t49 = this[_$isEstradaCaptureStartedComputed], t49 == null ? this[_$isEstradaCaptureStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isEstradaCaptureStarted, T.VoidTobool()), {name: "_LoginDataStore.isEstradaCaptureStarted"}) : t49).value;
      }
      get isRotaEscolarFormValid() {
        let t49;
        return (t49 = this[_$isRotaEscolarFormValidComputed], t49 == null ? this[_$isRotaEscolarFormValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isRotaEscolarFormValid, T.VoidTobool()), {name: "_LoginDataStore.isRotaEscolarFormValid"}) : t49).value;
      }
      get isRotaEscolarStarted() {
        let t49;
        return (t49 = this[_$isRotaEscolarStartedComputed], t49 == null ? this[_$isRotaEscolarStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isRotaEscolarStarted, T.VoidTobool()), {name: "_LoginDataStore.isRotaEscolarStarted"}) : t49).value;
      }
      get isRotaEscolarCaptureStarted() {
        let t49;
        return (t49 = this[_$isRotaEscolarCaptureStartedComputed], t49 == null ? this[_$isRotaEscolarCaptureStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isRotaEscolarCaptureStarted, T.VoidTobool()), {name: "_LoginDataStore.isRotaEscolarCaptureStarted"}) : t49).value;
      }
      get isGeoPointFormValid() {
        let t49;
        return (t49 = this[_$isGeoPointFormValidComputed], t49 == null ? this[_$isGeoPointFormValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isGeoPointFormValid, T.VoidTobool()), {name: "_LoginDataStore.isGeoPointFormValid"}) : t49).value;
      }
      get isImovelStarted() {
        let t49;
        return (t49 = this[_$isImovelStartedComputed], t49 == null ? this[_$isImovelStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isImovelStarted, T.VoidTobool()), {name: "_LoginDataStore.isImovelStarted"}) : t49).value;
      }
      get isImovelCaptureStarted() {
        let t49;
        return (t49 = this[_$isImovelCaptureStartedComputed], t49 == null ? this[_$isImovelCaptureStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isImovelCaptureStarted, T.VoidTobool()), {name: "_LoginDataStore.isImovelCaptureStarted"}) : t49).value;
      }
      get isPonteFormValid() {
        let t49;
        return (t49 = this[_$isPonteFormValidComputed], t49 == null ? this[_$isPonteFormValidComputed] = T.ComputedOfbool().new(dart.fn(() => super.isPonteFormValid, T.VoidTobool()), {name: "_LoginDataStore.isPonteFormValid"}) : t49).value;
      }
      get isPonteStarted() {
        let t49;
        return (t49 = this[_$isPonteStartedComputed], t49 == null ? this[_$isPonteStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isPonteStarted, T.VoidTobool()), {name: "_LoginDataStore.isPonteStarted"}) : t49).value;
      }
      get isPonteCaptureStarted() {
        let t49;
        return (t49 = this[_$isPonteCaptureStartedComputed], t49 == null ? this[_$isPonteCaptureStartedComputed] = T.ComputedOfbool().new(dart.fn(() => super.isPonteCaptureStarted, T.VoidTobool()), {name: "_LoginDataStore.isPonteCaptureStarted"}) : t49).value;
      }
      get m() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$mAtom]);
        return super.m;
      }
      set m(value) {
        if (value == null) dart.nullFailed(I[16], 236, 19, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](municipio.Municipio, this[_$mAtom], value, super.m, dart.fn(() => {
          super.m = value;
        }, T.VoidTovoid()));
      }
      get u() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$uAtom]);
        return super.u;
      }
      set u(value) {
        if (value == null) dart.nullFailed(I[16], 251, 14, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](user$.User, this[_$uAtom], value, super.u, dart.fn(() => {
          super.u = value;
        }, T.VoidTovoid()));
      }
      get loggedIn() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$loggedInAtom]);
        return super.loggedIn;
      }
      set loggedIn(value) {
        if (value == null) dart.nullFailed(I[16], 266, 21, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$loggedInAtom], value, super.loggedIn, dart.fn(() => {
          super.loggedIn = value;
        }, T.VoidTovoid()));
      }
      get municipioSelectorEnabled() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$municipioSelectorEnabledAtom]);
        return super.municipioSelectorEnabled;
      }
      set municipioSelectorEnabled(value) {
        if (value == null) dart.nullFailed(I[16], 282, 37, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$municipioSelectorEnabledAtom], value, super.municipioSelectorEnabled, dart.fn(() => {
          super.municipioSelectorEnabled = value;
        }, T.VoidTovoid()));
      }
      get statusBarHeight() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$statusBarHeightAtom]);
        return super.statusBarHeight;
      }
      set statusBarHeight(value) {
        if (value == null) dart.nullFailed(I[16], 298, 30, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.double, this[_$statusBarHeightAtom], value, super.statusBarHeight, dart.fn(() => {
          super.statusBarHeight = value;
        }, T.VoidTovoid()));
      }
      get tipo_ponto() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$tipo_pontoAtom]);
        return super.tipo_ponto;
      }
      set tipo_ponto(value) {
        if (value == null) dart.nullFailed(I[16], 313, 22, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.int, this[_$tipo_pontoAtom], value, super.tipo_ponto, dart.fn(() => {
          super.tipo_ponto = value;
        }, T.VoidTovoid()));
      }
      get identificacao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$identificacaoAtom]);
        return super.identificacao;
      }
      set identificacao(value) {
        if (value == null) dart.nullFailed(I[16], 328, 28, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$identificacaoAtom], value, super.identificacao, dart.fn(() => {
          super.identificacao = value;
        }, T.VoidTovoid()));
      }
      get userPosition() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$userPositionAtom]);
        return super.userPosition;
      }
      set userPosition(value) {
        atom_extensions['AtomSpyReporter|reportWrite'](T.PositionN(), this[_$userPositionAtom], value, super.userPosition, dart.fn(() => {
          super.userPosition = value;
        }, T.VoidTovoid()));
      }
      get oldUserPosition() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$oldUserPositionAtom]);
        return super.oldUserPosition;
      }
      set oldUserPosition(value) {
        atom_extensions['AtomSpyReporter|reportWrite'](T.PositionN(), this[_$oldUserPositionAtom], value, super.oldUserPosition, dart.fn(() => {
          super.oldUserPosition = value;
        }, T.VoidTovoid()));
      }
      get colorStateValue() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$colorStateValueAtom]);
        return super.colorStateValue;
      }
      set colorStateValue(value) {
        if (value == null) dart.nullFailed(I[16], 373, 27, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.int, this[_$colorStateValueAtom], value, super.colorStateValue, dart.fn(() => {
          super.colorStateValue = value;
        }, T.VoidTovoid()));
      }
      get verticeActualValue() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$verticeActualValueAtom]);
        return super.verticeActualValue;
      }
      set verticeActualValue(value) {
        if (value == null) dart.nullFailed(I[16], 389, 30, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.int, this[_$verticeActualValueAtom], value, super.verticeActualValue, dart.fn(() => {
          super.verticeActualValue = value;
        }, T.VoidTovoid()));
      }
      get colected() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$colectedAtom]);
        return super.colected;
      }
      set colected(value) {
        if (value == null) dart.nullFailed(I[16], 404, 21, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$colectedAtom], value, super.colected, dart.fn(() => {
          super.colected = value;
        }, T.VoidTovoid()));
      }
      get allSincronized() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$allSincronizedAtom]);
        return super.allSincronized;
      }
      set allSincronized(value) {
        if (value == null) dart.nullFailed(I[16], 419, 27, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$allSincronizedAtom], value, super.allSincronized, dart.fn(() => {
          super.allSincronized = value;
        }, T.VoidTovoid()));
      }
      get markers_visible() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$markers_visibleAtom]);
        return super.markers_visible;
      }
      set markers_visible(value) {
        if (value == null) dart.nullFailed(I[16], 434, 28, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$markers_visibleAtom], value, super.markers_visible, dart.fn(() => {
          super.markers_visible = value;
        }, T.VoidTovoid()));
      }
      get imovel() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$imovelAtom]);
        return super.imovel;
      }
      set imovel(value) {
        if (value == null) dart.nullFailed(I[16], 449, 21, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](imovel$.Imovel, this[_$imovelAtom], value, super.imovel, dart.fn(() => {
          super.imovel = value;
        }, T.VoidTovoid()));
      }
      get geoJsonFileName() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$geoJsonFileNameAtom]);
        return super.geoJsonFileName;
      }
      set geoJsonFileName(value) {
        if (value == null) dart.nullFailed(I[16], 464, 30, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$geoJsonFileNameAtom], value, super.geoJsonFileName, dart.fn(() => {
          super.geoJsonFileName = value;
        }, T.VoidTovoid()));
      }
      get javaScriptFileName() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$javaScriptFileNameAtom]);
        return super.javaScriptFileName;
      }
      set javaScriptFileName(value) {
        if (value == null) dart.nullFailed(I[16], 480, 33, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$javaScriptFileNameAtom], value, super.javaScriptFileName, dart.fn(() => {
          super.javaScriptFileName = value;
        }, T.VoidTovoid()));
      }
      get pathHtml() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$pathHtmlAtom]);
        return super.pathHtml;
      }
      set pathHtml(value) {
        if (value == null) dart.nullFailed(I[16], 495, 23, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$pathHtmlAtom], value, super.pathHtml, dart.fn(() => {
          super.pathHtml = value;
        }, T.VoidTovoid()));
      }
      get mapLoading() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$mapLoadingAtom]);
        return super.mapLoading;
      }
      set mapLoading(value) {
        if (value == null) dart.nullFailed(I[16], 510, 23, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$mapLoadingAtom], value, super.mapLoading, dart.fn(() => {
          super.mapLoading = value;
        }, T.VoidTovoid()));
      }
      get buttonsVisibility() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonsVisibilityAtom]);
        return super.buttonsVisibility;
      }
      set buttonsVisibility(value) {
        if (value == null) dart.nullFailed(I[16], 526, 30, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$buttonsVisibilityAtom], value, super.buttonsVisibility, dart.fn(() => {
          super.buttonsVisibility = value;
        }, T.VoidTovoid()));
      }
      get buttonIniciarNavegacaoVisibility() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonIniciarNavegacaoVisibilityAtom]);
        return super.buttonIniciarNavegacaoVisibility;
      }
      set buttonIniciarNavegacaoVisibility(value) {
        if (value == null) dart.nullFailed(I[16], 542, 45, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$buttonIniciarNavegacaoVisibilityAtom], value, super.buttonIniciarNavegacaoVisibility, dart.fn(() => {
          super.buttonIniciarNavegacaoVisibility = value;
        }, T.VoidTovoid()));
      }
      get buttonIniciarNavegacaoText() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonIniciarNavegacaoTextAtom]);
        return super.buttonIniciarNavegacaoText;
      }
      set buttonIniciarNavegacaoText(value) {
        if (value == null) dart.nullFailed(I[16], 559, 41, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$buttonIniciarNavegacaoTextAtom], value, super.buttonIniciarNavegacaoText, dart.fn(() => {
          super.buttonIniciarNavegacaoText = value;
        }, T.VoidTovoid()));
      }
      get navigationHeading() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$navigationHeadingAtom]);
        return super.navigationHeading;
      }
      set navigationHeading(value) {
        if (value == null) dart.nullFailed(I[16], 576, 32, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.double, this[_$navigationHeadingAtom], value, super.navigationHeading, dart.fn(() => {
          super.navigationHeading = value;
        }, T.VoidTovoid()));
      }
      get routePath() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$routePathAtom]);
        return super.routePath;
      }
      set routePath(value) {
        if (value == null) dart.nullFailed(I[16], 591, 46, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](T.PathOfLatLng(), this[_$routePathAtom], value, super.routePath, dart.fn(() => {
          super.routePath = value;
        }, T.VoidTovoid()));
      }
      get selectedImovelRoute() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$selectedImovelRouteAtom]);
        return super.selectedImovelRoute;
      }
      set selectedImovelRoute(value) {
        if (value == null) dart.nullFailed(I[16], 607, 39, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](ImovelRoute.ImovelRoute, this[_$selectedImovelRouteAtom], value, super.selectedImovelRoute, dart.fn(() => {
          super.selectedImovelRoute = value;
        }, T.VoidTovoid()));
      }
      get selectedLevantamento() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$selectedLevantamentoAtom]);
        return super.selectedLevantamento;
      }
      set selectedLevantamento(value) {
        if (value == null) dart.nullFailed(I[16], 623, 41, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](Levantamento.Levantamento, this[_$selectedLevantamentoAtom], value, super.selectedLevantamento, dart.fn(() => {
          super.selectedLevantamento = value;
        }, T.VoidTovoid()));
      }
      get routeDone() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$routeDoneAtom]);
        return super.routeDone;
      }
      set routeDone(value) {
        if (value == null) dart.nullFailed(I[16], 639, 22, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$routeDoneAtom], value, super.routeDone, dart.fn(() => {
          super.routeDone = value;
        }, T.VoidTovoid()));
      }
      get levantamentoDescricao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$levantamentoDescricaoAtom]);
        return super.levantamentoDescricao;
      }
      set levantamentoDescricao(value) {
        if (value == null) dart.nullFailed(I[16], 655, 36, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$levantamentoDescricaoAtom], value, super.levantamentoDescricao, dart.fn(() => {
          super.levantamentoDescricao = value;
        }, T.VoidTovoid()));
      }
      get estradaDescricao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$estradaDescricaoAtom]);
        return super.estradaDescricao;
      }
      set estradaDescricao(value) {
        if (value == null) dart.nullFailed(I[16], 671, 31, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$estradaDescricaoAtom], value, super.estradaDescricao, dart.fn(() => {
          super.estradaDescricao = value;
        }, T.VoidTovoid()));
      }
      get estradaEstadoDeConservacao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$estradaEstadoDeConservacaoAtom]);
        return super.estradaEstadoDeConservacao;
      }
      set estradaEstadoDeConservacao(value) {
        if (value == null) dart.nullFailed(I[16], 687, 41, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$estradaEstadoDeConservacaoAtom], value, super.estradaEstadoDeConservacao, dart.fn(() => {
          super.estradaEstadoDeConservacao = value;
        }, T.VoidTovoid()));
      }
      get estradaTipoDePavimentacao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$estradaTipoDePavimentacaoAtom]);
        return super.estradaTipoDePavimentacao;
      }
      set estradaTipoDePavimentacao(value) {
        if (value == null) dart.nullFailed(I[16], 704, 40, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$estradaTipoDePavimentacaoAtom], value, super.estradaTipoDePavimentacao, dart.fn(() => {
          super.estradaTipoDePavimentacao = value;
        }, T.VoidTovoid()));
      }
      get estradaLarguraAproximada() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$estradaLarguraAproximadaAtom]);
        return super.estradaLarguraAproximada;
      }
      set estradaLarguraAproximada(value) {
        if (value == null) dart.nullFailed(I[16], 721, 39, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$estradaLarguraAproximadaAtom], value, super.estradaLarguraAproximada, dart.fn(() => {
          super.estradaLarguraAproximada = value;
        }, T.VoidTovoid()));
      }
      get estradaStart() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$estradaStartAtom]);
        return super.estradaStart;
      }
      set estradaStart(value) {
        if (value == null) dart.nullFailed(I[16], 737, 25, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$estradaStartAtom], value, super.estradaStart, dart.fn(() => {
          super.estradaStart = value;
        }, T.VoidTovoid()));
      }
      get estradaPointTimer() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$estradaPointTimerAtom]);
        return super.estradaPointTimer;
      }
      set estradaPointTimer(value) {
        if (value == null) dart.nullFailed(I[16], 753, 32, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$estradaPointTimerAtom], value, super.estradaPointTimer, dart.fn(() => {
          super.estradaPointTimer = value;
        }, T.VoidTovoid()));
      }
      get lastEstradaPoint() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$lastEstradaPointAtom]);
        return super.lastEstradaPoint;
      }
      set lastEstradaPoint(value) {
        if (value == null) dart.nullFailed(I[16], 768, 31, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](location.LatLng, this[_$lastEstradaPointAtom], value, super.lastEstradaPoint, dart.fn(() => {
          super.lastEstradaPoint = value;
        }, T.VoidTovoid()));
      }
      get buttonIniciarCapturaEstradaText() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonIniciarCapturaEstradaTextAtom]);
        return super.buttonIniciarCapturaEstradaText;
      }
      set buttonIniciarCapturaEstradaText(value) {
        if (value == null) dart.nullFailed(I[16], 784, 46, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$buttonIniciarCapturaEstradaTextAtom], value, super.buttonIniciarCapturaEstradaText, dart.fn(() => {
          super.buttonIniciarCapturaEstradaText = value;
        }, T.VoidTovoid()));
      }
      get rotaEscolarDescricao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$rotaEscolarDescricaoAtom]);
        return super.rotaEscolarDescricao;
      }
      set rotaEscolarDescricao(value) {
        if (value == null) dart.nullFailed(I[16], 801, 35, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$rotaEscolarDescricaoAtom], value, super.rotaEscolarDescricao, dart.fn(() => {
          super.rotaEscolarDescricao = value;
        }, T.VoidTovoid()));
      }
      get rotaEscolarEstadoDeConservacao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$rotaEscolarEstadoDeConservacaoAtom]);
        return super.rotaEscolarEstadoDeConservacao;
      }
      set rotaEscolarEstadoDeConservacao(value) {
        if (value == null) dart.nullFailed(I[16], 818, 45, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$rotaEscolarEstadoDeConservacaoAtom], value, super.rotaEscolarEstadoDeConservacao, dart.fn(() => {
          super.rotaEscolarEstadoDeConservacao = value;
        }, T.VoidTovoid()));
      }
      get rotaEscolarTipoDePavimentacao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$rotaEscolarTipoDePavimentacaoAtom]);
        return super.rotaEscolarTipoDePavimentacao;
      }
      set rotaEscolarTipoDePavimentacao(value) {
        if (value == null) dart.nullFailed(I[16], 835, 44, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$rotaEscolarTipoDePavimentacaoAtom], value, super.rotaEscolarTipoDePavimentacao, dart.fn(() => {
          super.rotaEscolarTipoDePavimentacao = value;
        }, T.VoidTovoid()));
      }
      get rotaEscolarLarguraAproximada() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$rotaEscolarLarguraAproximadaAtom]);
        return super.rotaEscolarLarguraAproximada;
      }
      set rotaEscolarLarguraAproximada(value) {
        if (value == null) dart.nullFailed(I[16], 852, 43, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$rotaEscolarLarguraAproximadaAtom], value, super.rotaEscolarLarguraAproximada, dart.fn(() => {
          super.rotaEscolarLarguraAproximada = value;
        }, T.VoidTovoid()));
      }
      get rotaEscolarStart() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$rotaEscolarStartAtom]);
        return super.rotaEscolarStart;
      }
      set rotaEscolarStart(value) {
        if (value == null) dart.nullFailed(I[16], 868, 29, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$rotaEscolarStartAtom], value, super.rotaEscolarStart, dart.fn(() => {
          super.rotaEscolarStart = value;
        }, T.VoidTovoid()));
      }
      get rotaEscolarPointTimer() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$rotaEscolarPointTimerAtom]);
        return super.rotaEscolarPointTimer;
      }
      set rotaEscolarPointTimer(value) {
        if (value == null) dart.nullFailed(I[16], 884, 36, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$rotaEscolarPointTimerAtom], value, super.rotaEscolarPointTimer, dart.fn(() => {
          super.rotaEscolarPointTimer = value;
        }, T.VoidTovoid()));
      }
      get lastRotaEscolarPoint() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$lastRotaEscolarPointAtom]);
        return super.lastRotaEscolarPoint;
      }
      set lastRotaEscolarPoint(value) {
        if (value == null) dart.nullFailed(I[16], 901, 35, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](location.LatLng, this[_$lastRotaEscolarPointAtom], value, super.lastRotaEscolarPoint, dart.fn(() => {
          super.lastRotaEscolarPoint = value;
        }, T.VoidTovoid()));
      }
      get buttonIniciarCapturaRotaEscolarText() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonIniciarCapturaRotaEscolarTextAtom]);
        return super.buttonIniciarCapturaRotaEscolarText;
      }
      set buttonIniciarCapturaRotaEscolarText(value) {
        if (value == null) dart.nullFailed(I[16], 918, 50, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$buttonIniciarCapturaRotaEscolarTextAtom], value, super.buttonIniciarCapturaRotaEscolarText, dart.fn(() => {
          super.buttonIniciarCapturaRotaEscolarText = value;
        }, T.VoidTovoid()));
      }
      get imovelGeoPointDescricao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$imovelGeoPointDescricaoAtom]);
        return super.imovelGeoPointDescricao;
      }
      set imovelGeoPointDescricao(value) {
        if (value == null) dart.nullFailed(I[16], 935, 38, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$imovelGeoPointDescricaoAtom], value, super.imovelGeoPointDescricao, dart.fn(() => {
          super.imovelGeoPointDescricao = value;
        }, T.VoidTovoid()));
      }
      get imovelGeoPointTipo() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$imovelGeoPointTipoAtom]);
        return super.imovelGeoPointTipo;
      }
      set imovelGeoPointTipo(value) {
        if (value == null) dart.nullFailed(I[16], 952, 33, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$imovelGeoPointTipoAtom], value, super.imovelGeoPointTipo, dart.fn(() => {
          super.imovelGeoPointTipo = value;
        }, T.VoidTovoid()));
      }
      get imovelGeoPointStart() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$imovelGeoPointStartAtom]);
        return super.imovelGeoPointStart;
      }
      set imovelGeoPointStart(value) {
        if (value == null) dart.nullFailed(I[16], 968, 32, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$imovelGeoPointStartAtom], value, super.imovelGeoPointStart, dart.fn(() => {
          super.imovelGeoPointStart = value;
        }, T.VoidTovoid()));
      }
      get buttonIniciarCapturaImovelText() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonIniciarCapturaImovelTextAtom]);
        return super.buttonIniciarCapturaImovelText;
      }
      set buttonIniciarCapturaImovelText(value) {
        if (value == null) dart.nullFailed(I[16], 984, 45, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$buttonIniciarCapturaImovelTextAtom], value, super.buttonIniciarCapturaImovelText, dart.fn(() => {
          super.buttonIniciarCapturaImovelText = value;
        }, T.VoidTovoid()));
      }
      get ponteDescricao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$ponteDescricaoAtom]);
        return super.ponteDescricao;
      }
      set ponteDescricao(value) {
        if (value == null) dart.nullFailed(I[16], 1000, 29, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$ponteDescricaoAtom], value, super.ponteDescricao, dart.fn(() => {
          super.ponteDescricao = value;
        }, T.VoidTovoid()));
      }
      get ponteEstadoConservacao() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$ponteEstadoConservacaoAtom]);
        return super.ponteEstadoConservacao;
      }
      set ponteEstadoConservacao(value) {
        if (value == null) dart.nullFailed(I[16], 1016, 37, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$ponteEstadoConservacaoAtom], value, super.ponteEstadoConservacao, dart.fn(() => {
          super.ponteEstadoConservacao = value;
        }, T.VoidTovoid()));
      }
      get ponteMaterial() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$ponteMaterialAtom]);
        return super.ponteMaterial;
      }
      set ponteMaterial(value) {
        if (value == null) dart.nullFailed(I[16], 1032, 28, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$ponteMaterialAtom], value, super.ponteMaterial, dart.fn(() => {
          super.ponteMaterial = value;
        }, T.VoidTovoid()));
      }
      get ponteExtensaoAproximada() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$ponteExtensaoAproximadaAtom]);
        return super.ponteExtensaoAproximada;
      }
      set ponteExtensaoAproximada(value) {
        if (value == null) dart.nullFailed(I[16], 1048, 38, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$ponteExtensaoAproximadaAtom], value, super.ponteExtensaoAproximada, dart.fn(() => {
          super.ponteExtensaoAproximada = value;
        }, T.VoidTovoid()));
      }
      get ponteRioRiacho() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$ponteRioRiachoAtom]);
        return super.ponteRioRiacho;
      }
      set ponteRioRiacho(value) {
        if (value == null) dart.nullFailed(I[16], 1064, 29, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$ponteRioRiachoAtom], value, super.ponteRioRiacho, dart.fn(() => {
          super.ponteRioRiacho = value;
        }, T.VoidTovoid()));
      }
      get ponteStart() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$ponteStartAtom]);
        return super.ponteStart;
      }
      set ponteStart(value) {
        if (value == null) dart.nullFailed(I[16], 1079, 23, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.bool, this[_$ponteStartAtom], value, super.ponteStart, dart.fn(() => {
          super.ponteStart = value;
        }, T.VoidTovoid()));
      }
      get buttonIniciarCapturaPonteText() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$buttonIniciarCapturaPonteTextAtom]);
        return super.buttonIniciarCapturaPonteText;
      }
      set buttonIniciarCapturaPonteText(value) {
        if (value == null) dart.nullFailed(I[16], 1095, 44, "value");
        atom_extensions['AtomSpyReporter|reportWrite'](core.String, this[_$buttonIniciarCapturaPonteTextAtom], value, super.buttonIniciarCapturaPonteText, dart.fn(() => {
          super.buttonIniciarCapturaPonteText = value;
        }, T.VoidTovoid()));
      }
      get selectedPonteImage() {
        atom_extensions['AtomSpyReporter|reportRead'](this[_$selectedPonteImageAtom]);
        return super.selectedPonteImage;
      }
      set selectedPonteImage(value) {
        atom_extensions['AtomSpyReporter|reportWrite'](T.PonteImageN(), this[_$selectedPonteImageAtom], value, super.selectedPonteImage, dart.fn(() => {
          super.selectedPonteImage = value;
        }, T.VoidTovoid()));
      }
      setMunicipio(municipio) {
        if (municipio == null) dart.nullFailed(I[16], 1122, 31, "municipio");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setMunicipio"});
        try {
          return super.setMunicipio(municipio);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setUser(user) {
        if (user == null) dart.nullFailed(I[16], 1133, 21, "user");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setUser"});
        try {
          return super.setUser(user);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      login() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.login"});
        try {
          return super.login();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      logout() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.logout"});
        try {
          return super.logout();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setStatusBarHeight(d) {
        if (d == null) dart.nullFailed(I[16], 1166, 34, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setStatusBarHeight"});
        try {
          return super.setStatusBarHeight(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setTipo(value) {
        if (value == null) dart.nullFailed(I[16], 1177, 20, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setTipo"});
        try {
          return super.setTipo(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setIdent(value) {
        if (value == null) dart.nullFailed(I[16], 1188, 24, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setIdent"});
        try {
          return super.setIdent(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setUserPosition(position) {
        if (position == null) dart.nullFailed(I[16], 1199, 33, "position");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setUserPosition"});
        try {
          return super.setUserPosition(position);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setColorStateValue(value) {
        if (value == null) dart.nullFailed(I[16], 1210, 31, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setColorStateValue"});
        try {
          return super.setColorStateValue(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setVerticeActualValue(value) {
        if (value == null) dart.nullFailed(I[16], 1221, 34, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setVerticeActualValue"});
        try {
          return super.setVerticeActualValue(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setCollected(value) {
        if (value == null) dart.nullFailed(I[16], 1232, 26, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setCollected"});
        try {
          return super.setCollected(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setAllSincronized(value) {
        if (value == null) dart.nullFailed(I[16], 1243, 31, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setAllSincronized"});
        try {
          return super.setAllSincronized(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      toggleMarkers() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.toggleMarkers"});
        try {
          return super.toggleMarkers();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setMarkersVisibility(value) {
        if (value == null) dart.nullFailed(I[16], 1265, 34, "value");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setMarkersVisibility"});
        try {
          return super.setMarkersVisibility(value);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setImovel(im) {
        if (im == null) dart.nullFailed(I[16], 1276, 25, "im");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setImovel"});
        try {
          return super.setImovel(im);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setGeoJsonFileName(f) {
        if (f == null) dart.nullFailed(I[16], 1287, 34, "f");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setGeoJsonFileName"});
        try {
          return super.setGeoJsonFileName(f);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setJavaScriptFileName(f) {
        if (f == null) dart.nullFailed(I[16], 1298, 37, "f");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setJavaScriptFileName"});
        try {
          return super.setJavaScriptFileName(f);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPathHtml(s) {
        if (s == null) dart.nullFailed(I[16], 1309, 27, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPathHtml"});
        try {
          return super.setPathHtml(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setMapLoading(b) {
        if (b == null) dart.nullFailed(I[16], 1320, 27, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setMapLoading"});
        try {
          return super.setMapLoading(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonsVisibility(b) {
        if (b == null) dart.nullFailed(I[16], 1331, 34, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonsVisibility"});
        try {
          return super.setButtonsVisibility(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonIniciarNavegacaoVisibility(b) {
        if (b == null) dart.nullFailed(I[16], 1342, 49, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonIniciarNavegacaoVisibility"});
        try {
          return super.setButtonIniciarNavegacaoVisibility(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonIniciarNavegacaoText(T) {
        if (T == null) dart.nullFailed(I[16], 1353, 45, "T");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonIniciarNavegacaoText"});
        try {
          return super.setButtonIniciarNavegacaoText(T);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setNavigationHeading(d) {
        if (d == null) dart.nullFailed(I[16], 1364, 36, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setNavigationHeading"});
        try {
          return super.setNavigationHeading(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addMunicipioList(m) {
        if (m == null) dart.nullFailed(I[16], 1375, 35, "m");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addMunicipioList"});
        try {
          return super.addMunicipioList(m);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearMunicipioList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearMunicipioList"});
        try {
          return super.clearMunicipioList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRoutPath(p) {
        if (p == null) dart.nullFailed(I[16], 1397, 49, "p");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRoutPath"});
        try {
          return super.setRoutPath(p);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addImovelRoute(i) {
        if (i == null) dart.nullFailed(I[16], 1408, 35, "i");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addImovelRoute"});
        try {
          return super.addImovelRoute(i);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearImovelRoute() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearImovelRoute"});
        try {
          return super.clearImovelRoute();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addLatLngRoute(l) {
        if (l == null) dart.nullFailed(I[16], 1430, 38, "l");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addLatLngRoute"});
        try {
          return super.addLatLngRoute(l);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearLatLngRoute() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearLatLngRoute"});
        try {
          return super.clearLatLngRoute();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setSelectedImovelRoute(i) {
        if (i == null) dart.nullFailed(I[16], 1452, 43, "i");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setSelectedImovelRoute"});
        try {
          return super.setSelectedImovelRoute(i);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setSelectedLevantamento(l) {
        if (l == null) dart.nullFailed(I[16], 1463, 45, "l");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setSelectedLevantamento"});
        try {
          return super.setSelectedLevantamento(l);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRouteDone(b) {
        if (b == null) dart.nullFailed(I[16], 1474, 26, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRouteDone"});
        try {
          return super.setRouteDone(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearButtons() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearButtons"});
        try {
          return super.clearButtons();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setLevantamentoDescricao(d) {
        if (d == null) dart.nullFailed(I[16], 1496, 40, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setLevantamentoDescricao"});
        try {
          return super.setLevantamentoDescricao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addLevantamentosList(l) {
        if (l == null) dart.nullFailed(I[16], 1507, 42, "l");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addLevantamentosList"});
        try {
          return super.addLevantamentosList(l);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearLevantamentosList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearLevantamentosList"});
        try {
          return super.clearLevantamentosList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addLevantamentosAsyncList(l) {
        if (l == null) dart.nullFailed(I[16], 1529, 47, "l");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addLevantamentosAsyncList"});
        try {
          return super.addLevantamentosAsyncList(l);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearLevantamentosAsyncList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearLevantamentosAsyncList"});
        try {
          return super.clearLevantamentosAsyncList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setEstradaDescricao(d) {
        if (d == null) dart.nullFailed(I[16], 1551, 35, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setEstradaDescricao"});
        try {
          return super.setEstradaDescricao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setEstradaConservacao(d) {
        if (d == null) dart.nullFailed(I[16], 1562, 37, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setEstradaConservacao"});
        try {
          return super.setEstradaConservacao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setEstradaPavimentacao(d) {
        if (d == null) dart.nullFailed(I[16], 1573, 38, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setEstradaPavimentacao"});
        try {
          return super.setEstradaPavimentacao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setEstradaLargura(d) {
        if (d == null) dart.nullFailed(I[16], 1584, 33, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setEstradaLargura"});
        try {
          return super.setEstradaLargura(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setEstradaStart(b) {
        if (b == null) dart.nullFailed(I[16], 1595, 29, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setEstradaStart"});
        try {
          return super.setEstradaStart(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setEstradaPointTimer(s) {
        if (s == null) dart.nullFailed(I[16], 1606, 36, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setEstradaPointTimer"});
        try {
          return super.setEstradaPointTimer(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setLastEstradaPoint(l) {
        if (l == null) dart.nullFailed(I[16], 1617, 35, "l");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setLastEstradaPoint"});
        try {
          return super.setLastEstradaPoint(l);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonIniciarCapturaEstrada(T) {
        if (T == null) dart.nullFailed(I[16], 1628, 46, "T");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonIniciarCapturaEstrada"});
        try {
          return super.setButtonIniciarCapturaEstrada(T);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearEstradaData() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearEstradaData"});
        try {
          return super.clearEstradaData();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addEstradaPointList(e) {
        if (e == null) dart.nullFailed(I[16], 1650, 41, "e");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addEstradaPointList"});
        try {
          return super.addEstradaPointList(e);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearEstradaPointList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearEstradaPointList"});
        try {
          return super.clearEstradaPointList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addEstradaPointAsyncList(e) {
        if (e == null) dart.nullFailed(I[16], 1672, 46, "e");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addEstradaPointAsyncList"});
        try {
          return super.addEstradaPointAsyncList(e);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearEstradaPointAsyncList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearEstradaPointAsyncList"});
        try {
          return super.clearEstradaPointAsyncList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRotaEscolarDescricao(d) {
        if (d == null) dart.nullFailed(I[16], 1694, 39, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRotaEscolarDescricao"});
        try {
          return super.setRotaEscolarDescricao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRotaEscolarConservacao(d) {
        if (d == null) dart.nullFailed(I[16], 1705, 41, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRotaEscolarConservacao"});
        try {
          return super.setRotaEscolarConservacao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRotaEscolarPavimentacao(d) {
        if (d == null) dart.nullFailed(I[16], 1716, 42, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRotaEscolarPavimentacao"});
        try {
          return super.setRotaEscolarPavimentacao(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRotaEscolarLargura(d) {
        if (d == null) dart.nullFailed(I[16], 1727, 37, "d");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRotaEscolarLargura"});
        try {
          return super.setRotaEscolarLargura(d);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRotaEscolarStart(b) {
        if (b == null) dart.nullFailed(I[16], 1738, 33, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRotaEscolarStart"});
        try {
          return super.setRotaEscolarStart(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setRotaEscolarPointTimer(s) {
        if (s == null) dart.nullFailed(I[16], 1749, 40, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setRotaEscolarPointTimer"});
        try {
          return super.setRotaEscolarPointTimer(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setLastRotaEscolarPoint(l) {
        if (l == null) dart.nullFailed(I[16], 1760, 39, "l");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setLastRotaEscolarPoint"});
        try {
          return super.setLastRotaEscolarPoint(l);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonIniciarCapturaRotaEscolar(T) {
        if (T == null) dart.nullFailed(I[16], 1771, 50, "T");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonIniciarCapturaRotaEscolar"});
        try {
          return super.setButtonIniciarCapturaRotaEscolar(T);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearRotaEscolarData() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearRotaEscolarData"});
        try {
          return super.clearRotaEscolarData();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addRotaEscolarPointList(r) {
        if (r == null) dart.nullFailed(I[16], 1793, 49, "r");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addRotaEscolarPointList"});
        try {
          return super.addRotaEscolarPointList(r);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearRotaEscolarPointList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearRotaEscolarPointList"});
        try {
          return super.clearRotaEscolarPointList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addRotaEscolarPointAsyncList(r) {
        if (r == null) dart.nullFailed(I[16], 1815, 54, "r");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addRotaEscolarPointAsyncList"});
        try {
          return super.addRotaEscolarPointAsyncList(r);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearRotaEscolarPointAsyncList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearRotaEscolarPointAsyncList"});
        try {
          return super.clearRotaEscolarPointAsyncList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setImovelStart(b) {
        if (b == null) dart.nullFailed(I[16], 1837, 28, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setImovelStart"});
        try {
          return super.setImovelStart(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setImovelDescricao(s) {
        if (s == null) dart.nullFailed(I[16], 1848, 34, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setImovelDescricao"});
        try {
          return super.setImovelDescricao(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setImovelTipo(s) {
        if (s == null) dart.nullFailed(I[16], 1859, 29, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setImovelTipo"});
        try {
          return super.setImovelTipo(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonIniciarCapturaImovel(T) {
        if (T == null) dart.nullFailed(I[16], 1870, 45, "T");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonIniciarCapturaImovel"});
        try {
          return super.setButtonIniciarCapturaImovel(T);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearImovelGeoPointsData() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearImovelGeoPointsData"});
        try {
          return super.clearImovelGeoPointsData();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addImovelGeoPointList(i) {
        if (i == null) dart.nullFailed(I[16], 1892, 45, "i");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addImovelGeoPointList"});
        try {
          return super.addImovelGeoPointList(i);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearImovelGeoPointList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearImovelGeoPointList"});
        try {
          return super.clearImovelGeoPointList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addImovelGeoPointAsyncList(i) {
        if (i == null) dart.nullFailed(I[16], 1914, 50, "i");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addImovelGeoPointAsyncList"});
        try {
          return super.addImovelGeoPointAsyncList(i);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearImovelGeoPointAsyncList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearImovelGeoPointAsyncList"});
        try {
          return super.clearImovelGeoPointAsyncList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPonteStart(b) {
        if (b == null) dart.nullFailed(I[16], 1936, 27, "b");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPonteStart"});
        try {
          return super.setPonteStart(b);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setButtonIniciarCapturaPonte(T) {
        if (T == null) dart.nullFailed(I[16], 1947, 44, "T");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setButtonIniciarCapturaPonte"});
        try {
          return super.setButtonIniciarCapturaPonte(T);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPonteDescricao(s) {
        if (s == null) dart.nullFailed(I[16], 1958, 33, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPonteDescricao"});
        try {
          return super.setPonteDescricao(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPonteEstadoConservacao(s) {
        if (s == null) dart.nullFailed(I[16], 1969, 41, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPonteEstadoConservacao"});
        try {
          return super.setPonteEstadoConservacao(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPonteMaterial(s) {
        if (s == null) dart.nullFailed(I[16], 1980, 32, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPonteMaterial"});
        try {
          return super.setPonteMaterial(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPonteExtensaoAproximada(s) {
        if (s == null) dart.nullFailed(I[16], 1991, 42, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPonteExtensaoAproximada"});
        try {
          return super.setPonteExtensaoAproximada(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setPonteRioRiacho(s) {
        if (s == null) dart.nullFailed(I[16], 2002, 33, "s");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setPonteRioRiacho"});
        try {
          return super.setPonteRioRiacho(s);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addPonteList(p) {
        if (p == null) dart.nullFailed(I[16], 2013, 32, "p");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addPonteList"});
        try {
          return super.addPonteList(p);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearPonteList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearPonteList"});
        try {
          return super.clearPonteList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addPonteAsyncList(p) {
        if (p == null) dart.nullFailed(I[16], 2035, 37, "p");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addPonteAsyncList"});
        try {
          return super.addPonteAsyncList(p);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearPonteAsyncList() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearPonteAsyncList"});
        try {
          return super.clearPonteAsyncList();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addPonteImagesList(o) {
        if (o == null) dart.nullFailed(I[16], 2057, 34, "o");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addPonteImagesList"});
        try {
          return super.addPonteImagesList(o);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      addPonteImageLastPosition() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.addPonteImageLastPosition"});
        try {
          return super.addPonteImageLastPosition();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      removePonteBlankImages() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.removePonteBlankImages"});
        try {
          return super.removePonteBlankImages();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      clearPonteImages() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.clearPonteImages"});
        try {
          return super.clearPonteImages();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      setSelectedPonteImage(p) {
        if (p == null) dart.nullFailed(I[16], 2101, 41, "p");
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.setSelectedPonteImage"});
        try {
          return super.setSelectedPonteImage(p);
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      fullDataClear() {
        let _$36actionInfo = this[_$_LoginDataStoreActionController].startAction({name: "_LoginDataStore.fullDataClear"});
        try {
          return super.fullDataClear();
        } finally {
          this[_$_LoginDataStoreActionController].endAction(_$36actionInfo);
        }
      }
      toString() {
        return "m: " + dart.str(this.m) + ",\nu: " + dart.str(this.u) + ",\nloggedIn: " + dart.str(this.loggedIn) + ",\nmunicipioSelectorEnabled: " + dart.str(this.municipioSelectorEnabled) + ",\nstatusBarHeight: " + dart.str(this.statusBarHeight) + ",\ntipo_ponto: " + dart.str(this.tipo_ponto) + ",\nidentificacao: " + dart.str(this.identificacao) + ",\nuserPosition: " + dart.str(this.userPosition) + ",\noldUserPosition: " + dart.str(this.oldUserPosition) + ",\ncolorStateValue: " + dart.str(this.colorStateValue) + ",\nverticeActualValue: " + dart.str(this.verticeActualValue) + ",\ncolected: " + dart.str(this.colected) + ",\nallSincronized: " + dart.str(this.allSincronized) + ",\nmarkers_visible: " + dart.str(this.markers_visible) + ",\nimovel: " + dart.str(this.imovel) + ",\ngeoJsonFileName: " + dart.str(this.geoJsonFileName) + ",\njavaScriptFileName: " + dart.str(this.javaScriptFileName) + ",\npathHtml: " + dart.str(this.pathHtml) + ",\nmapLoading: " + dart.str(this.mapLoading) + ",\nbuttonsVisibility: " + dart.str(this.buttonsVisibility) + ",\nbuttonIniciarNavegacaoVisibility: " + dart.str(this.buttonIniciarNavegacaoVisibility) + ",\nbuttonIniciarNavegacaoText: " + dart.str(this.buttonIniciarNavegacaoText) + ",\nnavigationHeading: " + dart.str(this.navigationHeading) + ",\nroutePath: " + dart.str(this.routePath) + ",\nselectedImovelRoute: " + dart.str(this.selectedImovelRoute) + ",\nselectedLevantamento: " + dart.str(this.selectedLevantamento) + ",\nrouteDone: " + dart.str(this.routeDone) + ",\nlevantamentoDescricao: " + dart.str(this.levantamentoDescricao) + ",\nestradaDescricao: " + dart.str(this.estradaDescricao) + ",\nestradaEstadoDeConservacao: " + dart.str(this.estradaEstadoDeConservacao) + ",\nestradaTipoDePavimentacao: " + dart.str(this.estradaTipoDePavimentacao) + ",\nestradaLarguraAproximada: " + dart.str(this.estradaLarguraAproximada) + ",\nestradaStart: " + dart.str(this.estradaStart) + ",\nestradaPointTimer: " + dart.str(this.estradaPointTimer) + ",\nlastEstradaPoint: " + dart.str(this.lastEstradaPoint) + ",\nbuttonIniciarCapturaEstradaText: " + dart.str(this.buttonIniciarCapturaEstradaText) + ",\nrotaEscolarDescricao: " + dart.str(this.rotaEscolarDescricao) + ",\nrotaEscolarEstadoDeConservacao: " + dart.str(this.rotaEscolarEstadoDeConservacao) + ",\nrotaEscolarTipoDePavimentacao: " + dart.str(this.rotaEscolarTipoDePavimentacao) + ",\nrotaEscolarLarguraAproximada: " + dart.str(this.rotaEscolarLarguraAproximada) + ",\nrotaEscolarStart: " + dart.str(this.rotaEscolarStart) + ",\nrotaEscolarPointTimer: " + dart.str(this.rotaEscolarPointTimer) + ",\nlastRotaEscolarPoint: " + dart.str(this.lastRotaEscolarPoint) + ",\nbuttonIniciarCapturaRotaEscolarText: " + dart.str(this.buttonIniciarCapturaRotaEscolarText) + ",\nimovelGeoPointDescricao: " + dart.str(this.imovelGeoPointDescricao) + ",\nimovelGeoPointTipo: " + dart.str(this.imovelGeoPointTipo) + ",\nimovelGeoPointStart: " + dart.str(this.imovelGeoPointStart) + ",\nbuttonIniciarCapturaImovelText: " + dart.str(this.buttonIniciarCapturaImovelText) + ",\nponteDescricao: " + dart.str(this.ponteDescricao) + ",\nponteEstadoConservacao: " + dart.str(this.ponteEstadoConservacao) + ",\nponteMaterial: " + dart.str(this.ponteMaterial) + ",\nponteExtensaoAproximada: " + dart.str(this.ponteExtensaoAproximada) + ",\nponteRioRiacho: " + dart.str(this.ponteRioRiacho) + ",\nponteStart: " + dart.str(this.ponteStart) + ",\nbuttonIniciarCapturaPonteText: " + dart.str(this.buttonIniciarCapturaPonteText) + ",\nselectedPonteImage: " + dart.str(this.selectedPonteImage) + ",\nisColected: " + dart.str(this.isColected) + ",\nisCidadeValid: " + dart.str(this.isCidadeValid) + ",\ntipoSelected: " + dart.str(this.tipoSelected) + ",\nisIdentValid: " + dart.str(this.isIdentValid) + ",\nisColorFinished: " + dart.str(this.isColorFinished) + ",\nisTipoVertice: " + dart.str(this.isTipoVertice) + ",\nisAllSincronized: " + dart.str(this.isAllSincronized) + ",\nisMarkerVisible: " + dart.str(this.isMarkerVisible) + ",\nisImovelUsing: " + dart.str(this.isImovelUsing) + ",\nisMapLoading: " + dart.str(this.isMapLoading) + ",\nisButtonsVisible: " + dart.str(this.isButtonsVisible) + ",\nisButtonIniciarNavegacaoVisible: " + dart.str(this.isButtonIniciarNavegacaoVisible) + ",\nisNavigationStarted: " + dart.str(this.isNavigationStarted) + ",\nisNavigationStartedWithoutCompass: " + dart.str(this.isNavigationStartedWithoutCompass) + ",\nhasSelectedRoute: " + dart.str(this.hasSelectedRoute) + ",\nisRouteDone: " + dart.str(this.isRouteDone) + ",\nisLevantamentoFormValid: " + dart.str(this.isLevantamentoFormValid) + ",\nisLevantamentoSincronizado: " + dart.str(this.isLevantamentoSincronizado) + ",\nisEstradaFormValid: " + dart.str(this.isEstradaFormValid) + ",\nisEstradaStarted: " + dart.str(this.isEstradaStarted) + ",\nisEstradaCaptureStarted: " + dart.str(this.isEstradaCaptureStarted) + ",\nisRotaEscolarFormValid: " + dart.str(this.isRotaEscolarFormValid) + ",\nisRotaEscolarStarted: " + dart.str(this.isRotaEscolarStarted) + ",\nisRotaEscolarCaptureStarted: " + dart.str(this.isRotaEscolarCaptureStarted) + ",\nisGeoPointFormValid: " + dart.str(this.isGeoPointFormValid) + ",\nisImovelStarted: " + dart.str(this.isImovelStarted) + ",\nisImovelCaptureStarted: " + dart.str(this.isImovelCaptureStarted) + ",\nisPonteFormValid: " + dart.str(this.isPonteFormValid) + ",\nisPonteStarted: " + dart.str(this.isPonteStarted) + ",\nisPonteCaptureStarted: " + dart.str(this.isPonteCaptureStarted) + "\n    ";
      }
    }
    dart.defineExtensionMethods(_$36LoginDataStore, ['toString']);
    return _$36LoginDataStore;
  };
  (login_data_store._$LoginDataStore[dart.mixinNew] = function() {
    this[_$36isColectedComputed] = null;
    this[_$36isCidadeValidComputed] = null;
    this[_$36tipoSelectedComputed] = null;
    this[_$36isIdentValidComputed] = null;
    this[_$36isColorFinishedComputed] = null;
    this[_$36isTipoVerticeComputed] = null;
    this[_$36isAllSincronizedComputed] = null;
    this[_$36isMarkerVisibleComputed] = null;
    this[_$36isImovelUsingComputed] = null;
    this[_$36isMapLoadingComputed] = null;
    this[_$36isButtonsVisibleComputed] = null;
    this[_$36isButtonIniciarNavegacaoVisibleComputed] = null;
    this[_$36isNavigationStartedComputed] = null;
    this[_$36isNavigationStartedWithoutCompassComputed] = null;
    this[_$36hasSelectedRouteComputed] = null;
    this[_$36isRouteDoneComputed] = null;
    this[_$36isLevantamentoFormValidComputed] = null;
    this[_$36isLevantamentoSincronizadoComputed] = null;
    this[_$36isEstradaFormValidComputed] = null;
    this[_$36isEstradaStartedComputed] = null;
    this[_$36isEstradaCaptureStartedComputed] = null;
    this[_$36isRotaEscolarFormValidComputed] = null;
    this[_$36isRotaEscolarStartedComputed] = null;
    this[_$36isRotaEscolarCaptureStartedComputed] = null;
    this[_$36isGeoPointFormValidComputed] = null;
    this[_$36isImovelStartedComputed] = null;
    this[_$36isImovelCaptureStartedComputed] = null;
    this[_$36isPonteFormValidComputed] = null;
    this[_$36isPonteStartedComputed] = null;
    this[_$36isPonteCaptureStartedComputed] = null;
    this[_$36mAtom] = core$.Atom.new({name: "_LoginDataStore.m"});
    this[_$36uAtom] = core$.Atom.new({name: "_LoginDataStore.u"});
    this[_$36loggedInAtom] = core$.Atom.new({name: "_LoginDataStore.loggedIn"});
    this[_$36municipioSelectorEnabledAtom] = core$.Atom.new({name: "_LoginDataStore.municipioSelectorEnabled"});
    this[_$36statusBarHeightAtom] = core$.Atom.new({name: "_LoginDataStore.statusBarHeight"});
    this[_$36tipo_pontoAtom] = core$.Atom.new({name: "_LoginDataStore.tipo_ponto"});
    this[_$36identificacaoAtom] = core$.Atom.new({name: "_LoginDataStore.identificacao"});
    this[_$36userPositionAtom] = core$.Atom.new({name: "_LoginDataStore.userPosition"});
    this[_$36oldUserPositionAtom] = core$.Atom.new({name: "_LoginDataStore.oldUserPosition"});
    this[_$36colorStateValueAtom] = core$.Atom.new({name: "_LoginDataStore.colorStateValue"});
    this[_$36verticeActualValueAtom] = core$.Atom.new({name: "_LoginDataStore.verticeActualValue"});
    this[_$36colectedAtom] = core$.Atom.new({name: "_LoginDataStore.colected"});
    this[_$36allSincronizedAtom] = core$.Atom.new({name: "_LoginDataStore.allSincronized"});
    this[_$36markers_visibleAtom] = core$.Atom.new({name: "_LoginDataStore.markers_visible"});
    this[_$36imovelAtom] = core$.Atom.new({name: "_LoginDataStore.imovel"});
    this[_$36geoJsonFileNameAtom] = core$.Atom.new({name: "_LoginDataStore.geoJsonFileName"});
    this[_$36javaScriptFileNameAtom] = core$.Atom.new({name: "_LoginDataStore.javaScriptFileName"});
    this[_$36pathHtmlAtom] = core$.Atom.new({name: "_LoginDataStore.pathHtml"});
    this[_$36mapLoadingAtom] = core$.Atom.new({name: "_LoginDataStore.mapLoading"});
    this[_$36buttonsVisibilityAtom] = core$.Atom.new({name: "_LoginDataStore.buttonsVisibility"});
    this[_$36buttonIniciarNavegacaoVisibilityAtom] = core$.Atom.new({name: "_LoginDataStore.buttonIniciarNavegacaoVisibility"});
    this[_$36buttonIniciarNavegacaoTextAtom] = core$.Atom.new({name: "_LoginDataStore.buttonIniciarNavegacaoText"});
    this[_$36navigationHeadingAtom] = core$.Atom.new({name: "_LoginDataStore.navigationHeading"});
    this[_$36routePathAtom] = core$.Atom.new({name: "_LoginDataStore.routePath"});
    this[_$36selectedImovelRouteAtom] = core$.Atom.new({name: "_LoginDataStore.selectedImovelRoute"});
    this[_$36selectedLevantamentoAtom] = core$.Atom.new({name: "_LoginDataStore.selectedLevantamento"});
    this[_$36routeDoneAtom] = core$.Atom.new({name: "_LoginDataStore.routeDone"});
    this[_$36levantamentoDescricaoAtom] = core$.Atom.new({name: "_LoginDataStore.levantamentoDescricao"});
    this[_$36estradaDescricaoAtom] = core$.Atom.new({name: "_LoginDataStore.estradaDescricao"});
    this[_$36estradaEstadoDeConservacaoAtom] = core$.Atom.new({name: "_LoginDataStore.estradaEstadoDeConservacao"});
    this[_$36estradaTipoDePavimentacaoAtom] = core$.Atom.new({name: "_LoginDataStore.estradaTipoDePavimentacao"});
    this[_$36estradaLarguraAproximadaAtom] = core$.Atom.new({name: "_LoginDataStore.estradaLarguraAproximada"});
    this[_$36estradaStartAtom] = core$.Atom.new({name: "_LoginDataStore.estradaStart"});
    this[_$36estradaPointTimerAtom] = core$.Atom.new({name: "_LoginDataStore.estradaPointTimer"});
    this[_$36lastEstradaPointAtom] = core$.Atom.new({name: "_LoginDataStore.lastEstradaPoint"});
    this[_$36buttonIniciarCapturaEstradaTextAtom] = core$.Atom.new({name: "_LoginDataStore.buttonIniciarCapturaEstradaText"});
    this[_$36rotaEscolarDescricaoAtom] = core$.Atom.new({name: "_LoginDataStore.rotaEscolarDescricao"});
    this[_$36rotaEscolarEstadoDeConservacaoAtom] = core$.Atom.new({name: "_LoginDataStore.rotaEscolarEstadoDeConservacao"});
    this[_$36rotaEscolarTipoDePavimentacaoAtom] = core$.Atom.new({name: "_LoginDataStore.rotaEscolarTipoDePavimentacao"});
    this[_$36rotaEscolarLarguraAproximadaAtom] = core$.Atom.new({name: "_LoginDataStore.rotaEscolarLarguraAproximada"});
    this[_$36rotaEscolarStartAtom] = core$.Atom.new({name: "_LoginDataStore.rotaEscolarStart"});
    this[_$36rotaEscolarPointTimerAtom] = core$.Atom.new({name: "_LoginDataStore.rotaEscolarPointTimer"});
    this[_$36lastRotaEscolarPointAtom] = core$.Atom.new({name: "_LoginDataStore.lastRotaEscolarPoint"});
    this[_$36buttonIniciarCapturaRotaEscolarTextAtom] = core$.Atom.new({name: "_LoginDataStore.buttonIniciarCapturaRotaEscolarText"});
    this[_$36imovelGeoPointDescricaoAtom] = core$.Atom.new({name: "_LoginDataStore.imovelGeoPointDescricao"});
    this[_$36imovelGeoPointTipoAtom] = core$.Atom.new({name: "_LoginDataStore.imovelGeoPointTipo"});
    this[_$36imovelGeoPointStartAtom] = core$.Atom.new({name: "_LoginDataStore.imovelGeoPointStart"});
    this[_$36buttonIniciarCapturaImovelTextAtom] = core$.Atom.new({name: "_LoginDataStore.buttonIniciarCapturaImovelText"});
    this[_$36ponteDescricaoAtom] = core$.Atom.new({name: "_LoginDataStore.ponteDescricao"});
    this[_$36ponteEstadoConservacaoAtom] = core$.Atom.new({name: "_LoginDataStore.ponteEstadoConservacao"});
    this[_$36ponteMaterialAtom] = core$.Atom.new({name: "_LoginDataStore.ponteMaterial"});
    this[_$36ponteExtensaoAproximadaAtom] = core$.Atom.new({name: "_LoginDataStore.ponteExtensaoAproximada"});
    this[_$36ponteRioRiachoAtom] = core$.Atom.new({name: "_LoginDataStore.ponteRioRiacho"});
    this[_$36ponteStartAtom] = core$.Atom.new({name: "_LoginDataStore.ponteStart"});
    this[_$36buttonIniciarCapturaPonteTextAtom] = core$.Atom.new({name: "_LoginDataStore.buttonIniciarCapturaPonteText"});
    this[_$36selectedPonteImageAtom] = core$.Atom.new({name: "_LoginDataStore.selectedPonteImage"});
    this[_$36_LoginDataStoreActionController] = new core$.ActionController.new({name: "_LoginDataStore"});
  }).prototype = login_data_store._$LoginDataStore.prototype;
  dart.addTypeTests(login_data_store._$LoginDataStore);
  dart.addTypeCaches(login_data_store._$LoginDataStore);
  login_data_store._$LoginDataStore[dart.implements] = () => [store.Store, login_data_store._LoginDataStore];
  dart.setMethodSignature(login_data_store._$LoginDataStore, () => ({
    __proto__: dart.getMethods(login_data_store._$LoginDataStore.__proto__),
    setMunicipio: dart.fnType(dart.void, [municipio.Municipio]),
    setUser: dart.fnType(dart.void, [user$.User]),
    login: dart.fnType(dart.void, []),
    logout: dart.fnType(dart.void, []),
    setStatusBarHeight: dart.fnType(dart.void, [core.double]),
    setTipo: dart.fnType(dart.void, [core.int]),
    setIdent: dart.fnType(dart.void, [core.String]),
    setUserPosition: dart.fnType(dart.void, [position.Position]),
    setColorStateValue: dart.fnType(dart.void, [core.int]),
    setVerticeActualValue: dart.fnType(dart.void, [core.int]),
    setCollected: dart.fnType(dart.void, [core.bool]),
    setAllSincronized: dart.fnType(dart.void, [core.bool]),
    toggleMarkers: dart.fnType(dart.void, []),
    setMarkersVisibility: dart.fnType(dart.void, [core.bool]),
    setImovel: dart.fnType(dart.void, [imovel$.Imovel]),
    setGeoJsonFileName: dart.fnType(dart.void, [core.String]),
    setJavaScriptFileName: dart.fnType(dart.void, [core.String]),
    setPathHtml: dart.fnType(dart.void, [core.String]),
    setMapLoading: dart.fnType(dart.void, [core.bool]),
    setButtonsVisibility: dart.fnType(dart.void, [core.bool]),
    setButtonIniciarNavegacaoVisibility: dart.fnType(dart.void, [core.bool]),
    setButtonIniciarNavegacaoText: dart.fnType(dart.void, [core.String]),
    setNavigationHeading: dart.fnType(dart.void, [core.double]),
    addMunicipioList: dart.fnType(dart.void, [municipio.Municipio]),
    clearMunicipioList: dart.fnType(dart.void, []),
    setRoutPath: dart.fnType(dart.void, [latlong.Path$(latlong.LatLng)]),
    addImovelRoute: dart.fnType(dart.void, [ImovelRoute.ImovelRoute]),
    clearImovelRoute: dart.fnType(dart.void, []),
    addLatLngRoute: dart.fnType(dart.void, [latlong.LatLng]),
    clearLatLngRoute: dart.fnType(dart.void, []),
    setSelectedImovelRoute: dart.fnType(dart.void, [ImovelRoute.ImovelRoute]),
    setSelectedLevantamento: dart.fnType(dart.void, [Levantamento.Levantamento]),
    setRouteDone: dart.fnType(dart.void, [core.bool]),
    clearButtons: dart.fnType(dart.void, []),
    setLevantamentoDescricao: dart.fnType(dart.void, [core.String]),
    addLevantamentosList: dart.fnType(dart.void, [Levantamento.Levantamento]),
    clearLevantamentosList: dart.fnType(dart.void, []),
    addLevantamentosAsyncList: dart.fnType(dart.void, [Levantamento.Levantamento]),
    clearLevantamentosAsyncList: dart.fnType(dart.void, []),
    setEstradaDescricao: dart.fnType(dart.void, [core.String]),
    setEstradaConservacao: dart.fnType(dart.void, [core.String]),
    setEstradaPavimentacao: dart.fnType(dart.void, [core.String]),
    setEstradaLargura: dart.fnType(dart.void, [core.String]),
    setEstradaStart: dart.fnType(dart.void, [core.bool]),
    setEstradaPointTimer: dart.fnType(dart.void, [core.String]),
    setLastEstradaPoint: dart.fnType(dart.void, [location.LatLng]),
    setButtonIniciarCapturaEstrada: dart.fnType(dart.void, [core.String]),
    clearEstradaData: dart.fnType(dart.void, []),
    addEstradaPointList: dart.fnType(dart.void, [EstradaPoint.EstradaPoint]),
    clearEstradaPointList: dart.fnType(dart.void, []),
    addEstradaPointAsyncList: dart.fnType(dart.void, [EstradaPoint.EstradaPoint]),
    clearEstradaPointAsyncList: dart.fnType(dart.void, []),
    setRotaEscolarDescricao: dart.fnType(dart.void, [core.String]),
    setRotaEscolarConservacao: dart.fnType(dart.void, [core.String]),
    setRotaEscolarPavimentacao: dart.fnType(dart.void, [core.String]),
    setRotaEscolarLargura: dart.fnType(dart.void, [core.String]),
    setRotaEscolarStart: dart.fnType(dart.void, [core.bool]),
    setRotaEscolarPointTimer: dart.fnType(dart.void, [core.String]),
    setLastRotaEscolarPoint: dart.fnType(dart.void, [location.LatLng]),
    setButtonIniciarCapturaRotaEscolar: dart.fnType(dart.void, [core.String]),
    clearRotaEscolarData: dart.fnType(dart.void, []),
    addRotaEscolarPointList: dart.fnType(dart.void, [RotaEscolarPoint.RotaEscolarPoint]),
    clearRotaEscolarPointList: dart.fnType(dart.void, []),
    addRotaEscolarPointAsyncList: dart.fnType(dart.void, [RotaEscolarPoint.RotaEscolarPoint]),
    clearRotaEscolarPointAsyncList: dart.fnType(dart.void, []),
    setImovelStart: dart.fnType(dart.void, [core.bool]),
    setImovelDescricao: dart.fnType(dart.void, [core.String]),
    setImovelTipo: dart.fnType(dart.void, [core.String]),
    setButtonIniciarCapturaImovel: dart.fnType(dart.void, [core.String]),
    clearImovelGeoPointsData: dart.fnType(dart.void, []),
    addImovelGeoPointList: dart.fnType(dart.void, [ImovelGeoPoint.ImovelGeoPoint]),
    clearImovelGeoPointList: dart.fnType(dart.void, []),
    addImovelGeoPointAsyncList: dart.fnType(dart.void, [ImovelGeoPoint.ImovelGeoPoint]),
    clearImovelGeoPointAsyncList: dart.fnType(dart.void, []),
    setPonteStart: dart.fnType(dart.void, [core.bool]),
    setButtonIniciarCapturaPonte: dart.fnType(dart.void, [core.String]),
    setPonteDescricao: dart.fnType(dart.void, [core.String]),
    setPonteEstadoConservacao: dart.fnType(dart.void, [core.String]),
    setPonteMaterial: dart.fnType(dart.void, [core.String]),
    setPonteExtensaoAproximada: dart.fnType(dart.void, [core.String]),
    setPonteRioRiacho: dart.fnType(dart.void, [core.String]),
    addPonteList: dart.fnType(dart.void, [PontePoint.PontePoint]),
    clearPonteList: dart.fnType(dart.void, []),
    addPonteAsyncList: dart.fnType(dart.void, [PontePoint.PontePoint]),
    clearPonteAsyncList: dart.fnType(dart.void, []),
    addPonteImagesList: dart.fnType(dart.void, [core.Object]),
    addPonteImageLastPosition: dart.fnType(dart.void, []),
    removePonteBlankImages: dart.fnType(dart.void, []),
    clearPonteImages: dart.fnType(dart.void, []),
    setSelectedPonteImage: dart.fnType(dart.void, [PontePoint.PonteImage]),
    fullDataClear: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(login_data_store._$LoginDataStore, () => ({
    __proto__: dart.getGetters(login_data_store._$LoginDataStore.__proto__),
    isColected: core.bool,
    isCidadeValid: core.bool,
    tipoSelected: core.int,
    isIdentValid: core.bool,
    isColorFinished: core.bool,
    isTipoVertice: core.bool,
    isAllSincronized: core.bool,
    isMarkerVisible: core.bool,
    isImovelUsing: core.bool,
    isMapLoading: core.bool,
    isButtonsVisible: core.bool,
    isButtonIniciarNavegacaoVisible: core.bool,
    isNavigationStarted: core.bool,
    isNavigationStartedWithoutCompass: core.bool,
    hasSelectedRoute: core.bool,
    isRouteDone: core.bool,
    isLevantamentoFormValid: core.bool,
    isLevantamentoSincronizado: core.bool,
    isEstradaFormValid: core.bool,
    isEstradaStarted: core.bool,
    isEstradaCaptureStarted: core.bool,
    isRotaEscolarFormValid: core.bool,
    isRotaEscolarStarted: core.bool,
    isRotaEscolarCaptureStarted: core.bool,
    isGeoPointFormValid: core.bool,
    isImovelStarted: core.bool,
    isImovelCaptureStarted: core.bool,
    isPonteFormValid: core.bool,
    isPonteStarted: core.bool,
    isPonteCaptureStarted: core.bool,
    m: municipio.Municipio,
    u: user$.User,
    loggedIn: core.bool,
    municipioSelectorEnabled: core.bool,
    statusBarHeight: core.double,
    tipo_ponto: core.int,
    identificacao: core.String,
    userPosition: dart.nullable(position.Position),
    oldUserPosition: dart.nullable(position.Position),
    colorStateValue: core.int,
    verticeActualValue: core.int,
    colected: core.bool,
    allSincronized: core.bool,
    markers_visible: core.bool,
    imovel: imovel$.Imovel,
    geoJsonFileName: core.String,
    javaScriptFileName: core.String,
    pathHtml: core.String,
    mapLoading: core.bool,
    buttonsVisibility: core.bool,
    buttonIniciarNavegacaoVisibility: core.bool,
    buttonIniciarNavegacaoText: core.String,
    navigationHeading: core.double,
    routePath: latlong.Path$(latlong.LatLng),
    selectedImovelRoute: ImovelRoute.ImovelRoute,
    selectedLevantamento: Levantamento.Levantamento,
    routeDone: core.bool,
    levantamentoDescricao: core.String,
    estradaDescricao: core.String,
    estradaEstadoDeConservacao: core.String,
    estradaTipoDePavimentacao: core.String,
    estradaLarguraAproximada: core.String,
    estradaStart: core.bool,
    estradaPointTimer: core.String,
    lastEstradaPoint: location.LatLng,
    buttonIniciarCapturaEstradaText: core.String,
    rotaEscolarDescricao: core.String,
    rotaEscolarEstadoDeConservacao: core.String,
    rotaEscolarTipoDePavimentacao: core.String,
    rotaEscolarLarguraAproximada: core.String,
    rotaEscolarStart: core.bool,
    rotaEscolarPointTimer: core.String,
    lastRotaEscolarPoint: location.LatLng,
    buttonIniciarCapturaRotaEscolarText: core.String,
    imovelGeoPointDescricao: core.String,
    imovelGeoPointTipo: core.String,
    imovelGeoPointStart: core.bool,
    buttonIniciarCapturaImovelText: core.String,
    ponteDescricao: core.String,
    ponteEstadoConservacao: core.String,
    ponteMaterial: core.String,
    ponteExtensaoAproximada: core.String,
    ponteRioRiacho: core.String,
    ponteStart: core.bool,
    buttonIniciarCapturaPonteText: core.String,
    selectedPonteImage: dart.nullable(PontePoint.PonteImage)
  }));
  dart.setSetterSignature(login_data_store._$LoginDataStore, () => ({
    __proto__: dart.getSetters(login_data_store._$LoginDataStore.__proto__),
    m: municipio.Municipio,
    u: user$.User,
    loggedIn: core.bool,
    municipioSelectorEnabled: core.bool,
    statusBarHeight: core.double,
    tipo_ponto: core.int,
    identificacao: core.String,
    userPosition: dart.nullable(position.Position),
    oldUserPosition: dart.nullable(position.Position),
    colorStateValue: core.int,
    verticeActualValue: core.int,
    colected: core.bool,
    allSincronized: core.bool,
    markers_visible: core.bool,
    imovel: imovel$.Imovel,
    geoJsonFileName: core.String,
    javaScriptFileName: core.String,
    pathHtml: core.String,
    mapLoading: core.bool,
    buttonsVisibility: core.bool,
    buttonIniciarNavegacaoVisibility: core.bool,
    buttonIniciarNavegacaoText: core.String,
    navigationHeading: core.double,
    routePath: latlong.Path$(latlong.LatLng),
    selectedImovelRoute: ImovelRoute.ImovelRoute,
    selectedLevantamento: Levantamento.Levantamento,
    routeDone: core.bool,
    levantamentoDescricao: core.String,
    estradaDescricao: core.String,
    estradaEstadoDeConservacao: core.String,
    estradaTipoDePavimentacao: core.String,
    estradaLarguraAproximada: core.String,
    estradaStart: core.bool,
    estradaPointTimer: core.String,
    lastEstradaPoint: location.LatLng,
    buttonIniciarCapturaEstradaText: core.String,
    rotaEscolarDescricao: core.String,
    rotaEscolarEstadoDeConservacao: core.String,
    rotaEscolarTipoDePavimentacao: core.String,
    rotaEscolarLarguraAproximada: core.String,
    rotaEscolarStart: core.bool,
    rotaEscolarPointTimer: core.String,
    lastRotaEscolarPoint: location.LatLng,
    buttonIniciarCapturaRotaEscolarText: core.String,
    imovelGeoPointDescricao: core.String,
    imovelGeoPointTipo: core.String,
    imovelGeoPointStart: core.bool,
    buttonIniciarCapturaImovelText: core.String,
    ponteDescricao: core.String,
    ponteEstadoConservacao: core.String,
    ponteMaterial: core.String,
    ponteExtensaoAproximada: core.String,
    ponteRioRiacho: core.String,
    ponteStart: core.bool,
    buttonIniciarCapturaPonteText: core.String,
    selectedPonteImage: dart.nullable(PontePoint.PonteImage)
  }));
  dart.setLibraryUri(login_data_store._$LoginDataStore, I[15]);
  dart.setFieldSignature(login_data_store._$LoginDataStore, () => ({
    __proto__: dart.getFields(login_data_store._$LoginDataStore.__proto__),
    [_$isColectedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isCidadeValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$tipoSelectedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.int))),
    [_$isIdentValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isColorFinishedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isTipoVerticeComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isAllSincronizedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isMarkerVisibleComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isImovelUsingComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isMapLoadingComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isButtonsVisibleComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isButtonIniciarNavegacaoVisibleComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isNavigationStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isNavigationStartedWithoutCompassComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$hasSelectedRouteComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isRouteDoneComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isLevantamentoFormValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isLevantamentoSincronizadoComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isEstradaFormValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isEstradaStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isEstradaCaptureStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isRotaEscolarFormValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isRotaEscolarStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isRotaEscolarCaptureStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isGeoPointFormValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isImovelStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isImovelCaptureStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isPonteFormValidComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isPonteStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$isPonteCaptureStartedComputed]: dart.fieldType(dart.nullable(core$.Computed$(core.bool))),
    [_$mAtom]: dart.finalFieldType(core$.Atom),
    [_$uAtom]: dart.finalFieldType(core$.Atom),
    [_$loggedInAtom]: dart.finalFieldType(core$.Atom),
    [_$municipioSelectorEnabledAtom]: dart.finalFieldType(core$.Atom),
    [_$statusBarHeightAtom]: dart.finalFieldType(core$.Atom),
    [_$tipo_pontoAtom]: dart.finalFieldType(core$.Atom),
    [_$identificacaoAtom]: dart.finalFieldType(core$.Atom),
    [_$userPositionAtom]: dart.finalFieldType(core$.Atom),
    [_$oldUserPositionAtom]: dart.finalFieldType(core$.Atom),
    [_$colorStateValueAtom]: dart.finalFieldType(core$.Atom),
    [_$verticeActualValueAtom]: dart.finalFieldType(core$.Atom),
    [_$colectedAtom]: dart.finalFieldType(core$.Atom),
    [_$allSincronizedAtom]: dart.finalFieldType(core$.Atom),
    [_$markers_visibleAtom]: dart.finalFieldType(core$.Atom),
    [_$imovelAtom]: dart.finalFieldType(core$.Atom),
    [_$geoJsonFileNameAtom]: dart.finalFieldType(core$.Atom),
    [_$javaScriptFileNameAtom]: dart.finalFieldType(core$.Atom),
    [_$pathHtmlAtom]: dart.finalFieldType(core$.Atom),
    [_$mapLoadingAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonsVisibilityAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonIniciarNavegacaoVisibilityAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonIniciarNavegacaoTextAtom]: dart.finalFieldType(core$.Atom),
    [_$navigationHeadingAtom]: dart.finalFieldType(core$.Atom),
    [_$routePathAtom]: dart.finalFieldType(core$.Atom),
    [_$selectedImovelRouteAtom]: dart.finalFieldType(core$.Atom),
    [_$selectedLevantamentoAtom]: dart.finalFieldType(core$.Atom),
    [_$routeDoneAtom]: dart.finalFieldType(core$.Atom),
    [_$levantamentoDescricaoAtom]: dart.finalFieldType(core$.Atom),
    [_$estradaDescricaoAtom]: dart.finalFieldType(core$.Atom),
    [_$estradaEstadoDeConservacaoAtom]: dart.finalFieldType(core$.Atom),
    [_$estradaTipoDePavimentacaoAtom]: dart.finalFieldType(core$.Atom),
    [_$estradaLarguraAproximadaAtom]: dart.finalFieldType(core$.Atom),
    [_$estradaStartAtom]: dart.finalFieldType(core$.Atom),
    [_$estradaPointTimerAtom]: dart.finalFieldType(core$.Atom),
    [_$lastEstradaPointAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonIniciarCapturaEstradaTextAtom]: dart.finalFieldType(core$.Atom),
    [_$rotaEscolarDescricaoAtom]: dart.finalFieldType(core$.Atom),
    [_$rotaEscolarEstadoDeConservacaoAtom]: dart.finalFieldType(core$.Atom),
    [_$rotaEscolarTipoDePavimentacaoAtom]: dart.finalFieldType(core$.Atom),
    [_$rotaEscolarLarguraAproximadaAtom]: dart.finalFieldType(core$.Atom),
    [_$rotaEscolarStartAtom]: dart.finalFieldType(core$.Atom),
    [_$rotaEscolarPointTimerAtom]: dart.finalFieldType(core$.Atom),
    [_$lastRotaEscolarPointAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonIniciarCapturaRotaEscolarTextAtom]: dart.finalFieldType(core$.Atom),
    [_$imovelGeoPointDescricaoAtom]: dart.finalFieldType(core$.Atom),
    [_$imovelGeoPointTipoAtom]: dart.finalFieldType(core$.Atom),
    [_$imovelGeoPointStartAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonIniciarCapturaImovelTextAtom]: dart.finalFieldType(core$.Atom),
    [_$ponteDescricaoAtom]: dart.finalFieldType(core$.Atom),
    [_$ponteEstadoConservacaoAtom]: dart.finalFieldType(core$.Atom),
    [_$ponteMaterialAtom]: dart.finalFieldType(core$.Atom),
    [_$ponteExtensaoAproximadaAtom]: dart.finalFieldType(core$.Atom),
    [_$ponteRioRiachoAtom]: dart.finalFieldType(core$.Atom),
    [_$ponteStartAtom]: dart.finalFieldType(core$.Atom),
    [_$buttonIniciarCapturaPonteTextAtom]: dart.finalFieldType(core$.Atom),
    [_$selectedPonteImageAtom]: dart.finalFieldType(core$.Atom),
    [_$_LoginDataStoreActionController]: dart.finalFieldType(core$.ActionController)
  }));
  const _LoginDataStore__$36LoginDataStore$36 = class _LoginDataStore__$36LoginDataStore extends login_data_store._LoginDataStore {};
  (_LoginDataStore__$36LoginDataStore$36.new = function() {
    login_data_store._$LoginDataStore[dart.mixinNew].call(this);
    _LoginDataStore__$36LoginDataStore$36.__proto__.new.call(this);
  }).prototype = _LoginDataStore__$36LoginDataStore$36.prototype;
  dart.applyMixin(_LoginDataStore__$36LoginDataStore$36, login_data_store._$LoginDataStore);
  login_data_store.LoginDataStore = class LoginDataStore extends _LoginDataStore__$36LoginDataStore$36 {
    get [_$isColectedComputed]() {
      return super[_$isColectedComputed];
    }
    set [_$isColectedComputed](value) {
      return super[_$isColectedComputed] = value;
    }
    get [_$isCidadeValidComputed]() {
      return super[_$isCidadeValidComputed];
    }
    set [_$isCidadeValidComputed](value) {
      return super[_$isCidadeValidComputed] = value;
    }
    get [_$tipoSelectedComputed]() {
      return super[_$tipoSelectedComputed];
    }
    set [_$tipoSelectedComputed](value) {
      return super[_$tipoSelectedComputed] = value;
    }
    get [_$isIdentValidComputed]() {
      return super[_$isIdentValidComputed];
    }
    set [_$isIdentValidComputed](value) {
      return super[_$isIdentValidComputed] = value;
    }
    get [_$isColorFinishedComputed]() {
      return super[_$isColorFinishedComputed];
    }
    set [_$isColorFinishedComputed](value) {
      return super[_$isColorFinishedComputed] = value;
    }
    get [_$isTipoVerticeComputed]() {
      return super[_$isTipoVerticeComputed];
    }
    set [_$isTipoVerticeComputed](value) {
      return super[_$isTipoVerticeComputed] = value;
    }
    get [_$isAllSincronizedComputed]() {
      return super[_$isAllSincronizedComputed];
    }
    set [_$isAllSincronizedComputed](value) {
      return super[_$isAllSincronizedComputed] = value;
    }
    get [_$isMarkerVisibleComputed]() {
      return super[_$isMarkerVisibleComputed];
    }
    set [_$isMarkerVisibleComputed](value) {
      return super[_$isMarkerVisibleComputed] = value;
    }
    get [_$isImovelUsingComputed]() {
      return super[_$isImovelUsingComputed];
    }
    set [_$isImovelUsingComputed](value) {
      return super[_$isImovelUsingComputed] = value;
    }
    get [_$isMapLoadingComputed]() {
      return super[_$isMapLoadingComputed];
    }
    set [_$isMapLoadingComputed](value) {
      return super[_$isMapLoadingComputed] = value;
    }
    get [_$isButtonsVisibleComputed]() {
      return super[_$isButtonsVisibleComputed];
    }
    set [_$isButtonsVisibleComputed](value) {
      return super[_$isButtonsVisibleComputed] = value;
    }
    get [_$isButtonIniciarNavegacaoVisibleComputed]() {
      return super[_$isButtonIniciarNavegacaoVisibleComputed];
    }
    set [_$isButtonIniciarNavegacaoVisibleComputed](value) {
      return super[_$isButtonIniciarNavegacaoVisibleComputed] = value;
    }
    get [_$isNavigationStartedComputed]() {
      return super[_$isNavigationStartedComputed];
    }
    set [_$isNavigationStartedComputed](value) {
      return super[_$isNavigationStartedComputed] = value;
    }
    get [_$isNavigationStartedWithoutCompassComputed]() {
      return super[_$isNavigationStartedWithoutCompassComputed];
    }
    set [_$isNavigationStartedWithoutCompassComputed](value) {
      return super[_$isNavigationStartedWithoutCompassComputed] = value;
    }
    get [_$hasSelectedRouteComputed]() {
      return super[_$hasSelectedRouteComputed];
    }
    set [_$hasSelectedRouteComputed](value) {
      return super[_$hasSelectedRouteComputed] = value;
    }
    get [_$isRouteDoneComputed]() {
      return super[_$isRouteDoneComputed];
    }
    set [_$isRouteDoneComputed](value) {
      return super[_$isRouteDoneComputed] = value;
    }
    get [_$isLevantamentoFormValidComputed]() {
      return super[_$isLevantamentoFormValidComputed];
    }
    set [_$isLevantamentoFormValidComputed](value) {
      return super[_$isLevantamentoFormValidComputed] = value;
    }
    get [_$isLevantamentoSincronizadoComputed]() {
      return super[_$isLevantamentoSincronizadoComputed];
    }
    set [_$isLevantamentoSincronizadoComputed](value) {
      return super[_$isLevantamentoSincronizadoComputed] = value;
    }
    get [_$isEstradaFormValidComputed]() {
      return super[_$isEstradaFormValidComputed];
    }
    set [_$isEstradaFormValidComputed](value) {
      return super[_$isEstradaFormValidComputed] = value;
    }
    get [_$isEstradaStartedComputed]() {
      return super[_$isEstradaStartedComputed];
    }
    set [_$isEstradaStartedComputed](value) {
      return super[_$isEstradaStartedComputed] = value;
    }
    get [_$isEstradaCaptureStartedComputed]() {
      return super[_$isEstradaCaptureStartedComputed];
    }
    set [_$isEstradaCaptureStartedComputed](value) {
      return super[_$isEstradaCaptureStartedComputed] = value;
    }
    get [_$isRotaEscolarFormValidComputed]() {
      return super[_$isRotaEscolarFormValidComputed];
    }
    set [_$isRotaEscolarFormValidComputed](value) {
      return super[_$isRotaEscolarFormValidComputed] = value;
    }
    get [_$isRotaEscolarStartedComputed]() {
      return super[_$isRotaEscolarStartedComputed];
    }
    set [_$isRotaEscolarStartedComputed](value) {
      return super[_$isRotaEscolarStartedComputed] = value;
    }
    get [_$isRotaEscolarCaptureStartedComputed]() {
      return super[_$isRotaEscolarCaptureStartedComputed];
    }
    set [_$isRotaEscolarCaptureStartedComputed](value) {
      return super[_$isRotaEscolarCaptureStartedComputed] = value;
    }
    get [_$isGeoPointFormValidComputed]() {
      return super[_$isGeoPointFormValidComputed];
    }
    set [_$isGeoPointFormValidComputed](value) {
      return super[_$isGeoPointFormValidComputed] = value;
    }
    get [_$isImovelStartedComputed]() {
      return super[_$isImovelStartedComputed];
    }
    set [_$isImovelStartedComputed](value) {
      return super[_$isImovelStartedComputed] = value;
    }
    get [_$isImovelCaptureStartedComputed]() {
      return super[_$isImovelCaptureStartedComputed];
    }
    set [_$isImovelCaptureStartedComputed](value) {
      return super[_$isImovelCaptureStartedComputed] = value;
    }
    get [_$isPonteFormValidComputed]() {
      return super[_$isPonteFormValidComputed];
    }
    set [_$isPonteFormValidComputed](value) {
      return super[_$isPonteFormValidComputed] = value;
    }
    get [_$isPonteStartedComputed]() {
      return super[_$isPonteStartedComputed];
    }
    set [_$isPonteStartedComputed](value) {
      return super[_$isPonteStartedComputed] = value;
    }
    get [_$isPonteCaptureStartedComputed]() {
      return super[_$isPonteCaptureStartedComputed];
    }
    set [_$isPonteCaptureStartedComputed](value) {
      return super[_$isPonteCaptureStartedComputed] = value;
    }
    get m() {
      return super.m;
    }
    set m(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.m = value;
    }
    get u() {
      return super.u;
    }
    set u(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.u = value;
    }
    get loggedIn() {
      return super.loggedIn;
    }
    set loggedIn(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.loggedIn = value;
    }
    get municipioSelectorEnabled() {
      return super.municipioSelectorEnabled;
    }
    set municipioSelectorEnabled(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.municipioSelectorEnabled = value;
    }
    get statusBarHeight() {
      return super.statusBarHeight;
    }
    set statusBarHeight(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.statusBarHeight = value;
    }
    get tipo_ponto() {
      return super.tipo_ponto;
    }
    set tipo_ponto(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.tipo_ponto = value;
    }
    get identificacao() {
      return super.identificacao;
    }
    set identificacao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.identificacao = value;
    }
    get userPosition() {
      return super.userPosition;
    }
    set userPosition(value) {
      return super.userPosition = value;
    }
    get oldUserPosition() {
      return super.oldUserPosition;
    }
    set oldUserPosition(value) {
      return super.oldUserPosition = value;
    }
    get colorStateValue() {
      return super.colorStateValue;
    }
    set colorStateValue(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.colorStateValue = value;
    }
    get verticeActualValue() {
      return super.verticeActualValue;
    }
    set verticeActualValue(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.verticeActualValue = value;
    }
    get colected() {
      return super.colected;
    }
    set colected(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.colected = value;
    }
    get allSincronized() {
      return super.allSincronized;
    }
    set allSincronized(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.allSincronized = value;
    }
    get markers_visible() {
      return super.markers_visible;
    }
    set markers_visible(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.markers_visible = value;
    }
    get imovel() {
      return super.imovel;
    }
    set imovel(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.imovel = value;
    }
    get geoJsonFileName() {
      return super.geoJsonFileName;
    }
    set geoJsonFileName(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.geoJsonFileName = value;
    }
    get javaScriptFileName() {
      return super.javaScriptFileName;
    }
    set javaScriptFileName(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.javaScriptFileName = value;
    }
    get pathHtml() {
      return super.pathHtml;
    }
    set pathHtml(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.pathHtml = value;
    }
    get mapLoading() {
      return super.mapLoading;
    }
    set mapLoading(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.mapLoading = value;
    }
    get buttonsVisibility() {
      return super.buttonsVisibility;
    }
    set buttonsVisibility(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonsVisibility = value;
    }
    get buttonIniciarNavegacaoVisibility() {
      return super.buttonIniciarNavegacaoVisibility;
    }
    set buttonIniciarNavegacaoVisibility(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonIniciarNavegacaoVisibility = value;
    }
    get buttonIniciarNavegacaoText() {
      return super.buttonIniciarNavegacaoText;
    }
    set buttonIniciarNavegacaoText(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonIniciarNavegacaoText = value;
    }
    get navigationHeading() {
      return super.navigationHeading;
    }
    set navigationHeading(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.navigationHeading = value;
    }
    get routePath() {
      return super.routePath;
    }
    set routePath(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.routePath = value;
    }
    get selectedImovelRoute() {
      return super.selectedImovelRoute;
    }
    set selectedImovelRoute(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.selectedImovelRoute = value;
    }
    get selectedLevantamento() {
      return super.selectedLevantamento;
    }
    set selectedLevantamento(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.selectedLevantamento = value;
    }
    get routeDone() {
      return super.routeDone;
    }
    set routeDone(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.routeDone = value;
    }
    get levantamentoDescricao() {
      return super.levantamentoDescricao;
    }
    set levantamentoDescricao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.levantamentoDescricao = value;
    }
    get estradaDescricao() {
      return super.estradaDescricao;
    }
    set estradaDescricao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.estradaDescricao = value;
    }
    get estradaEstadoDeConservacao() {
      return super.estradaEstadoDeConservacao;
    }
    set estradaEstadoDeConservacao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.estradaEstadoDeConservacao = value;
    }
    get estradaTipoDePavimentacao() {
      return super.estradaTipoDePavimentacao;
    }
    set estradaTipoDePavimentacao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.estradaTipoDePavimentacao = value;
    }
    get estradaLarguraAproximada() {
      return super.estradaLarguraAproximada;
    }
    set estradaLarguraAproximada(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.estradaLarguraAproximada = value;
    }
    get estradaStart() {
      return super.estradaStart;
    }
    set estradaStart(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.estradaStart = value;
    }
    get estradaPointTimer() {
      return super.estradaPointTimer;
    }
    set estradaPointTimer(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.estradaPointTimer = value;
    }
    get lastEstradaPoint() {
      return super.lastEstradaPoint;
    }
    set lastEstradaPoint(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.lastEstradaPoint = value;
    }
    get buttonIniciarCapturaEstradaText() {
      return super.buttonIniciarCapturaEstradaText;
    }
    set buttonIniciarCapturaEstradaText(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonIniciarCapturaEstradaText = value;
    }
    get rotaEscolarDescricao() {
      return super.rotaEscolarDescricao;
    }
    set rotaEscolarDescricao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.rotaEscolarDescricao = value;
    }
    get rotaEscolarEstadoDeConservacao() {
      return super.rotaEscolarEstadoDeConservacao;
    }
    set rotaEscolarEstadoDeConservacao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.rotaEscolarEstadoDeConservacao = value;
    }
    get rotaEscolarTipoDePavimentacao() {
      return super.rotaEscolarTipoDePavimentacao;
    }
    set rotaEscolarTipoDePavimentacao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.rotaEscolarTipoDePavimentacao = value;
    }
    get rotaEscolarLarguraAproximada() {
      return super.rotaEscolarLarguraAproximada;
    }
    set rotaEscolarLarguraAproximada(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.rotaEscolarLarguraAproximada = value;
    }
    get rotaEscolarStart() {
      return super.rotaEscolarStart;
    }
    set rotaEscolarStart(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.rotaEscolarStart = value;
    }
    get rotaEscolarPointTimer() {
      return super.rotaEscolarPointTimer;
    }
    set rotaEscolarPointTimer(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.rotaEscolarPointTimer = value;
    }
    get lastRotaEscolarPoint() {
      return super.lastRotaEscolarPoint;
    }
    set lastRotaEscolarPoint(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.lastRotaEscolarPoint = value;
    }
    get buttonIniciarCapturaRotaEscolarText() {
      return super.buttonIniciarCapturaRotaEscolarText;
    }
    set buttonIniciarCapturaRotaEscolarText(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonIniciarCapturaRotaEscolarText = value;
    }
    get imovelGeoPointDescricao() {
      return super.imovelGeoPointDescricao;
    }
    set imovelGeoPointDescricao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.imovelGeoPointDescricao = value;
    }
    get imovelGeoPointTipo() {
      return super.imovelGeoPointTipo;
    }
    set imovelGeoPointTipo(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.imovelGeoPointTipo = value;
    }
    get imovelGeoPointStart() {
      return super.imovelGeoPointStart;
    }
    set imovelGeoPointStart(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.imovelGeoPointStart = value;
    }
    get buttonIniciarCapturaImovelText() {
      return super.buttonIniciarCapturaImovelText;
    }
    set buttonIniciarCapturaImovelText(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonIniciarCapturaImovelText = value;
    }
    get ponteDescricao() {
      return super.ponteDescricao;
    }
    set ponteDescricao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.ponteDescricao = value;
    }
    get ponteEstadoConservacao() {
      return super.ponteEstadoConservacao;
    }
    set ponteEstadoConservacao(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.ponteEstadoConservacao = value;
    }
    get ponteMaterial() {
      return super.ponteMaterial;
    }
    set ponteMaterial(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.ponteMaterial = value;
    }
    get ponteExtensaoAproximada() {
      return super.ponteExtensaoAproximada;
    }
    set ponteExtensaoAproximada(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.ponteExtensaoAproximada = value;
    }
    get ponteRioRiacho() {
      return super.ponteRioRiacho;
    }
    set ponteRioRiacho(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.ponteRioRiacho = value;
    }
    get ponteStart() {
      return super.ponteStart;
    }
    set ponteStart(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.ponteStart = value;
    }
    get buttonIniciarCapturaPonteText() {
      return super.buttonIniciarCapturaPonteText;
    }
    set buttonIniciarCapturaPonteText(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.buttonIniciarCapturaPonteText = value;
    }
    get selectedPonteImage() {
      return super.selectedPonteImage;
    }
    set selectedPonteImage(value) {
      return super.selectedPonteImage = value;
    }
    get isColected() {
      return super.isColected;
    }
    get isCidadeValid() {
      return super.isCidadeValid;
    }
    get tipoSelected() {
      return super.tipoSelected;
    }
    get isIdentValid() {
      return super.isIdentValid;
    }
    get isColorFinished() {
      return super.isColorFinished;
    }
    get isTipoVertice() {
      return super.isTipoVertice;
    }
    get isAllSincronized() {
      return super.isAllSincronized;
    }
    get isMarkerVisible() {
      return super.isMarkerVisible;
    }
    get isImovelUsing() {
      return super.isImovelUsing;
    }
    get isMapLoading() {
      return super.isMapLoading;
    }
    get isButtonsVisible() {
      return super.isButtonsVisible;
    }
    get isButtonIniciarNavegacaoVisible() {
      return super.isButtonIniciarNavegacaoVisible;
    }
    get isNavigationStarted() {
      return super.isNavigationStarted;
    }
    get isNavigationStartedWithoutCompass() {
      return super.isNavigationStartedWithoutCompass;
    }
    get hasSelectedRoute() {
      return super.hasSelectedRoute;
    }
    get isRouteDone() {
      return super.isRouteDone;
    }
    get isLevantamentoFormValid() {
      return super.isLevantamentoFormValid;
    }
    get isLevantamentoSincronizado() {
      return super.isLevantamentoSincronizado;
    }
    get isEstradaFormValid() {
      return super.isEstradaFormValid;
    }
    get isEstradaStarted() {
      return super.isEstradaStarted;
    }
    get isEstradaCaptureStarted() {
      return super.isEstradaCaptureStarted;
    }
    get isRotaEscolarFormValid() {
      return super.isRotaEscolarFormValid;
    }
    get isRotaEscolarStarted() {
      return super.isRotaEscolarStarted;
    }
    get isRotaEscolarCaptureStarted() {
      return super.isRotaEscolarCaptureStarted;
    }
    get isGeoPointFormValid() {
      return super.isGeoPointFormValid;
    }
    get isImovelStarted() {
      return super.isImovelStarted;
    }
    get isImovelCaptureStarted() {
      return super.isImovelCaptureStarted;
    }
    get isPonteFormValid() {
      return super.isPonteFormValid;
    }
    get isPonteStarted() {
      return super.isPonteStarted;
    }
    get isPonteCaptureStarted() {
      return super.isPonteCaptureStarted;
    }
    get [_$mAtom]() {
      return super[_$mAtom];
    }
    get [_$uAtom]() {
      return super[_$uAtom];
    }
    get [_$loggedInAtom]() {
      return super[_$loggedInAtom];
    }
    get [_$municipioSelectorEnabledAtom]() {
      return super[_$municipioSelectorEnabledAtom];
    }
    get [_$statusBarHeightAtom]() {
      return super[_$statusBarHeightAtom];
    }
    get [_$tipo_pontoAtom]() {
      return super[_$tipo_pontoAtom];
    }
    get [_$identificacaoAtom]() {
      return super[_$identificacaoAtom];
    }
    get [_$userPositionAtom]() {
      return super[_$userPositionAtom];
    }
    get [_$oldUserPositionAtom]() {
      return super[_$oldUserPositionAtom];
    }
    get [_$colorStateValueAtom]() {
      return super[_$colorStateValueAtom];
    }
    get [_$verticeActualValueAtom]() {
      return super[_$verticeActualValueAtom];
    }
    get [_$colectedAtom]() {
      return super[_$colectedAtom];
    }
    get [_$allSincronizedAtom]() {
      return super[_$allSincronizedAtom];
    }
    get [_$markers_visibleAtom]() {
      return super[_$markers_visibleAtom];
    }
    get [_$imovelAtom]() {
      return super[_$imovelAtom];
    }
    get [_$geoJsonFileNameAtom]() {
      return super[_$geoJsonFileNameAtom];
    }
    get [_$javaScriptFileNameAtom]() {
      return super[_$javaScriptFileNameAtom];
    }
    get [_$pathHtmlAtom]() {
      return super[_$pathHtmlAtom];
    }
    get [_$mapLoadingAtom]() {
      return super[_$mapLoadingAtom];
    }
    get [_$buttonsVisibilityAtom]() {
      return super[_$buttonsVisibilityAtom];
    }
    get [_$buttonIniciarNavegacaoVisibilityAtom]() {
      return super[_$buttonIniciarNavegacaoVisibilityAtom];
    }
    get [_$buttonIniciarNavegacaoTextAtom]() {
      return super[_$buttonIniciarNavegacaoTextAtom];
    }
    get [_$navigationHeadingAtom]() {
      return super[_$navigationHeadingAtom];
    }
    get [_$routePathAtom]() {
      return super[_$routePathAtom];
    }
    get [_$selectedImovelRouteAtom]() {
      return super[_$selectedImovelRouteAtom];
    }
    get [_$selectedLevantamentoAtom]() {
      return super[_$selectedLevantamentoAtom];
    }
    get [_$routeDoneAtom]() {
      return super[_$routeDoneAtom];
    }
    get [_$levantamentoDescricaoAtom]() {
      return super[_$levantamentoDescricaoAtom];
    }
    get [_$estradaDescricaoAtom]() {
      return super[_$estradaDescricaoAtom];
    }
    get [_$estradaEstadoDeConservacaoAtom]() {
      return super[_$estradaEstadoDeConservacaoAtom];
    }
    get [_$estradaTipoDePavimentacaoAtom]() {
      return super[_$estradaTipoDePavimentacaoAtom];
    }
    get [_$estradaLarguraAproximadaAtom]() {
      return super[_$estradaLarguraAproximadaAtom];
    }
    get [_$estradaStartAtom]() {
      return super[_$estradaStartAtom];
    }
    get [_$estradaPointTimerAtom]() {
      return super[_$estradaPointTimerAtom];
    }
    get [_$lastEstradaPointAtom]() {
      return super[_$lastEstradaPointAtom];
    }
    get [_$buttonIniciarCapturaEstradaTextAtom]() {
      return super[_$buttonIniciarCapturaEstradaTextAtom];
    }
    get [_$rotaEscolarDescricaoAtom]() {
      return super[_$rotaEscolarDescricaoAtom];
    }
    get [_$rotaEscolarEstadoDeConservacaoAtom]() {
      return super[_$rotaEscolarEstadoDeConservacaoAtom];
    }
    get [_$rotaEscolarTipoDePavimentacaoAtom]() {
      return super[_$rotaEscolarTipoDePavimentacaoAtom];
    }
    get [_$rotaEscolarLarguraAproximadaAtom]() {
      return super[_$rotaEscolarLarguraAproximadaAtom];
    }
    get [_$rotaEscolarStartAtom]() {
      return super[_$rotaEscolarStartAtom];
    }
    get [_$rotaEscolarPointTimerAtom]() {
      return super[_$rotaEscolarPointTimerAtom];
    }
    get [_$lastRotaEscolarPointAtom]() {
      return super[_$lastRotaEscolarPointAtom];
    }
    get [_$buttonIniciarCapturaRotaEscolarTextAtom]() {
      return super[_$buttonIniciarCapturaRotaEscolarTextAtom];
    }
    get [_$imovelGeoPointDescricaoAtom]() {
      return super[_$imovelGeoPointDescricaoAtom];
    }
    get [_$imovelGeoPointTipoAtom]() {
      return super[_$imovelGeoPointTipoAtom];
    }
    get [_$imovelGeoPointStartAtom]() {
      return super[_$imovelGeoPointStartAtom];
    }
    get [_$buttonIniciarCapturaImovelTextAtom]() {
      return super[_$buttonIniciarCapturaImovelTextAtom];
    }
    get [_$ponteDescricaoAtom]() {
      return super[_$ponteDescricaoAtom];
    }
    get [_$ponteEstadoConservacaoAtom]() {
      return super[_$ponteEstadoConservacaoAtom];
    }
    get [_$ponteMaterialAtom]() {
      return super[_$ponteMaterialAtom];
    }
    get [_$ponteExtensaoAproximadaAtom]() {
      return super[_$ponteExtensaoAproximadaAtom];
    }
    get [_$ponteRioRiachoAtom]() {
      return super[_$ponteRioRiachoAtom];
    }
    get [_$ponteStartAtom]() {
      return super[_$ponteStartAtom];
    }
    get [_$buttonIniciarCapturaPonteTextAtom]() {
      return super[_$buttonIniciarCapturaPonteTextAtom];
    }
    get [_$selectedPonteImageAtom]() {
      return super[_$selectedPonteImageAtom];
    }
    get [_$_LoginDataStoreActionController]() {
      return super[_$_LoginDataStoreActionController];
    }
    setMunicipio(municipio) {
      if (municipio == null) dart.nullFailed(I[14], 23, 7, "municipio");
      return super.setMunicipio(municipio);
    }
    setUser(user) {
      if (user == null) dart.nullFailed(I[14], 23, 7, "user");
      return super.setUser(user);
    }
    login() {
      return super.login();
    }
    logout() {
      return super.logout();
    }
    setStatusBarHeight(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setStatusBarHeight(d);
    }
    setTipo(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setTipo(value);
    }
    setIdent(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setIdent(value);
    }
    setUserPosition(position) {
      if (position == null) dart.nullFailed(I[14], 23, 7, "position");
      return super.setUserPosition(position);
    }
    setColorStateValue(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setColorStateValue(value);
    }
    setVerticeActualValue(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setVerticeActualValue(value);
    }
    setCollected(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setCollected(value);
    }
    setAllSincronized(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setAllSincronized(value);
    }
    toggleMarkers() {
      return super.toggleMarkers();
    }
    setMarkersVisibility(value) {
      if (value == null) dart.nullFailed(I[14], 23, 7, "value");
      return super.setMarkersVisibility(value);
    }
    setImovel(im) {
      if (im == null) dart.nullFailed(I[14], 23, 7, "im");
      return super.setImovel(im);
    }
    setGeoJsonFileName(f) {
      if (f == null) dart.nullFailed(I[14], 23, 7, "f");
      return super.setGeoJsonFileName(f);
    }
    setJavaScriptFileName(f) {
      if (f == null) dart.nullFailed(I[14], 23, 7, "f");
      return super.setJavaScriptFileName(f);
    }
    setPathHtml(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setPathHtml(s);
    }
    setMapLoading(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setMapLoading(b);
    }
    setButtonsVisibility(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setButtonsVisibility(b);
    }
    setButtonIniciarNavegacaoVisibility(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setButtonIniciarNavegacaoVisibility(b);
    }
    setButtonIniciarNavegacaoText(T) {
      if (T == null) dart.nullFailed(I[14], 23, 7, "T");
      return super.setButtonIniciarNavegacaoText(T);
    }
    setNavigationHeading(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setNavigationHeading(d);
    }
    addMunicipioList(m) {
      if (m == null) dart.nullFailed(I[14], 23, 7, "m");
      return super.addMunicipioList(m);
    }
    clearMunicipioList() {
      return super.clearMunicipioList();
    }
    setRoutPath(p) {
      if (p == null) dart.nullFailed(I[14], 23, 7, "p");
      return super.setRoutPath(p);
    }
    addImovelRoute(i) {
      if (i == null) dart.nullFailed(I[14], 23, 7, "i");
      return super.addImovelRoute(i);
    }
    clearImovelRoute() {
      return super.clearImovelRoute();
    }
    addLatLngRoute(l) {
      if (l == null) dart.nullFailed(I[14], 23, 7, "l");
      return super.addLatLngRoute(l);
    }
    clearLatLngRoute() {
      return super.clearLatLngRoute();
    }
    setSelectedImovelRoute(i) {
      if (i == null) dart.nullFailed(I[14], 23, 7, "i");
      return super.setSelectedImovelRoute(i);
    }
    setSelectedLevantamento(l) {
      if (l == null) dart.nullFailed(I[14], 23, 7, "l");
      return super.setSelectedLevantamento(l);
    }
    setRouteDone(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setRouteDone(b);
    }
    clearButtons() {
      return super.clearButtons();
    }
    setLevantamentoDescricao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setLevantamentoDescricao(d);
    }
    addLevantamentosList(l) {
      if (l == null) dart.nullFailed(I[14], 23, 7, "l");
      return super.addLevantamentosList(l);
    }
    clearLevantamentosList() {
      return super.clearLevantamentosList();
    }
    addLevantamentosAsyncList(l) {
      if (l == null) dart.nullFailed(I[14], 23, 7, "l");
      return super.addLevantamentosAsyncList(l);
    }
    clearLevantamentosAsyncList() {
      return super.clearLevantamentosAsyncList();
    }
    setEstradaDescricao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setEstradaDescricao(d);
    }
    setEstradaConservacao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setEstradaConservacao(d);
    }
    setEstradaPavimentacao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setEstradaPavimentacao(d);
    }
    setEstradaLargura(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setEstradaLargura(d);
    }
    setEstradaStart(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setEstradaStart(b);
    }
    setEstradaPointTimer(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setEstradaPointTimer(s);
    }
    setLastEstradaPoint(l) {
      if (l == null) dart.nullFailed(I[14], 23, 7, "l");
      return super.setLastEstradaPoint(l);
    }
    setButtonIniciarCapturaEstrada(T) {
      if (T == null) dart.nullFailed(I[14], 23, 7, "T");
      return super.setButtonIniciarCapturaEstrada(T);
    }
    clearEstradaData() {
      return super.clearEstradaData();
    }
    addEstradaPointList(e) {
      if (e == null) dart.nullFailed(I[14], 23, 7, "e");
      return super.addEstradaPointList(e);
    }
    clearEstradaPointList() {
      return super.clearEstradaPointList();
    }
    addEstradaPointAsyncList(e) {
      if (e == null) dart.nullFailed(I[14], 23, 7, "e");
      return super.addEstradaPointAsyncList(e);
    }
    clearEstradaPointAsyncList() {
      return super.clearEstradaPointAsyncList();
    }
    setRotaEscolarDescricao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setRotaEscolarDescricao(d);
    }
    setRotaEscolarConservacao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setRotaEscolarConservacao(d);
    }
    setRotaEscolarPavimentacao(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setRotaEscolarPavimentacao(d);
    }
    setRotaEscolarLargura(d) {
      if (d == null) dart.nullFailed(I[14], 23, 7, "d");
      return super.setRotaEscolarLargura(d);
    }
    setRotaEscolarStart(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setRotaEscolarStart(b);
    }
    setRotaEscolarPointTimer(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setRotaEscolarPointTimer(s);
    }
    setLastRotaEscolarPoint(l) {
      if (l == null) dart.nullFailed(I[14], 23, 7, "l");
      return super.setLastRotaEscolarPoint(l);
    }
    setButtonIniciarCapturaRotaEscolar(T) {
      if (T == null) dart.nullFailed(I[14], 23, 7, "T");
      return super.setButtonIniciarCapturaRotaEscolar(T);
    }
    clearRotaEscolarData() {
      return super.clearRotaEscolarData();
    }
    addRotaEscolarPointList(r) {
      if (r == null) dart.nullFailed(I[14], 23, 7, "r");
      return super.addRotaEscolarPointList(r);
    }
    clearRotaEscolarPointList() {
      return super.clearRotaEscolarPointList();
    }
    addRotaEscolarPointAsyncList(r) {
      if (r == null) dart.nullFailed(I[14], 23, 7, "r");
      return super.addRotaEscolarPointAsyncList(r);
    }
    clearRotaEscolarPointAsyncList() {
      return super.clearRotaEscolarPointAsyncList();
    }
    setImovelStart(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setImovelStart(b);
    }
    setImovelDescricao(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setImovelDescricao(s);
    }
    setImovelTipo(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setImovelTipo(s);
    }
    setButtonIniciarCapturaImovel(T) {
      if (T == null) dart.nullFailed(I[14], 23, 7, "T");
      return super.setButtonIniciarCapturaImovel(T);
    }
    clearImovelGeoPointsData() {
      return super.clearImovelGeoPointsData();
    }
    addImovelGeoPointList(i) {
      if (i == null) dart.nullFailed(I[14], 23, 7, "i");
      return super.addImovelGeoPointList(i);
    }
    clearImovelGeoPointList() {
      return super.clearImovelGeoPointList();
    }
    addImovelGeoPointAsyncList(i) {
      if (i == null) dart.nullFailed(I[14], 23, 7, "i");
      return super.addImovelGeoPointAsyncList(i);
    }
    clearImovelGeoPointAsyncList() {
      return super.clearImovelGeoPointAsyncList();
    }
    setPonteStart(b) {
      if (b == null) dart.nullFailed(I[14], 23, 7, "b");
      return super.setPonteStart(b);
    }
    setButtonIniciarCapturaPonte(T) {
      if (T == null) dart.nullFailed(I[14], 23, 7, "T");
      return super.setButtonIniciarCapturaPonte(T);
    }
    setPonteDescricao(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setPonteDescricao(s);
    }
    setPonteEstadoConservacao(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setPonteEstadoConservacao(s);
    }
    setPonteMaterial(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setPonteMaterial(s);
    }
    setPonteExtensaoAproximada(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setPonteExtensaoAproximada(s);
    }
    setPonteRioRiacho(s) {
      if (s == null) dart.nullFailed(I[14], 23, 7, "s");
      return super.setPonteRioRiacho(s);
    }
    addPonteList(p) {
      if (p == null) dart.nullFailed(I[14], 23, 7, "p");
      return super.addPonteList(p);
    }
    clearPonteList() {
      return super.clearPonteList();
    }
    addPonteAsyncList(p) {
      if (p == null) dart.nullFailed(I[14], 23, 7, "p");
      return super.addPonteAsyncList(p);
    }
    clearPonteAsyncList() {
      return super.clearPonteAsyncList();
    }
    addPonteImagesList(o) {
      if (o == null) dart.nullFailed(I[14], 23, 7, "o");
      return super.addPonteImagesList(o);
    }
    addPonteImageLastPosition() {
      return super.addPonteImageLastPosition();
    }
    removePonteBlankImages() {
      return super.removePonteBlankImages();
    }
    clearPonteImages() {
      return super.clearPonteImages();
    }
    setSelectedPonteImage(p) {
      if (p == null) dart.nullFailed(I[14], 23, 7, "p");
      return super.setSelectedPonteImage(p);
    }
    fullDataClear() {
      return super.fullDataClear();
    }
    toString() {
      return super.toString();
    }
  };
  (login_data_store.LoginDataStore.new = function() {
    login_data_store.LoginDataStore.__proto__.new.call(this);
    ;
  }).prototype = login_data_store.LoginDataStore.prototype;
  dart.addTypeTests(login_data_store.LoginDataStore);
  dart.addTypeCaches(login_data_store.LoginDataStore);
  dart.setGetterSignature(login_data_store.LoginDataStore, () => ({
    __proto__: dart.getGetters(login_data_store.LoginDataStore.__proto__),
    [_$isColectedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isCidadeValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$tipoSelectedComputed]: dart.nullable(core$.Computed$(core.int)),
    [_$isIdentValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isColorFinishedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isTipoVerticeComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isAllSincronizedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isMarkerVisibleComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isImovelUsingComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isMapLoadingComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isButtonsVisibleComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isButtonIniciarNavegacaoVisibleComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isNavigationStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isNavigationStartedWithoutCompassComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$hasSelectedRouteComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRouteDoneComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isLevantamentoFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isLevantamentoSincronizadoComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isEstradaFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isEstradaStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isEstradaCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRotaEscolarFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRotaEscolarStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRotaEscolarCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isGeoPointFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isImovelStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isImovelCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isPonteFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isPonteStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isPonteCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    m: municipio.Municipio,
    u: user$.User,
    loggedIn: core.bool,
    municipioSelectorEnabled: core.bool,
    statusBarHeight: core.double,
    tipo_ponto: core.int,
    identificacao: core.String,
    userPosition: dart.nullable(position.Position),
    oldUserPosition: dart.nullable(position.Position),
    colorStateValue: core.int,
    verticeActualValue: core.int,
    colected: core.bool,
    allSincronized: core.bool,
    markers_visible: core.bool,
    imovel: imovel$.Imovel,
    geoJsonFileName: core.String,
    javaScriptFileName: core.String,
    pathHtml: core.String,
    mapLoading: core.bool,
    buttonsVisibility: core.bool,
    buttonIniciarNavegacaoVisibility: core.bool,
    buttonIniciarNavegacaoText: core.String,
    navigationHeading: core.double,
    routePath: latlong.Path$(latlong.LatLng),
    selectedImovelRoute: ImovelRoute.ImovelRoute,
    selectedLevantamento: Levantamento.Levantamento,
    routeDone: core.bool,
    levantamentoDescricao: core.String,
    estradaDescricao: core.String,
    estradaEstadoDeConservacao: core.String,
    estradaTipoDePavimentacao: core.String,
    estradaLarguraAproximada: core.String,
    estradaStart: core.bool,
    estradaPointTimer: core.String,
    lastEstradaPoint: location.LatLng,
    buttonIniciarCapturaEstradaText: core.String,
    rotaEscolarDescricao: core.String,
    rotaEscolarEstadoDeConservacao: core.String,
    rotaEscolarTipoDePavimentacao: core.String,
    rotaEscolarLarguraAproximada: core.String,
    rotaEscolarStart: core.bool,
    rotaEscolarPointTimer: core.String,
    lastRotaEscolarPoint: location.LatLng,
    buttonIniciarCapturaRotaEscolarText: core.String,
    imovelGeoPointDescricao: core.String,
    imovelGeoPointTipo: core.String,
    imovelGeoPointStart: core.bool,
    buttonIniciarCapturaImovelText: core.String,
    ponteDescricao: core.String,
    ponteEstadoConservacao: core.String,
    ponteMaterial: core.String,
    ponteExtensaoAproximada: core.String,
    ponteRioRiacho: core.String,
    ponteStart: core.bool,
    buttonIniciarCapturaPonteText: core.String,
    selectedPonteImage: dart.nullable(PontePoint.PonteImage),
    [_$mAtom]: core$.Atom,
    [_$uAtom]: core$.Atom,
    [_$loggedInAtom]: core$.Atom,
    [_$municipioSelectorEnabledAtom]: core$.Atom,
    [_$statusBarHeightAtom]: core$.Atom,
    [_$tipo_pontoAtom]: core$.Atom,
    [_$identificacaoAtom]: core$.Atom,
    [_$userPositionAtom]: core$.Atom,
    [_$oldUserPositionAtom]: core$.Atom,
    [_$colorStateValueAtom]: core$.Atom,
    [_$verticeActualValueAtom]: core$.Atom,
    [_$colectedAtom]: core$.Atom,
    [_$allSincronizedAtom]: core$.Atom,
    [_$markers_visibleAtom]: core$.Atom,
    [_$imovelAtom]: core$.Atom,
    [_$geoJsonFileNameAtom]: core$.Atom,
    [_$javaScriptFileNameAtom]: core$.Atom,
    [_$pathHtmlAtom]: core$.Atom,
    [_$mapLoadingAtom]: core$.Atom,
    [_$buttonsVisibilityAtom]: core$.Atom,
    [_$buttonIniciarNavegacaoVisibilityAtom]: core$.Atom,
    [_$buttonIniciarNavegacaoTextAtom]: core$.Atom,
    [_$navigationHeadingAtom]: core$.Atom,
    [_$routePathAtom]: core$.Atom,
    [_$selectedImovelRouteAtom]: core$.Atom,
    [_$selectedLevantamentoAtom]: core$.Atom,
    [_$routeDoneAtom]: core$.Atom,
    [_$levantamentoDescricaoAtom]: core$.Atom,
    [_$estradaDescricaoAtom]: core$.Atom,
    [_$estradaEstadoDeConservacaoAtom]: core$.Atom,
    [_$estradaTipoDePavimentacaoAtom]: core$.Atom,
    [_$estradaLarguraAproximadaAtom]: core$.Atom,
    [_$estradaStartAtom]: core$.Atom,
    [_$estradaPointTimerAtom]: core$.Atom,
    [_$lastEstradaPointAtom]: core$.Atom,
    [_$buttonIniciarCapturaEstradaTextAtom]: core$.Atom,
    [_$rotaEscolarDescricaoAtom]: core$.Atom,
    [_$rotaEscolarEstadoDeConservacaoAtom]: core$.Atom,
    [_$rotaEscolarTipoDePavimentacaoAtom]: core$.Atom,
    [_$rotaEscolarLarguraAproximadaAtom]: core$.Atom,
    [_$rotaEscolarStartAtom]: core$.Atom,
    [_$rotaEscolarPointTimerAtom]: core$.Atom,
    [_$lastRotaEscolarPointAtom]: core$.Atom,
    [_$buttonIniciarCapturaRotaEscolarTextAtom]: core$.Atom,
    [_$imovelGeoPointDescricaoAtom]: core$.Atom,
    [_$imovelGeoPointTipoAtom]: core$.Atom,
    [_$imovelGeoPointStartAtom]: core$.Atom,
    [_$buttonIniciarCapturaImovelTextAtom]: core$.Atom,
    [_$ponteDescricaoAtom]: core$.Atom,
    [_$ponteEstadoConservacaoAtom]: core$.Atom,
    [_$ponteMaterialAtom]: core$.Atom,
    [_$ponteExtensaoAproximadaAtom]: core$.Atom,
    [_$ponteRioRiachoAtom]: core$.Atom,
    [_$ponteStartAtom]: core$.Atom,
    [_$buttonIniciarCapturaPonteTextAtom]: core$.Atom,
    [_$selectedPonteImageAtom]: core$.Atom,
    [_$_LoginDataStoreActionController]: core$.ActionController
  }));
  dart.setSetterSignature(login_data_store.LoginDataStore, () => ({
    __proto__: dart.getSetters(login_data_store.LoginDataStore.__proto__),
    [_$isColectedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isCidadeValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$tipoSelectedComputed]: dart.nullable(core$.Computed$(core.int)),
    [_$isIdentValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isColorFinishedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isTipoVerticeComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isAllSincronizedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isMarkerVisibleComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isImovelUsingComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isMapLoadingComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isButtonsVisibleComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isButtonIniciarNavegacaoVisibleComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isNavigationStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isNavigationStartedWithoutCompassComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$hasSelectedRouteComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRouteDoneComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isLevantamentoFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isLevantamentoSincronizadoComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isEstradaFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isEstradaStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isEstradaCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRotaEscolarFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRotaEscolarStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isRotaEscolarCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isGeoPointFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isImovelStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isImovelCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isPonteFormValidComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isPonteStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    [_$isPonteCaptureStartedComputed]: dart.nullable(core$.Computed$(core.bool)),
    m: municipio.Municipio,
    u: user$.User,
    loggedIn: core.bool,
    municipioSelectorEnabled: core.bool,
    statusBarHeight: core.double,
    tipo_ponto: core.int,
    identificacao: core.String,
    userPosition: dart.nullable(position.Position),
    oldUserPosition: dart.nullable(position.Position),
    colorStateValue: core.int,
    verticeActualValue: core.int,
    colected: core.bool,
    allSincronized: core.bool,
    markers_visible: core.bool,
    imovel: imovel$.Imovel,
    geoJsonFileName: core.String,
    javaScriptFileName: core.String,
    pathHtml: core.String,
    mapLoading: core.bool,
    buttonsVisibility: core.bool,
    buttonIniciarNavegacaoVisibility: core.bool,
    buttonIniciarNavegacaoText: core.String,
    navigationHeading: core.double,
    routePath: latlong.Path$(latlong.LatLng),
    selectedImovelRoute: ImovelRoute.ImovelRoute,
    selectedLevantamento: Levantamento.Levantamento,
    routeDone: core.bool,
    levantamentoDescricao: core.String,
    estradaDescricao: core.String,
    estradaEstadoDeConservacao: core.String,
    estradaTipoDePavimentacao: core.String,
    estradaLarguraAproximada: core.String,
    estradaStart: core.bool,
    estradaPointTimer: core.String,
    lastEstradaPoint: location.LatLng,
    buttonIniciarCapturaEstradaText: core.String,
    rotaEscolarDescricao: core.String,
    rotaEscolarEstadoDeConservacao: core.String,
    rotaEscolarTipoDePavimentacao: core.String,
    rotaEscolarLarguraAproximada: core.String,
    rotaEscolarStart: core.bool,
    rotaEscolarPointTimer: core.String,
    lastRotaEscolarPoint: location.LatLng,
    buttonIniciarCapturaRotaEscolarText: core.String,
    imovelGeoPointDescricao: core.String,
    imovelGeoPointTipo: core.String,
    imovelGeoPointStart: core.bool,
    buttonIniciarCapturaImovelText: core.String,
    ponteDescricao: core.String,
    ponteEstadoConservacao: core.String,
    ponteMaterial: core.String,
    ponteExtensaoAproximada: core.String,
    ponteRioRiacho: core.String,
    ponteStart: core.bool,
    buttonIniciarCapturaPonteText: core.String,
    selectedPonteImage: dart.nullable(PontePoint.PonteImage)
  }));
  dart.setLibraryUri(login_data_store.LoginDataStore, I[15]);
  dart.defineExtensionMethods(login_data_store.LoginDataStore, ['toString']);
  dart.trackLibraries("packages/app_itr/helpers/classes/user.dart", {
    "package:app_itr/helpers/classes/user.dart": user$,
    "package:app_itr/helpers/classes/municipio.dart": municipio,
    "package:app_itr/helpers/classes/imovel.dart": imovel$,
    "package:app_itr/helpers/classes/PontePoint.dart": PontePoint,
    "package:app_itr/helpers/classes/ImovelRoute.dart": ImovelRoute,
    "package:app_itr/helpers/db.dart": db$,
    "package:app_itr/helpers/classes/ImovelGeoPoint.dart": ImovelGeoPoint,
    "package:app_itr/stores/login_data_store.dart": login_data_store
  }, {
    "package:app_itr/stores/login_data_store.dart": ["login_data_store.g.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["user.dart","municipio.dart","imovel.dart","PontePoint.dart","ImovelRoute.dart","../db.dart","ImovelGeoPoint.dart","../../stores/login_data_store.dart","../../stores/login_data_store.g.dart"],"names":[],"mappings":"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","file":"../../../../../../../../packages/app_itr/helpers/classes/user.dart.lib.js"}');
  // Exports:
  return {
    helpers__classes__user: user$,
    helpers__classes__municipio: municipio,
    helpers__classes__imovel: imovel$,
    helpers__classes__PontePoint: PontePoint,
    helpers__classes__ImovelRoute: ImovelRoute,
    helpers__db: db$,
    helpers__classes__ImovelGeoPoint: ImovelGeoPoint,
    stores__login_data_store: login_data_store
  };
}));

//# sourceMappingURL=user.dart.lib.js.map
